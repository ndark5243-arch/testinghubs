local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/ndark5243-arch/sourcesss/refs/heads/main/Main.txt"))()

local Window = redzlib:MakeWindow({
    Title = "Linux hub | Brookhaven RP üè°",
    SubTitle = "by: „Åì„Çì„Å´„Å°„ÅØ„É©„Ç¶„É≥„Éâ„Åæ„Åü„ÇÇ„Å£„Å®1„Å§ÊôÇÈñì„É≥„É≥, LinuxHubdev",
    SaveFolder = "Linux hub_Brookhaven"
})

Window:AddMinimizeButton({
    Button = { Image = "rbxassetid://91276493949227", BackgroundTransparency = 0 },
    Corner = { CornerRadius = UDim.new(35, 1) },
})

local ImunesTab = Window:MakeTab({"Prote√ß√£o", "shield"})

-- Servi√ßos
local LocalPlayer = game:GetService("Players").LocalPlayer
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")


local function moveToBackup(obj, backupTable)
    table.insert(backupTable, { object = obj, originalParent = obj.Parent })
    obj.Parent = nil -- Remove do jogo sem destruir
end

local function restoreFromBackup(backupTable)
    for _, data in ipairs(backupTable) do
        if data.object and data.originalParent then
            data.object.Parent = data.originalParent
        end
    end
    table.clear(backupTable)
end

local removedVehicles, removedCanoes, removedJets, removedHelis, removedBalls = {}, {}, {}, {}, {}
local antiVehicleConnection, antiCanoeConnection, antiJetConnection, antiHeliConnection, antiBallConnection, antiSitConnection


ImunesTab:AddSection({ Name = "Scripts de Prote√ß√£o Linux Hub" })

ImunesTab:AddButton({
    Name = "Anti Freeze",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Shadow6698/anttroll/refs/heads/main/Main.txt"))()
    end
})

ImunesTab:AddButton({
    Name = " Anti Chaos Hub",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ShadowsHubseila/Ant-chaos-hub/refs/heads/main/Ant"))()
    end
})

ImunesTab:AddButton({
    Name = "Anti Som",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Shadow6698/antsomv2/refs/heads/main/Main.txt"))()
    end
})


ImunesTab:AddSection({ Name = "Anti Flings" })


ImunesTab:AddToggle({
    Name = "Anti Fling Ve√≠culos",
    Default = false,
    Callback = function(state)
        if state then
            antiVehicleConnection = RunService.Heartbeat:Connect(function()
                local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
                if vehiclesFolder then
                    for _, vehicle in ipairs(vehiclesFolder:GetChildren()) do
                        local isMeu = false
                        for _, seat in ipairs(vehicle:GetDescendants()) do
                            if (seat:IsA("VehicleSeat") or seat:IsA("Seat")) and seat.Occupant and seat.Occupant.Parent == LocalPlayer.Character then
                                isMeu = true
                                break
                            end
                        end
                        if not isMeu and vehicle.Parent == vehiclesFolder then
                            moveToBackup(vehicle, removedVehicles)
                        end
                    end
                end
            end)
        else
            if antiVehicleConnection then antiVehicleConnection:Disconnect() end
            restoreFromBackup(removedVehicles)
        end
    end
})


ImunesTab:AddToggle({
    Name = " Anti Canoe Fling",
    Default = false,
    Callback = function(state)
        if state then
            antiCanoeConnection = RunService.Heartbeat:Connect(function()
                local storage = Workspace:FindFirstChild("WorkspaceCom") and Workspace.WorkspaceCom:FindFirstChild("001_CanoeStorage")
                if storage then
                    for _, canoe in ipairs(storage:GetChildren()) do
                        local dono = canoe:FindFirstChild("Owner")
                        if not dono or dono.Value ~= LocalPlayer then
                            if canoe.Parent == storage then
                                moveToBackup(canoe, removedCanoes)
                            end
                        end
                    end
                end
            end)
        else
            if antiCanoeConnection then antiCanoeConnection:Disconnect() end
            restoreFromBackup(removedCanoes)
        end
    end
})


ImunesTab:AddToggle({
    Name = "Anti Fling Jets",
    Default = false,
    Callback = function(state)
        if state then
            antiJetConnection = RunService.Heartbeat:Connect(function()
                local jetFolder = Workspace:FindFirstChild("WorkspaceCom")
                if jetFolder and jetFolder:FindFirstChild("001_Airport") then
                    local storage = jetFolder["001_Airport"]:FindFirstChild("AirportHanger")
                    if storage and storage:FindFirstChild("001_JetStorage") and storage["001_JetStorage"]:FindFirstChild("JetAirport") then
                        for _, jet in ipairs(storage["001_JetStorage"].JetAirport:GetChildren()) do
                            if jet.Name ~= LocalPlayer.Name and jet.Parent == storage["001_JetStorage"].JetAirport then
                                moveToBackup(jet, removedJets)
                            end
                        end
                    end
                end
            end)
        else
            if antiJetConnection then antiJetConnection:Disconnect() end
            restoreFromBackup(removedJets)
        end
    end
})


ImunesTab:AddToggle({
    Name = " Anti Fling Helic√≥pteros",
    Default = false,
    Callback = function(state)
        if state then
            antiHeliConnection = RunService.Heartbeat:Connect(function()
                local heliFolder = Workspace:FindFirstChild("WorkspaceCom") and Workspace.WorkspaceCom:FindFirstChild("001_HeliStorage")
                if heliFolder and heliFolder:FindFirstChild("PoliceStationHeli") then
                    for _, heli in ipairs(heliFolder.PoliceStationHeli:GetChildren()) do
                        if heli.Name ~= LocalPlayer.Name and heli.Parent == heliFolder.PoliceStationHeli then
                            moveToBackup(heli, removedHelis)
                        end
                    end
                end
            end)
        else
            if antiHeliConnection then antiHeliConnection:Disconnect() end
            restoreFromBackup(removedHelis)
        end
    end
})


ImunesTab:AddToggle({
    Name = "Anti Fling Ball",
    Default = false,
    Callback = function(state)
        if state then
            antiBallConnection = RunService.Heartbeat:Connect(function()
                local ballFolder = Workspace:FindFirstChild("WorkspaceCom") and Workspace.WorkspaceCom:FindFirstChild("001_SoccerBalls")
                if ballFolder then
                    for _, ball in ipairs(ballFolder:GetChildren()) do
                        if ball.Parent == ballFolder then
                            moveToBackup(ball, removedBalls)
                        end
                    end
                end
            end)
        else
            if antiBallConnection then antiBallConnection:Disconnect() end
            restoreFromBackup(removedBalls)
        end
    end
})


ImunesTab:AddSection({ Name = "Anti Sit & Anti Lag & Anti Fling Porta" })

ImunesTab:AddToggle({
    Name = "Anti Sit",
    Default = false,
    Callback = function(state)
        if state then
            antiSitConnection = RunService.Heartbeat:Connect(function()
                local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
                    if humanoid:GetState() == Enum.HumanoidStateType.Seated then
                        humanoid:ChangeState(Enum.HumanoidStateType.Running)
                    end
                    if humanoid.SeatPart then
                        humanoid.Sit = false
                        humanoid.SeatPart = nil
                    end
                end
            end)
        else
            if antiSitConnection then antiSitConnection:Disconnect() end
            local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
            end
        end
    end
})


ImunesTab:AddToggle({
    Name = "Anti-Lag (Todas Tools)",
    Description = "Ativa ou desativa a deduplica√ß√£o de todas as ferramentas",
    Default = false,
    Callback = function(state)
        local Players = game:GetService("Players")
        local dedupLock = {}
        local IGNORED_PLAYER -- jogador que executou

        if not state then
            -- Toggle desativada, para automaticamente
            return
        end

        -- Marca automaticamente quem executou o script
        local function marcarIgnorado(player)
            IGNORED_PLAYER = player
        end

        -- Aceita qualquer Tool
        local function isTargetTool(inst)
            return inst:IsA("Tool")
        end

        local function gatherTools(player)
            local found = {}
            local containers = {}

            if player.Character then table.insert(containers, player.Character) end
            local backpack = player:FindFirstChildOfClass("Backpack")
            if backpack then table.insert(containers, backpack) end
            local sg = player:FindFirstChild("StarterGear")
            if sg then table.insert(containers, sg) end

            for _, container in ipairs(containers) do
                for _, child in ipairs(container:GetChildren()) do
                    if isTargetTool(child) then
                        table.insert(found, child)
                    end
                end
            end

            return found
        end

        local function dedupePlayer(player)
            if player == IGNORED_PLAYER then return end
            if dedupLock[player] then return end
            dedupLock[player] = true

            local tools = gatherTools(player)
            if #tools > 1 then
                for i = 2, #tools do
                    pcall(function() tools[i]:Destroy() end)
                end
            end

            dedupLock[player] = false
        end

        local function hookPlayer(player)
            if not IGNORED_PLAYER then
                marcarIgnorado(player)
            end

            task.defer(dedupePlayer, player)

            local function setupChar(char)
                task.delay(0.5, function() dedupePlayer(player) end)
                char.ChildAdded:Connect(function(child)
                    if isTargetTool(child) then
                        task.delay(0.1, function() dedupePlayer(player) end)
                    end
                end)
            end

            if player.Character then
                setupChar(player.Character)
            end
            player.CharacterAdded:Connect(setupChar)

            local backpack = player:WaitForChild("Backpack", 10)
            if backpack then
                backpack.ChildAdded:Connect(function(child)
                    if isTargetTool(child) then
                        task.delay(0.1, function() dedupePlayer(player) end)
                    end
                end)
            end

            local sg = player:FindFirstChild("StarterGear") or player:WaitForChild("StarterGear", 10)
            if sg then
                sg.ChildAdded:Connect(function(child)
                    if isTargetTool(child) then
                        task.delay(0.1, function() dedupePlayer(player) end)
                    end
                end)
            end
        end

        Players.PlayerAdded:Connect(hookPlayer)
        for _, plr in ipairs(Players:GetPlayers()) do
            hookPlayer(plr)
        end

        -- Varredura peri√≥dica
        task.spawn(function()
            while state do
                for _, plr in ipairs(Players:GetPlayers()) do
                    dedupePlayer(plr)
                end
                task.wait(2)
            end
        end)
    end
})


ImunesTab:AddToggle({
    Name = "Anti Fling Porta",
    Description = "Ativa ou desativa a destrui√ß√£o de todas as portas do mapa",
    Default = false,
    Callback = function(state)
        -- Cria vari√°vel persistente se n√£o existir
        if not _G.hiddenDoors then
            _G.hiddenDoors = {}
        end
        
        if state then
            -- Limpa dados anteriores antes de come√ßar
            _G.hiddenDoors = {}
            
            -- Ativa: esconde portas (n√£o remove, s√≥ torna invis√≠veis)
            for _, obj in ipairs(workspace:GetDescendants()) do
                if obj:IsA("BasePart") and obj.Name:lower():find("door") then
                    -- Salva o estado original
                    local doorData = {
                        door = obj,
                        originalTransparency = obj.Transparency,
                        originalCanCollide = obj.CanCollide,
                        originalCastShadow = obj.CastShadow
                    }
                    
                    -- Esconde a porta (mant√©m funcionalidade)
                    obj.Transparency = 1
                    obj.CanCollide = false
                    obj.CastShadow = false
                    
                    -- Esconde filhos se houver (ma√ßanetas, etc)
                    for _, child in ipairs(obj:GetChildren()) do
                        if child:IsA("BasePart") then
                            child.Transparency = 1
                            child.CanCollide = false
                        elseif child:IsA("SurfaceGui") or child:IsA("BillboardGui") then
                            child.Enabled = false
                        end
                    end
                    
                    table.insert(_G.hiddenDoors, doorData)
                end
            end
            print("üîß " .. #_G.hiddenDoors .. " portas escondidas!")
            
        else
            -- Desativa: restaura portas (volta ao estado original)
            for _, doorData in ipairs(_G.hiddenDoors or {}) do
                if doorData.door and doorData.door.Parent then
                    -- Restaura propriedades originais
                    doorData.door.Transparency = doorData.originalTransparency
                    doorData.door.CanCollide = doorData.originalCanCollide
                    doorData.door.CastShadow = doorData.originalCastShadow
                    
                    -- Restaura filhos
                    for _, child in ipairs(doorData.door:GetChildren()) do
                        if child:IsA("BasePart") then
                            child.Transparency = 0
                            child.CanCollide = true
                        elseif child:IsA("SurfaceGui") or child:IsA("BillboardGui") then
                            child.Enabled = true
                        end
                    end
                end
            end
            
            print("‚úÖ " .. #(_G.hiddenDoors or {}) .. " portas restauradas com funcionalidade!")
            _G.hiddenDoors = {} -- Limpa a lista
        end
    end
})


ImunesTab:AddToggle({
    Name = "Sumir Jogador",
    Description = "Ativa ou desativa o sumi√ßo do jogador escolhido",
    Default = false,
    Callback = function(state)
        local Players = game:GetService("Players")
        local StarterGui = game:GetService("StarterGui")
        local LocalPlayer = Players.LocalPlayer

        -- Vari√°veis persistentes
        if not _G.hiddenPlayers then
            _G.hiddenPlayers = {}
        end
        if not _G.selectedPlayerName then
            _G.selectedPlayerName = ""
        end

        -- Caixa de texto para digitar o nome do jogador
        if not _G.playerTextboxCreated then
            ImunesTab:AddTextBox({
                Name = "Nome do Jogador",
                Description = "Digite o nome para sumir/aparecer",
                PlaceholderText = "Digite o nome...",
                Callback = function(input)
                    _G.selectedPlayerName = input
                    if input ~= "" then
                        local found = nil
                        for _, p in ipairs(Players:GetPlayers()) do
                            if string.find(string.lower(p.Name), string.lower(input)) then
                                found = p
                                break
                            end
                        end
                        if found then
                            StarterGui:SetCore("SendNotification", {
                                Title = "‚úÖ Jogador encontrado",
                                Text = found.Name,
                                Duration = 3
                            })
                        else
                            StarterGui:SetCore("SendNotification", {
                                Title = "‚ùå Erro",
                                Text = "Jogador '" .. input .. "' n√£o encontrado!",
                                Duration = 3
                            })
                            _G.selectedPlayerName = ""
                        end
                    end
                end
            })
            _G.playerTextboxCreated = true
        end

        -- Fun√ß√µes de sumir/aparecer
        local function sumirJogador(player)
            if player ~= LocalPlayer and player.Character and player.Character.Parent == workspace then
                _G.hiddenPlayers[player.Name] = player.Character
                player.Character.Parent = nil
                return true
            end
            return false
        end

        local function aparecerJogador(player)
            if _G.hiddenPlayers[player.Name] then
                _G.hiddenPlayers[player.Name].Parent = workspace
                _G.hiddenPlayers[player.Name] = nil
                return true
            end
            return false
        end

        if state then
            -- Ativa
            local player = Players:FindFirstChild(_G.selectedPlayerName)
            if player then
                if sumirJogador(player) then
                    StarterGui:SetCore("SendNotification", {
                        Title = "ü´• Sumiu",
                        Text = player.Name,
                        Duration = 3
                    })
                end
            else
                StarterGui:SetCore("SendNotification", {
                    Title = "‚ùå Erro",
                    Text = "Digite o nome de um jogador v√°lido!",
                    Duration = 3
                })
            end
        else
            -- Desativa
            local player = Players:FindFirstChild(_G.selectedPlayerName)
            if player then
                if aparecerJogador(player) then
                    StarterGui:SetCore("SendNotification", {
                        Title = "üëÅÔ∏è Apareceu",
                        Text = player.Name,
                        Duration = 3
                    })
                end
            end
        end
    end
})

local TrollTab = Window:MakeTab({ Title = "Scripts Trolls", Icon = "rbxassetid://13364900349" })

-- Lista de casas com suas posi√ß√µes e IDs
local casas = {
    {id = 1, pos = Vector3.new(257, 2, 207), nome = "Casa 1"},
    {id = 2, pos = Vector3.new(231, 2, 226), nome = "Casa 2"},
    {id = 3, pos = Vector3.new(260, 19, 208), nome = "Casa 3"},
    {id = 4, pos = Vector3.new(227, 19, 223), nome = "Casa 4"},
    {id = 5, pos = Vector3.new(171, 19, 226), nome = "Casa 5"},
    {id = 6, pos = Vector3.new(-37, 19, -145), nome = "Casa 6"}, -- Posi√ß√£o original que funciona
    {id = 7, pos = Vector3.new(-37, 34, -145), nome = "Casa 7"},
    {id = 11, pos = Vector3.new(-18, 38, 434), nome = "Casa 11"},
    {id = 12, pos = Vector3.new(152, 35, 431), nome = "Casa 12"},
    {id = 13, pos = Vector3.new(252, 33, 429), nome = "Casa 13"},
    {id = 14, pos = Vector3.new(251, 36, 392), nome = "Casa 14"},
    {id = 15, pos = Vector3.new(145, 37, 385), nome = "Casa 15"},
    {id = 16, pos = Vector3.new(-14, 40, 393), nome = "Casa 16"},
    {id = 17, pos = Vector3.new(-186, 35, -249), nome = "Casa 17"},
    {id = 18, pos = Vector3.new(-351, 35, -246), nome = "Casa 18"},
    {id = 19, pos = Vector3.new(-453, 34, -247), nome = "Casa 19"},
    {id = 20, pos = Vector3.new(-450, 36, -297), nome = "Casa 20"},
    {id = 21, pos = Vector3.new(-353, 36, -296), nome = "Casa 21"},
    {id = 22, pos = Vector3.new(-184, 35, -297), nome = "Casa 22"},
    {id = 23, pos = Vector3.new(-407, 66, -449), nome = "Casa 23"},
    {id = 24, pos = Vector3.new(-345, 67, -498), nome = "Casa 24"},
    {id = 28, pos = Vector3.new(-100, 10, 1085), nome = "Casa 28"},
    {id = 29, pos = Vector3.new(-727, 4, 806), nome = "Casa 29"},
    {id = 30, pos = Vector3.new(-242, 5, 820), nome = "Casa 30"},
    {id = 31, pos = Vector3.new(636, 74, -363), nome = "Casa 31"},
    {id = 32, pos = Vector3.new(-905, 4, -363), nome = "Casa 32"},
    {id = 33, pos = Vector3.new(-108, 68, -419), nome = "Casa 33"},
    {id = 34, pos = Vector3.new(227, 36, 567), nome = "Casa 34"},
    {id = 35, pos = Vector3.new(-27, 11, 2207), nome = "Casa 35"},
    {id = 36, pos = Vector3.new(249, 13, -2336), nome = "Casa 36"},
    {id = 37, pos = Vector3.new(-1955, 31, 328), nome = "Casa 37"}
}

-- Criar lista de op√ß√µes para o dropdown
local opcoesCasas = {}
for i, casa in ipairs(casas) do
    table.insert(opcoesCasas, casa.nome)
end

-- Vari√°vel para armazenar a casa selecionada
local casaSelecionada = "Casa 6" -- Padr√£o

-- Fun√ß√£o para encontrar dados da casa pelo nome
local function getCasaData(nomeCasa)
    for i, casa in ipairs(casas) do
        if casa.nome == nomeCasa then
            return casa
        end
    end
    return nil
end

TrollTab:AddSection({ "Spawn Factory" })

-- Dropdown para selecionar a casa
TrollTab:AddDropdown({
    Name = "Selecionar Casa Para Factory",
    Default = casaSelecionada,
    Options = opcoesCasas,
    Callback = function(Value)
        casaSelecionada = Value
        print("Casa selecionada: " .. Value)
    end    
})

-- Bot√£o principal para spawnar factory
TrollTab:AddButton({
    Name = "Spawn Factory",
    Description = "TP na casa selecionada, spawna Factory e volta",
    Callback = function()
        local casaData = getCasaData(casaSelecionada)
        if not casaData then
            warn("Casa n√£o encontrada: " .. casaSelecionada)
            return
        end

        local player = game.Players.LocalPlayer

        -- Espera o personagem
        if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
            player.CharacterAdded:Wait()
        end

        local character = player.Character
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        -- Salva posi√ß√£o original
        local originalPosition = humanoidRootPart.CFrame

        print("TP para " .. casaData.nome .. " (ID: " .. casaData.id .. ")")
        print("Posi√ß√£o original salva")

        -- 1. Teletransporte instant√¢neo
        humanoidRootPart.CFrame = CFrame.new(casaData.pos)
        wait(0.3) -- Pausa para servidor processar

        -- 2. Spawna Factory
        pcall(function()
            -- Lot:Claim
            local args1 = { casaData.id }
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Lot:Claim"):InvokeServer(unpack(args1))

            -- Lot:BuildProperty  
            local args2 = { casaData.id, "001_Landmark" }
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Lot:BuildProperty"):FireServer(unpack(args2))

            print("Factory spawnada na " .. casaData.nome .. "!")
        end)

        -- Pequena pausa antes de voltar
        wait(0.5)

        -- 3. Volta para posi√ß√£o original
        humanoidRootPart.CFrame = originalPosition
        print("Voltou para posi√ß√£o original!")
    end
})

TrollTab:AddDiscordInvite({
    Name = "Linux Hub",
    Description = "Entre No Discord",
    Logo = "rbxassetid://111047667311481",
    Invite = "https://discord.gg/eP55xHGy",
})
TrollTab:AddSection({ "Informa√ß√µes do Script" })
TrollTab:AddParagraph({ "Roblox: „Åì„Çì„Å´„Å°„ÅØ„É©„Ç¶„É≥„Éâ„Åæ„Åü„ÇÇ„Å£„Å®1„Å§ÊôÇÈñì„É≥„É≥" })
TrollTab:AddParagraph({ "Colabora√ß√£o", "Thurr, Linux Hub, Gui" })
TrollTab:AddParagraph({ "Voc√™ est√° usando:", "Linux hub" })
TrollTab:AddParagraph({"LINUXHUB"})
TrollTab:AddParagraph({"Novidades:", "Novo Bug Player em jogadores! Agora eles v√£o ter glitches enquanto jogam."})


TrollTab:AddSection({ "Rejoin & Informa√ß√µes" })
TrollTab:AddButton({
    Name = "Rejoin",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
    end
})


--=== UTIL (cria "bot√µes" n√£o clic√°veis e fun√ß√£o segura de update) ===--
local function createInfoBlock(tab, title, initial)
	-- Tenta usar Paragraph (t√≠tulo + descri√ß√£o, igual na imagem).
	local block
	local ok = pcall(function()
		block = tab:AddParagraph({ Title = title, Content = initial })
	end)
	-- Se a lib n√£o tiver Paragraph, cai para Label (1 linha).
	if not ok or not block then
		ok = pcall(function()
			block = tab:AddLabel(title .. (initial and ("\n" .. initial) or ""))
		end)
	end
	return block
end

local function setBlockText(block, title, text)
	if not block then return end
	-- Tenta m√©todos comuns de libs de UI
	local ok = pcall(function()
		if block.Set then return block:Set(text) end
		if block.SetDesc then return block:SetDesc(text) end
		if block.SetText then return block:SetText(text) end
		if block.Update then return block:Update(text) end
		if block.Refresh then return block:Refresh(text) end
	end)
	-- Fallback para Label simples (reescreve tudo)
	if not ok then
		pcall(function()
			if block.Text ~= nil then
				block.Text = title .. "\n" .. text
			end
		end)
	end
end
--====================================================================--

-- Bloquinhos n√£o clic√°veis (todos NA ABA TROLL)
local timerBlock   = createInfoBlock(TrollTab, "Tempo De Uso De Script", "00:00:00")
local fpsBlock     = createInfoBlock(TrollTab, "Mostra Fps", "FPS: 0")
local playersBlock = createInfoBlock(TrollTab, "Quantidade De Pessoas", tostring(#game:GetService("Players"):GetPlayers()))

-- Servi√ßos
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

-- Cron√¥metro (come√ßa quando o Hub abre)
local startClock = os.clock()

-- FPS (c√°lculo suave por frame)
local currentFPS = 0
RunService.RenderStepped:Connect(function(dt)
	currentFPS = math.floor(1/dt + 0.5)
end)

-- Atualiza√ß√µes peri√≥dicas (meio segundo)
task.spawn(function()
	while true do
		task.wait(0.5)

		-- Tempo de uso
		local e = os.clock() - startClock
		local h = math.floor(e/3600)
		local m = math.floor((e%3600)/60)
		local s = math.floor(e%60)
		setBlockText(timerBlock, "Tempo De Uso De Script", string.format("%02d:%02d:%02d", h, m, s))

		-- FPS
		setBlockText(fpsBlock, "Mostra Fps", "FPS: " .. tostring(currentFPS))

		-- Players (refor√ßa o valor mesmo sem eventos)
		setBlockText(playersBlock, "Quantidade De Pessoas", tostring(#Players:GetPlayers()))
	end
end)

-- Atualiza players ao entrar/sair algu√©m
local function refreshPlayers()
	setBlockText(playersBlock, "Quantidade De Pessoas", tostring(#Players:GetPlayers()))
end
Players.PlayerAdded:Connect(refreshPlayers)
Players.PlayerRemoving:Connect(refreshPlayers)

TrollTab:AddParagraph({"Seu Executor: " .. identifyexecutor()})

TrollTab:AddSection({ "Black Hole" })
TrollTab:AddButton({
    Name = "Black Hole",
    Description = " Ativando isso voc√™ puxa Parts at√© o seu personagem",
    Callback = function()
        local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")

local angle = 1
local radius = 10
local blackHoleActive = false

local function setupPlayer()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    local Folder = Instance.new("Folder", Workspace)
    local Part = Instance.new("Part", Folder)
    local Attachment1 = Instance.new("Attachment", Part)
    Part.Anchored = true
    Part.CanCollide = false
    Part.Transparency = 1

    return humanoidRootPart, Attachment1
end

local humanoidRootPart, Attachment1 = setupPlayer()

if not getgenv().Network then
    getgenv().Network = {
        BaseParts = {},
        Velocity = Vector3.new(14.46262424, 14.46262424, 14.46262424)
    }

    Network.RetainPart = function(part)
        if typeof(part) == "Instance" and part:IsA("BasePart") and part:IsDescendantOf(Workspace) then
            table.insert(Network.BaseParts, part)
            part.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
            part.CanCollide = false
        end
    end

    local function EnablePartControl()
        LocalPlayer.ReplicationFocus = Workspace
        RunService.Heartbeat:Connect(function()
            sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
            for _, part in pairs(Network.BaseParts) do
                if part:IsDescendantOf(Workspace) then
                    part.Velocity = Network.Velocity
                end
            end
        end)
    end

    EnablePartControl()
end

local function ForcePart(v)
    if v:IsA("Part") and not v.Anchored and not v.Parent:FindFirstChild("Humanoid") and not v.Parent:FindFirstChild("Head") and v.Name ~= "Handle" then
        for _, x in next, v:GetChildren() do
            if x:IsA("BodyAngularVelocity") or x:IsA("BodyForce") or x:IsA("BodyGyro") or x:IsA("BodyPosition") or x:IsA("BodyThrust") or x:IsA("BodyVelocity") or x:IsA("RocketPropulsion") then
                x:Destroy()
            end
        end
        if v:FindFirstChild("Attachment") then
            v:FindFirstChild("Attachment"):Destroy()
        end
        if v:FindFirstChild("AlignPosition") then
            v:FindFirstChild("AlignPosition"):Destroy()
        end
        if v:FindFirstChild("Torque") then
            v:FindFirstChild("Torque"):Destroy()
        end
        v.CanCollide = false
        
        local Torque = Instance.new("Torque", v)
        Torque.Torque = Vector3.new(1000000, 1000000, 1000000)
        local AlignPosition = Instance.new("AlignPosition", v)
        local Attachment2 = Instance.new("Attachment", v)
        Torque.Attachment0 = Attachment2
        AlignPosition.MaxForce = math.huge
        AlignPosition.MaxVelocity = math.huge
        AlignPosition.Responsiveness = 500
        AlignPosition.Attachment0 = Attachment2
        AlignPosition.Attachment1 = Attachment1
    end
end

local function toggleBlackHole()
    blackHoleActive = not blackHoleActive
    if blackHoleActive then
        for _, v in next, Workspace:GetDescendants() do
            ForcePart(v)
        end

        Workspace.DescendantAdded:Connect(function(v)
            if blackHoleActive then
                ForcePart(v)
            end
        end)

        spawn(function()
            while blackHoleActive and RunService.RenderStepped:Wait() do
                angle = angle + math.rad(2)

                local offsetX = math.cos(angle) * radius
                local offsetZ = math.sin(angle) * radius

                Attachment1.WorldCFrame = humanoidRootPart.CFrame * CFrame.new(offsetX, 0, offsetZ)
            end
        end)
    else
        Attachment1.WorldCFrame = CFrame.new(0, -1000, 0)
    end
end

LocalPlayer.CharacterAdded:Connect(function()
    humanoidRootPart, Attachment1 = setupPlayer()
    if blackHoleActive then
        toggleBlackHole()
    end
end)

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/miroeramaa/TurtleLib/main/TurtleUiLib.lua"))()
local window = library:Window("Projeto LKB")

window:Slider("Radius Blackhole",1,100,10, function(Value)
   radius = Value
end)

window:Toggle("Blackhole", true, function(Value)
       if Value then
            toggleBlackHole()
        else
            blackHoleActive = false
        end
end)

spawn(function()
    while true do
        RunService.RenderStepped:Wait()
        if blackHoleActive then
            angle = angle + math.rad(angleSpeed)
        end
    end
end)

toggleBlackHole()
    end
})

-- Se√ß√£o
TrollTab:AddSection({ "Spam Chat & Enviar Mensagem" })

-- Vari√°vel compartilhada usando _G
_G.spamMessage = "Digite aqui..."
_G.delayTime = 1
_G.looping = false

-- Caixa de texto
TrollTab:AddTextBox({
    Name = "Enviar Mensagem",
    Description = "Digite a mensagem que vai enviar",
    PlaceholderText = "Ex: shad0ws",
    Callback = function(Value)
        _G.spamMessage = Value
        print("Mensagem definida: " .. Value)
    end
})

-- Slider de velocidade
TrollTab:AddSlider({
    Name = "Velocidade do Spam",
    Description = "Velocidade Da Mensagem",
    Min = 0.1,
    Max = 5,
    Default = 1,
    Increment = 0.1,
    Callback = function(Value)
        _G.delayTime = Value
        print("Velocidade: " .. Value .. " segundos")
    end
})

-- Toggle spam infinito
TrollTab:AddToggle({
    Name = "Spam Chat",
    Description = "enviar mensagem sem para",
    Default = false,
    Callback = function(State)
        local TextChatService = game:GetService("TextChatService")
        local Players = game:GetService("Players")
        local Player = Players.LocalPlayer
        
        -- Fun√ß√£o para enviar mensagem
        local function sendMessage(message)
            if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then 
                TextChatService.TextChannels.RBXGeneral:SendAsync(message)
                print("Mensagem enviada: " .. message)
            else 
                print("gojo chorou no banho F")
            end
        end
        
        _G.looping = State
        print("Spam infinito: " .. tostring(State))
        if _G.looping then
            spawn(function()
                while _G.looping do
                    if _G.spamMessage and _G.spamMessage ~= "Digite aqui..." and _G.spamMessage ~= "" then
                        sendMessage(_G.spamMessage)
                    end
                    wait(_G.delayTime)
                end
            end)
        end
    end
})

-- Bot√£o para enviar uma vez
TrollTab:AddButton({
    Name = "Enviar Mensagem",
    Description = "Envia a mensagem",
    Callback = function()
        local TextChatService = game:GetService("TextChatService")
        local Players = game:GetService("Players")
        local Player = Players.LocalPlayer
        
        -- Fun√ß√£o para enviar mensagem
        local function sendMessage(message)
            if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then 
                TextChatService.TextChannels.RBXGeneral:SendAsync(message)
                print("Mensagem enviada: " .. message)
            else 
                print("gojo chorou no banho F")
            end
        end
        
        if _G.spamMessage and _G.spamMessage ~= "Digite aqui..." and _G.spamMessage ~= "" then
            sendMessage(_G.spamMessage)
        else
            print("Digite uma mensagem!")
        end
    end
})


-- ======================= TROLL TAB (REDZ UI) =======================

TrollTab.Defaults = {Speed = 16, Jump = 50, Gravity = 196.2}
TrollTab.GetHumanoid = function()
    local lp = game:GetService("Players").LocalPlayer
    local char = lp.Character or lp.CharacterAdded:Wait()
    return char:FindFirstChildOfClass("Humanoid") or char:WaitForChild("Humanoid")
end

TrollTab:AddSection({Name = "Player Config"})

-- SPEED
TrollTab.SpeedSlider = TrollTab:AddSlider({
    Name = "Speed Player",
    Description = "Defina a velocidade do seu personagem",
    Min = 16,
    Max = 1000,
    Increment = 1,
    Default = TrollTab.Defaults.Speed,
    Callback = function(v)
        local hum = TrollTab.GetHumanoid()
        if hum then hum.WalkSpeed = v end
    end
})

-- JUMP POWER
TrollTab.JumpSlider = TrollTab:AddSlider({
    Name = "Jump Power",
    Description = "Defina a altura do pulo do seu personagem",
    Min = 50,
    Max = 1000,
    Increment = 1,
    Default = TrollTab.Defaults.Jump,
    Callback = function(v)
        local hum = TrollTab.GetHumanoid()
        if hum then hum.JumpPower = v end
    end
})

-- GRAVITY
TrollTab.GravSlider = TrollTab:AddSlider({
    Name = "Gravity",
    Description = "Defina a gravidade do jogo",
    Min = 0,
    Max = 1000,
    Increment = 1,
    Default = TrollTab.Defaults.Gravity,
    Callback = function(v)
        workspace.Gravity = v
    end
})

-- RESET
TrollTab:AddButton({
    Name = "Resetar Status",
    Description = "Voltar Speed/Jump/Gravity para os valores padr√£o",
    Callback = function()
        local hum = TrollTab.GetHumanoid()
        if hum then
            hum.WalkSpeed = TrollTab.Defaults.Speed
            hum.JumpPower = TrollTab.Defaults.Jump
        end
        workspace.Gravity = TrollTab.Defaults.Gravity

        -- For√ßar sliders a voltarem para o valor padr√£o
        local function resetSlider(slider, val)
            if not slider then return end
            if slider.Set then pcall(function() slider:Set(val) end) end
            if slider.SetValue then pcall(function() slider:SetValue(val) end) end
            if slider.UpdateValue then pcall(function() slider:UpdateValue(val) end) end
        end

        resetSlider(TrollTab.SpeedSlider, TrollTab.Defaults.Speed)
        resetSlider(TrollTab.JumpSlider, TrollTab.Defaults.Jump)
        resetSlider(TrollTab.GravSlider, TrollTab.Defaults.Gravity)
    end
})

-- INFINITE JUMP
TrollTab.InfiniteJumpEnabled = false
TrollTab.InfiniteJumpConn = nil

TrollTab:AddToggle({
    Name = "Infinite Jump",
    Description = "Ative ou desative pulo infinito",
    Default = false,
    Callback = function(state)
        TrollTab.InfiniteJumpEnabled = state
        if TrollTab.InfiniteJumpConn then
            TrollTab.InfiniteJumpConn:Disconnect()
            TrollTab.InfiniteJumpConn = nil
        end
        if state then
            TrollTab.InfiniteJumpConn = game:GetService("UserInputService").JumpRequest:Connect(function()
                local hum = TrollTab.GetHumanoid()
                if hum and TrollTab.InfiniteJumpEnabled then
                    hum:ChangeState(Enum.HumanoidStateType.Jumping)
                end
            end)
        end
    end
})

-- Garantir humanoid ap√≥s respawn
game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function()
    TrollTab.GetHumanoid()
end)
-- ===================================================================


-- Vari√°veis globais para controlar os scripts
cancelExpansion = false
expansionSound = nil
expansionModel = nil
originalSky = nil

TrollTab:AddSection({ "Shadows" })
TrollTab:AddButton({
    Name = "Expans√£o Linux hub",
    Description = "Isso √© muito OP, e causa glitches no cliente dos jogadores!",
    Callback = function()
-- Servi√ßos
local TextChatService = game:GetService("TextChatService")
local Lighting = game:GetService("Lighting")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Player = Players.LocalPlayer

-- Reset da vari√°vel de cancelamento
cancelExpansion = false

-- Aviso no chat (com \r conforme seu pedido)
if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then 
    TextChatService.TextChannels.RBXGeneral:SendAsync(
        "hi\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\rServer: Expans√£o BY Linux hub"
    )
else 
    print("gojo chorou no banho F")
end

-- Fun√ß√£o para ativar Expans√£o de Dom√≠nio
local function ativarDominio()
    local char = Player.Character or Player.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")

    local dominio = Instance.new("Model", workspace)
    dominio.Name = "InfiniteVoid"
    expansionModel = dominio

    local esfera = Instance.new("Part")
    esfera.Shape = Enum.PartType.Ball
    esfera.Size = Vector3.new(300, 300, 300)
    esfera.Position = hrp.Position
    esfera.Anchored = true
    esfera.CanCollide = false
    esfera.Material = Enum.Material.ForceField
    esfera.Transparency = 0.3
    esfera.Color = Color3.fromRGB(0, 0, 0)
    esfera.Parent = dominio

    local luz = Instance.new("PointLight", esfera)
    luz.Color = Color3.fromRGB(0, 153, 255)
    luz.Brightness = 10
    luz.Range = 300

    local ps = Instance.new("ParticleEmitter", esfera)
    ps.Texture = "rbxassetid://243660364"
    ps.Color = ColorSequence.new(Color3.fromRGB(0, 153, 255))
    ps.LightEmission = 1
    ps.Size = NumberSequence.new(3)
    ps.Transparency = NumberSequence.new(0.2)
    ps.Rate = 1000
    ps.Lifetime = NumberRange.new(2)
    ps.Speed = NumberRange.new(0)
    ps.VelocitySpread = 180

    local som = Instance.new("Sound", esfera)
    som.SoundId = "rbxassetid://1843527678"
    som.Volume = 2
    som.Looped = true
    som:Play()
    expansionSound = som

    originalSky = Lighting:FindFirstChildOfClass("Sky")
    if originalSky then
        originalSky.Parent = nil
    end

    local newSky = Instance.new("Sky", Lighting)
    newSky.SkyboxBk = "rbxassetid://159454299"
    newSky.SkyboxDn = "rbxassetid://159454296"
    newSky.SkyboxFt = "rbxassetid://159454293"
    newSky.SkyboxLf = "rbxassetid://159454286"
    newSky.SkyboxRt = "rbxassetid://159454300"
    newSky.SkyboxUp = "rbxassetid://159454288"
end

-- Executa a expans√£o de dom√≠nio
ativarDominio()

-- √Åudio em loop infinito no jogador
local selectedAudioID = 140031333626044

task.spawn(function()
    while not cancelExpansion do
        local remote = ReplicatedStorage:FindFirstChild("RE") and ReplicatedStorage.RE:FindFirstChild("1Gu1nSound1s")
        if remote then
            remote:FireServer(workspace, selectedAudioID, 1)
        end

        local root = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
        if root then
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://" .. selectedAudioID
            sound.Volume = 1
            sound.Looped = false
            sound.Parent = root
            sound:Play()
            sound.Ended:Connect(function() sound:Destroy() end)
            task.wait(sound.TimeLength + 0.1)
        else
            warn("HumanoidRootPart n√£o encontrado")
            break
        end
    end
end)

-- ========================
-- ATAQUE COM ARMA: Assault
-- ========================

local RE = ReplicatedStorage:WaitForChild("RE")
local ClearEvent = RE:FindFirstChild("1Clea1rTool1s")
local ToolEvent = RE:FindFirstChild("1Too1l")
local FireEvent = RE:FindFirstChild("1Gu1n")

-- Limpa ferramentas
local function clearAllTools()
    if ClearEvent then
        ClearEvent:FireServer("ClearAllTools")
    end
end

-- Solicita Assault
local function getAssault()
    if ToolEvent then
        ToolEvent:InvokeServer("PickingTools", "Assault")
    end
end

-- Verifica se recebeu Assault
local function hasAssault()
    return Player.Backpack:FindFirstChild("Assault") ~= nil
end

-- Atira em parte
local function fireAtPart(targetPart)
    local gunScript = Player.Backpack:FindFirstChild("Assault")
        and Player.Backpack.Assault:FindFirstChild("GunScript_Local")

    if not gunScript or not targetPart then return end

    local args = {
        targetPart,
        targetPart,
        Vector3.new(1e14, 1e14, 1e14),
        targetPart.Position,
        gunScript:FindFirstChild("MuzzleEffect"),
        gunScript:FindFirstChild("HitEffect"),
        0,
        0,
        { false },
        {
            25,
            Vector3.new(100, 100, 100),
            BrickColor.new(29),
            0.25,
            Enum.Material.SmoothPlastic,
            0.25
        },
        true,
        false
    }

    FireEvent:FireServer(unpack(args))
end

-- Atira em todos os jogadores
local function fireAtAllPlayers(times)
    for i = 1, times do
        if cancelExpansion then break end
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                fireAtPart(player.Character.HumanoidRootPart)
                task.wait(0.1)
            end
        end
    end
end

-- Loop autom√°tico de ataque
task.spawn(function()
    while not cancelExpansion do
        clearAllTools()
        getAssault()

        repeat
            task.wait(0.2)
        until hasAssault() or cancelExpansion

        if not cancelExpansion then
            fireAtAllPlayers(3)
            task.wait(1)
        end
    end
end)
end
})

TrollTab:AddButton({
    Name = "LINUX PAROU",
    Description = "Para o ataque e remove a Expans√£o de Dom√≠nio.",
    Callback = function()
        -- Sinaliza para parar loops
        cancelExpansion = true

        -- Para o som em loop
        if expansionSound then
            expansionSound:Stop()
            expansionSound:Destroy()
            expansionSound = nil
        end

        -- Remove o modelo "InfiniteVoid" criado
        if expansionModel and expansionModel.Parent then
            expansionModel:Destroy()
            expansionModel = nil
        end

        -- Restaura o Sky original
        local Lighting = game:GetService("Lighting")
        local currentSky = Lighting:FindFirstChildOfClass("Sky")
        if currentSky then currentSky:Destroy() end

        if originalSky then
            originalSky.Parent = Lighting
            originalSky = nil
        end

        -- Mensagem no chat confirmando cancelamento
        local TextChatService = game:GetService("TextChatService")
        if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
            TextChatService.TextChannels.RBXGeneral:SendAsync("[SHADOWS PAROU]")
        else
            print("LINUX PAROU")
        end
    end
})

TrollTab:AddSection({ "Stop Bug" })

TrollTab:AddButton({
    Name = "ANTI-BUG ATIVO",
    Description = "Ativa prote√ß√£o contra objetos bugados",
    Callback = function()
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        
        -- Lista de nomes/classes a bloquear
        local blacklist = {
            {Name = "water", Class = "Part"},
        }
        
        -- Fun√ß√£o para neutralizar a parte
        local function neutralize(part)
            if part and part:IsA("BasePart") then
                -- corta qualquer efeito f√≠sico
                pcall(function()
                    part.Anchored = true
                    part.CanCollide = false
                    part.Massless = true
                    part.Transparency = 1
                    part:ClearAllChildren()
                end)
                -- opcional: deletar
                pcall(function()
                    part:Destroy()
                end)
            end
        end
        
        -- Bloqueia quando aparecer no Workspace
        workspace.DescendantAdded:Connect(function(obj)
            for _, rule in ipairs(blacklist) do
                if obj.Name == rule.Name and obj.ClassName == rule.Class then
                    neutralize(obj)
                end
            end
        end)
        
        -- Bloqueia os que j√° existem
        for _, obj in ipairs(workspace:GetDescendants()) do
            for _, rule in ipairs(blacklist) do
                if obj.Name == rule.Name and obj.ClassName == rule.Class then
                    neutralize(obj)
                end
            end
        end
        
        -- Loop extra pra pegar nil-instances clonados
        task.spawn(function()
            while task.wait(0.25) do
                for _, rule in ipairs(blacklist) do
                    for _, v in next, getnilinstances() do
                        if v.Name == rule.Name and v.ClassName == rule.Class then
                            neutralize(v)
                        end
                    end
                end
            end
        end)
        
        -- Prote√ß√£o extra no Humanoid
        LocalPlayer.CharacterAdded:Connect(function(char)
            local hum = char:WaitForChild("Humanoid")
            hum.Touched:Connect(function(hit)
                for _, rule in ipairs(blacklist) do
                    if hit.Name == rule.Name and hit.ClassName == rule.Class then
                        neutralize(hit)
                    end
                end
            end)
        end)
    end
})


do -- come√É¬ßo do bloco de scripts

TrollTab:AddParagraph({"Script original de SHADOWS Hub"})
    
TrollTab:AddParagraph({"Spam de Jato - irrevers√≠vel!"})
    
TrollTab:AddSection({"Spamming de Avi√£o -"})

   local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local originalPosition = player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.Position

-- Vari√É¬°veis principais
local clickDetector = Workspace.WorkspaceCom["001_Airport"].AirportHanger["001_JetCloneButton"].Button.ClickDetector
local jetStorage = Workspace.WorkspaceCom["001_Airport"].AirportHanger["001_JetStorage"]
local buttonPosition = Vector3.new(498.99, -19.52, 278.73)
local targetPosition = Vector3.new(-26.20, 98.02, 17.45)
local voidPosition = Vector3.new(0, -1000, 0)
local selectedPlayer = nil

local running1 = false
local running2 = false
local loopConnection1, loopConnection2

-- Fun√É¬ß√É¬£o para encontrar a primeira parte f√É¬≠sica do jato
local function getFirstPart(jet)
    for _, part in ipairs(jet:GetDescendants()) do
        if part:IsA("BasePart") then
            return part
        end
    end
    return nil
end

-- Fun√É¬ß√É¬£o para calcular dist√É¬¢ncia
local function getDistance(pos1, pos2)
    return (pos1 - pos2).Magnitude
end

-- Fun√É¬ß√É¬£o para esperar novo jato
local function waitForNewJet(existingJets)
    local maxAttempts = 10
    local attempt = 0
    while (running1 or running2) and attempt < maxAttempts do
        for _, jet in ipairs(jetStorage:GetChildren()) do
            if jet:IsA("Model") and not existingJets[jet] then
                return jet
            end
        end
        attempt = attempt + 1
        RunService.Heartbeat:Wait()
    end
    return nil
end

-- Fun√É¬ß√É¬£o para teleportar o jato
local function teleportAndStabilizeJet(jet, position)
    local primaryPart = getFirstPart(jet)
    if not primaryPart then
        warn("[ERRO] Nenhuma parte f√É¬≠sica no jato:", jet.Name)
        return false
    end

    local maxAttempts = 5
    local attempt = 0
    while attempt < maxAttempts do
        pcall(function()
            jet.PrimaryPart = primaryPart
        end)
        primaryPart.Anchored = false
        task.wait(0.3)
        pcall(function()
            jet:SetPrimaryPartCFrame(CFrame.new(position) * CFrame.Angles(0, math.rad(90), 0))
            task.wait(0.5)
            primaryPart.Velocity = Vector3.new(0, 0, 0)
            primaryPart.RotVelocity = Vector3.new(0, 0, 0)
        end)
        if (jet.PrimaryPart and (jet.PrimaryPart.Position - position).Magnitude < 5) then
            return true
        end
        attempt = attempt + 1
        task.wait(0.5)
    end
    warn("[ERRO] Falha ao teleportar jato:", jet.Name)
    return false
end

-- Fun√É¬ß√É¬£o para mostrar notifica√É¬ß√É¬£o com foto do player
local function showNotification(playerName, playerImage)
    local notification = Instance.new("ScreenGui")
    notification.Parent = playerGui

    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 200, 0, 100)
    frame.Position = UDim2.new(0.5, -100, 0.5, -50)
    frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    frame.Parent = notification

    local image = Instance.new("ImageLabel")
    image.Size = UDim2.new(0, 50, 0, 50)
    image.Position = UDim2.new(0, 10, 0, 25)
    image.BackgroundTransparency = 1
    image.Image = playerImage or "rbxasset://textures/ui/GuiImagePlaceholder.png"
    image.Parent = frame

    local text = Instance.new("TextLabel")
    text.Size = UDim2.new(0, 130, 0, 50)
    text.Position = UDim2.new(0, 70, 0, 25)
    text.BackgroundTransparency = 1
    text.TextColor3 = Color3.new(1, 1, 1)
    text.Text = "Jogador: " .. (playerName or "Nenhum")
    text.Font = Enum.Font.SourceSansBold
    text.TextSize = 16
    text.Parent = frame

    task.delay(3, function()
        notification:Destroy()
    end)
end

-- Loop modo 1: Spam Local
local function startLoop1()
    if running1 then return end
    running1 = true

    for _, jet in ipairs(jetStorage:GetChildren()) do
        if jet:IsA("Model") then
            local primaryPart = getFirstPart(jet)
            if primaryPart and getDistance(primaryPart.Position, buttonPosition) < 50 then
                teleportAndStabilizeJet(jet, voidPosition)
                task.wait(0.5)
            end
        end
    end

    loopConnection1 = RunService.Heartbeat:Connect(function()
        if not running1 then return end

        local existingJets = {}
        for _, jet in ipairs(jetStorage:GetChildren()) do
            existingJets[jet] = true
        end

        fireclickdetector(clickDetector)
        player.Character:SetPrimaryPartCFrame(CFrame.new(buttonPosition))
        task.wait(0.5)

        local newJet = waitForNewJet(existingJets)
        if newJet then
            while not teleportAndStabilizeJet(newJet, targetPosition) do
                task.wait(0.5)
            end
            task.wait(0.5)
        else
            task.wait(0.5)
        end
    end)
end

local function stopLoop1()
    running1 = false
    if loopConnection1 then
        loopConnection1:Disconnect()
        loopConnection1 = nil
    end
    if originalPosition and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end

-- Loop modo 2: Spam em Jogador
local function startLoop2()
    if running2 or not selectedPlayer or not selectedPlayer.Character then return end
    running2 = true

    for _, jet in ipairs(jetStorage:GetChildren()) do
        if jet:IsA("Model") then
            local primaryPart = getFirstPart(jet)
            if primaryPart and getDistance(primaryPart.Position, buttonPosition) < 50 then
                teleportAndStabilizeJet(jet, voidPosition)
                task.wait(0.5)
            end
        end
    end

    loopConnection2 = RunService.Heartbeat:Connect(function()
        if not running2 then return end

        local existingJets = {}
        for _, jet in ipairs(jetStorage:GetChildren()) do
            existingJets[jet] = true
        end

        fireclickdetector(clickDetector)
        player.Character:SetPrimaryPartCFrame(CFrame.new(buttonPosition))
        task.wait(0.5)

        local newJet = waitForNewJet(existingJets)
        if newJet and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
            while not teleportAndStabilizeJet(newJet, selectedPlayer.Character.HumanoidRootPart.Position) do
                task.wait(0.5)
            end
            task.wait(0.5)
        else
            task.wait(0.5)
        end
    end)
end

local function stopLoop2()
    running2 = false
    if loopConnection2 then
        loopConnection2:Disconnect()
        loopConnection2 = nil
    end
    if originalPosition and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end


--  - Tab10
TrollTab:AddTextBox({
    Name = "Nome do Jogador",
    Description = "Digite o nome do jogador para spawnar o jato nele",
    PlaceholderText = "Exemplo: shadows",
    Callback = function(Value)
        local input = Value:lower()
        if input ~= "" then
            for _, plr in ipairs(Players:GetPlayers()) do
                if plr.Name:lower():sub(1, #input) == input then
                    selectedPlayer = plr
                    showNotification(plr.Name, "rbxthumb://id=" .. plr.UserId .. "?width=50&height=50")
                    break
                end
            end
        else
            selectedPlayer = nil
            showNotification("Nenhum", nil)
        end
    end
})

TrollTab:AddParagraph({"Script original do SHADOWS Hub"})

TrollTab:AddButton({
    Name = "Iniciar Spamming de Avi√£o",
    Callback = function()
        startLoop1()
    end
})

TrollTab:AddButton({
    Name = "Parar Spamming de Avi√£o",
    Callback = function()
        stopLoop1()
    end
})

TrollTab:AddSection({"Jogador selecionado no textbox a cima, para ser jatado hehehe!"})

TrollTab:AddButton({
    Name = "Iniciar Spamming no Jogador BETA",
    Callback = function()
        startLoop2()
    end
})

TrollTab:AddButton({
    Name = "Parar Spamming no Jogador BETA",
    Callback = function()
        stopLoop2()
    end
})


 

end -- Fim do bloco de scripts

TrollTab:AddSection({ "Desastres naturais" })
TrollTab:AddButton({
    Name = "[‚ö†Ô∏è MUITO OP] Tornado - Navio pirata GRANDE",
    Description = "Isso √© melhor quando usado em cities, confia no Wx!",
    Callback = function()
local RS = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TextChatService = game:GetService("TextChatService")
local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RootPart = Character:WaitForChild("HumanoidRootPart")
local Vehicles = workspace:WaitForChild("Vehicles")

-- Aviso no chat
if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then 
    TextChatService.TextChannels.RBXGeneral:SendAsync(
        "hi\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r[ UM TORNADO SURGIU! SHADOWS Hub by Shadows ]"
    )
else 
    print("Nadaa")
end

-- Fun√ß√£o para tocar o √°udio 5 vezes
local selectedAudioID = 9068077052
local function playAudio()
    if not selectedAudioID then
        warn("Nenhum √°udio selecionado!")
        return
    end

    local args = {
        [1] = workspace,
        [2] = selectedAudioID,
        [3] = 1,
    }

    for i = 1, 5 do
        RS.RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))

        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://" .. tostring(selectedAudioID)
        sound.Parent = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
        if sound.Parent then
            sound:Play()
        else
            warn("HumanoidRootPart n√£o encontrado")
            break
        end

        task.wait(1.5)
        sound:Destroy()
    end
end

-- Spawn do barco
local function spawnBoat()
    RootPart.CFrame = CFrame.new(1754, -2, 58)
    task.wait(0.5)
    RS:WaitForChild("RE"):FindFirstChild("1Ca1r"):FireServer("PickingBoat", "PirateFree")
    task.wait(1)
    return Vehicles:FindFirstChild(Player.Name .. "Car")
end

local PCar = spawnBoat()
if not PCar then
    warn("Falha ao spawnar o barco")
    return
end

print("Barco PirateFree gerado!")

local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
if not Seat then
    warn("Seat n√£o encontrado")
    return
end

-- Sentar no assento
repeat
    task.wait(0.1)
    RootPart.CFrame = Seat.CFrame * CFrame.new(0, 1, 0)
until Humanoid.SeatPart == Seat

print("Jogador sentado com sucesso!")

-- Tocar √°udio em paralelo
task.spawn(playAudio)

-- Ejetar ap√≥s 4 segundos
task.delay(4, function()
    if Humanoid.SeatPart then
        Humanoid.Sit = false
    end
    RootPart.CFrame = CFrame.new(0, 0, 0)
    print("Jogador ejetado e teleportado")
end)

-- Flip loop paralelo
local RE_Flip = RS:WaitForChild("RE"):WaitForChild("1Player1sCa1r")
task.spawn(function()
    while PCar and PCar.Parent do
        RE_Flip:FireServer("Flip")
        task.wait(0.5)
    end
end)

-- Configura√ß√£o de movimento
local waypoints = {
    Vector3.new(-16, 0, -47),
    Vector3.new(-110, 0, -45),
    Vector3.new(16, 0, -55)
}

local currentIndex = 1
local nextIndex = 2
local moveSpeed = 15
local rotationSpeed = math.rad(720) -- 720¬∞/s
local progress = 0
local currentRotation = 0

local function lerpCFrame(a, b, t)
    return a:lerp(b, t)
end

-- Movimento + rota√ß√£o
RunService.Heartbeat:Connect(function(dt)
    if not (PCar and PCar.PrimaryPart) then return end

    local startPos = waypoints[currentIndex]
    local endPos = waypoints[nextIndex]

    progress += (moveSpeed * dt) / (startPos - endPos).Magnitude
    if progress >= 1 then
        progress = 0
        currentIndex = nextIndex
        nextIndex = (nextIndex % #waypoints) + 1
    end

    local newPos = lerpCFrame(CFrame.new(startPos), CFrame.new(endPos), progress).p
    currentRotation += rotationSpeed * dt

    local cf = CFrame.new(newPos) * CFrame.Angles(0, currentRotation, 0)
    PCar:SetPrimaryPartCFrame(cf)
end)
end
})

TrollTab:AddButton({
    Name = "[‚ùå] Desativar Tornado e Remover Ve√≠culo",
    Description = "Cancela o tornado e deleta seu navio.",
    Callback = function()
        -- Tenta remover o ve√≠culo via RemoteEvent
        local success, err = pcall(function()
            local args = { "DeleteAllVehicles" }
            game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
        end)

        if not success then
            warn("Falha ao deletar ve√≠culos:", err)
        else
            print("[Shaodws Hub] Tornado finalizado e ve√≠culos deletados.")
        end
    end
})

TrollTab:AddSection({ "Puxar Parts" })
TrollTab:AddButton({
    Name = "Puxar Parts",
    Description = "Para usar, chegue perto do Player Selecionado",
    Callback = function()
        -- Gui to Lua
-- Version: 3.2

-- Instances:

local Gui = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local Box = Instance.new("TextBox")
local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
local Label = Instance.new("TextLabel")
local UITextSizeConstraint_2 = Instance.new("UITextSizeConstraint")
local Button = Instance.new("TextButton")
local UITextSizeConstraint_3 = Instance.new("UITextSizeConstraint")

--Properties:

Gui.Name = "Gui"
Gui.Parent = gethui()
Gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Main.Name = "Main"
Main.Parent = Gui
Main.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
Main.BorderColor3 = Color3.fromRGB(0, 0, 0)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.335954279, 0, 0.542361975, 0)
Main.Size = UDim2.new(0.240350261, 0, 0.166880623, 0)
Main.Active = true
Main.Draggable = true

Box.Name = "Box"
Box.Parent = Main
Box.BackgroundColor3 = Color3.fromRGB(95, 95, 95)
Box.BorderColor3 = Color3.fromRGB(0, 0, 0)
Box.BorderSizePixel = 0
Box.Position = UDim2.new(0.0980926454, 0, 0.218712583, 0)
Box.Size = UDim2.new(0.801089942, 0, 0.364963502, 0)
Box.FontFace = Font.new("rbxasset://fonts/families/SourceSansSemibold.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
Box.PlaceholderText = "Player here"
Box.Text = ""
Box.TextColor3 = Color3.fromRGB(255, 255, 255)
Box.TextScaled = true
Box.TextSize = 31.000
Box.TextWrapped = true

UITextSizeConstraint.Parent = Box
UITextSizeConstraint.MaxTextSize = 31

Label.Name = "Label"
Label.Parent = Main
Label.BackgroundColor3 = Color3.fromRGB(95, 95, 95)
Label.BorderColor3 = Color3.fromRGB(0, 0, 0)
Label.BorderSizePixel = 0
Label.Size = UDim2.new(1, 0, 0.160583943, 0)
Label.FontFace = Font.new("rbxasset://fonts/families/Nunito.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
Label.Text = "Bring Parts | Made by: Lusquinha_067"
Label.TextColor3 = Color3.fromRGB(255, 255, 255)
Label.TextScaled = true
Label.TextSize = 14.000
Label.TextWrapped = true

UITextSizeConstraint_2.Parent = Label
UITextSizeConstraint_2.MaxTextSize = 21

Button.Name = "Button"
Button.Parent = Main
Button.BackgroundColor3 = Color3.fromRGB(95, 95, 95)
Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0.183284417, 0, 0.656760991, 0)
Button.Size = UDim2.new(0.629427791, 0, 0.277372271, 0)
Button.Font = Enum.Font.Nunito
Button.Text = "Bring | Off"
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextScaled = true
Button.TextSize = 28.000
Button.TextWrapped = true

UITextSizeConstraint_3.Parent = Button
UITextSizeConstraint_3.MaxTextSize = 28

-- Scripts:

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

local character
local humanoidRootPart

mainStatus = true
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
	if input.KeyCode == Enum.KeyCode.RightControl and not gameProcessedEvent then
		mainStatus = not mainStatus
		Main.Visible = mainStatus
	end
end)

local Folder = Instance.new("Folder", Workspace)
local Part = Instance.new("Part", Folder)
local Attachment1 = Instance.new("Attachment", Part)
Part.Anchored = true
Part.CanCollide = false
Part.Transparency = 1

if not getgenv().Network then
	getgenv().Network = {
		BaseParts = {},
		Velocity = Vector3.new(14.46262424, 14.46262424, 14.46262424)
	}

	Network.RetainPart = function(Part)
		if Part:IsA("BasePart") and Part:IsDescendantOf(Workspace) then
			table.insert(Network.BaseParts, Part)
			Part.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
			Part.CanCollide = false
		end
	end

	local function EnablePartControl()
		LocalPlayer.ReplicationFocus = Workspace
		RunService.Heartbeat:Connect(function()
			sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
			for _, Part in pairs(Network.BaseParts) do
				if Part:IsDescendantOf(Workspace) then
					Part.Velocity = Network.Velocity
				end
			end
		end)
	end

	EnablePartControl()
end

local function ForcePart(v)
	if v:IsA("BasePart") and not v.Anchored and not v.Parent:FindFirstChildOfClass("Humanoid") and not v.Parent:FindFirstChild("Head") and v.Name ~= "Handle" then
		for _, x in ipairs(v:GetChildren()) do
			if x:IsA("BodyMover") or x:IsA("RocketPropulsion") then
				x:Destroy()
			end
		end
		if v:FindFirstChild("Attachment") then
			v:FindFirstChild("Attachment"):Destroy()
		end
		if v:FindFirstChild("AlignPosition") then
			v:FindFirstChild("AlignPosition"):Destroy()
		end
		if v:FindFirstChild("Torque") then
			v:FindFirstChild("Torque"):Destroy()
		end
		v.CanCollide = false
		local Torque = Instance.new("Torque", v)
		Torque.Torque = Vector3.new(100000, 100000, 100000)
		local AlignPosition = Instance.new("AlignPosition", v)
		local Attachment2 = Instance.new("Attachment", v)
		Torque.Attachment0 = Attachment2
		AlignPosition.MaxForce = math.huge
		AlignPosition.MaxVelocity = math.huge
		AlignPosition.Responsiveness = 200
		AlignPosition.Attachment0 = Attachment2
		AlignPosition.Attachment1 = Attachment1
	end
end

local blackHoleActive = false
local DescendantAddedConnection

local function toggleBlackHole()
	blackHoleActive = not blackHoleActive
	if blackHoleActive then
		Button.Text = "Bring Parts | On"
		for _, v in ipairs(Workspace:GetDescendants()) do
			ForcePart(v)
		end

		DescendantAddedConnection = Workspace.DescendantAdded:Connect(function(v)
			if blackHoleActive then
				ForcePart(v)
			end
		end)

		spawn(function()
			while blackHoleActive and RunService.RenderStepped:Wait() do
				Attachment1.WorldCFrame = humanoidRootPart.CFrame
			end
		end)
	else
		Button.Text = "Bring Parts | Off"
		if DescendantAddedConnection then
			DescendantAddedConnection:Disconnect()
		end
	end
end

local function getPlayer(name)
	local lowerName = string.lower(name)
	for _, p in pairs(Players:GetPlayers()) do
		local lowerPlayer = string.lower(p.Name)
		if string.find(lowerPlayer, lowerName) then
			return p
		elseif string.find(string.lower(p.DisplayName), lowerName) then
			return p
		end
	end
end

local player = nil

local function VDOYZQL_fake_script() -- Box.Script 
	local script = Instance.new('Script', Box)

	script.Parent.FocusLost:Connect(function(enterPressed)
		if enterPressed then
			player = getPlayer(Box.Text)
			if player then
				Box.Text = player.Name
				print("Player found:", player.Name)
			else
				print("Player not found")
			end
		end
	end)
end
coroutine.wrap(VDOYZQL_fake_script)()
local function JUBNQKI_fake_script() -- Button.Script 
	local script = Instance.new('Script', Button)

	script.Parent.MouseButton1Click:Connect(function()
		if player then
			character = player.Character or player.CharacterAdded:Wait()
			humanoidRootPart = character:WaitForChild("HumanoidRootPart")
			toggleBlackHole()
		else
			print("Player is not selected")
		end
	end)
end
coroutine.wrap(JUBNQKI_fake_script)()
    end
})

TrollTab:AddSection({ "Invis√≠vel" })

TrollTab:AddButton({
    Name = "Ficar Invis√≠vel",
    Description = "Ficar invis√≠vel FE",
Callback = function()
        
        local args = {
    [1] = {
        [1] = 102344834840946,
        [2] = 70400527171038,
        [3] = 0,
        [4] = 0,
        [5] = 0,
        [6] = 0
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ChangeCharacterBody"):InvokeServer(unpack(args))
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(111858803548721)
local allaccessories = {}

for zxcwefwfecas, xcaefwefas in ipairs({
    game.Players.LocalPlayer.Character.Humanoid.HumanoidDescription.BackAccessory,
    game.Players.LocalPlayer.Character.Humanoid.HumanoidDescription.FaceAccessory,
    game.Players.LocalPlayer.Character.Humanoid.HumanoidDescription.FrontAccessory,
    game.Players.LocalPlayer.Character.Humanoid.HumanoidDescription.NeckAccessory,
    game.Players.LocalPlayer.Character.Humanoid.HumanoidDescription.HatAccessory,
    game.Players.LocalPlayer.Character.Humanoid.HumanoidDescription.HairAccessory,
    game.Players.LocalPlayer.Character.Humanoid.HumanoidDescription.ShouldersAccessory,
    game.Players.LocalPlayer.Character.Humanoid.HumanoidDescription.WaistAccessory,
    game.Players.LocalPlayer.Character.Humanoid.HumanoidDescription.GraphicTShirt
}) do
    for scacvdfbdb in string.gmatch(xcaefwefas, "%d+") do
        table.insert(allaccessories, tonumber(scacvdfbdb))
    end
end

wait()

for asdwr,asderg in ipairs(allaccessories) do
    task.spawn(function()
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(asderg)
        print(asderg)
    end)
end
    end
})


TrollTab:AddSection({ "Avatar RGB" })

local colors = { "Bright red", "Lime green", "Bright blue", "Bright yellow", "Bright cyan", "Hot pink", "Royal purple" }
local rgbEnabled = false

local function changeColor(color)
    local args = { color }
    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("ChangeBodyColor"):FireServer(unpack(args))
end

local function toggleRGBCharacter(enabled)
    rgbEnabled = enabled
    if rgbEnabled then
        while rgbEnabled do
            for _, color in ipairs(colors) do
                if not rgbEnabled then return end
                changeColor(color)
                wait(0.5)
            end
        end
    end 
end

TrollTab:AddToggle({
    Name = "RGB Character",
    Description = "Deixa seu personagem RGB",
    Default = false,
    Callback = function(value)
        toggleRGBCharacter(value)
    end
})


TrollTab:AddSection({ "Cabelo RGB" })
local hairColors = {
    Color3.new(1, 1, 0), Color3.new(0, 0, 1), Color3.new(1, 0, 1), Color3.new(1, 1, 1),
    Color3.new(0, 1, 0), Color3.new(0.5, 0, 1), Color3.new(1, 0.647, 0), Color3.new(0, 1, 1)
}
local isActive = false


local function changeHairColor()
    local i = 1
    while isActive do
        if not isActive then break end
        local args = { [1] = "ChangeHairColor2", [2] = hairColors[i] }
        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Max1y"):FireServer(unpack(args))
        wait(0.1)
        i = i % #hairColors + 1
    end
end


TrollTab:AddToggle({
    Name = "Cabelo RGB",
    Description = "Deixa Seu Cabelo RGB",
    Default = false,
    Callback = function(value)
        isActive = value
        if isActive then
            changeHairColor()
        end
    end
})

TrollTab:AddSection({ "ESP" })

-- Toggle de ativa√ß√£o do ESP
TrollTab:AddToggle({
    Name = "ESP Ativado",
    Description = "Mostra nome e idade da conta dos jogadores.",
    Default = false,
    Callback = function(value)
        -- Vari√°veis locais (dentro do toggle)
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        
        -- Usar _G para persistir vari√°veis entre ativa√ß√µes/desativa√ß√µes
        if not _G.ESPData then
            _G.ESPData = {
                espEnabled = false,
                selectedColor = "RGB",
                billboardGuis = {},
                connections = {},
                dropdownCreated = false
            }
        end
        
        _G.ESPData.espEnabled = value

        -- Fun√ß√£o para obter a cor
        local function getESPColor()
            if _G.ESPData.selectedColor == "RGB" then
                local h = (tick() % 5) / 5
                return Color3.fromHSV(h, 1, 1)
            elseif _G.ESPData.selectedColor == "Preto" then
                return Color3.fromRGB(0, 0, 0)
            elseif _G.ESPData.selectedColor == "Branco" then
                return Color3.fromRGB(255, 255, 255)
            elseif _G.ESPData.selectedColor == "Vermelho" then
                return Color3.fromRGB(255, 0, 0)
            elseif _G.ESPData.selectedColor == "Verde" then
                return Color3.fromRGB(0, 255, 0)
            elseif _G.ESPData.selectedColor == "Azul" then
                return Color3.fromRGB(0, 170, 255)
            elseif _G.ESPData.selectedColor == "Amarelo" then
                return Color3.fromRGB(255, 255, 0)
            elseif _G.ESPData.selectedColor == "Rosa" then
                return Color3.fromRGB(255, 105, 180)
            elseif _G.ESPData.selectedColor == "Roxo" then
                return Color3.fromRGB(128, 0, 128)
            end
            return Color3.new(1, 1, 1)
        end

        -- Fun√ß√£o para criar o ESP
        local function updateESP(player)
            if player == Players.LocalPlayer then return end
            if not _G.ESPData.espEnabled then return end

            local character = player.Character
            if character then
                local head = character:FindFirstChild("Head")
                if head then
                    if _G.ESPData.billboardGuis[player] then
                        _G.ESPData.billboardGuis[player]:Destroy()
                    end

                    local billboard = Instance.new("BillboardGui")
                    billboard.Name = "ESP_Billboard"
                    billboard.Parent = head
                    billboard.Adornee = head
                    billboard.Size = UDim2.new(0, 200, 0, 50)
                    billboard.StudsOffset = Vector3.new(0, 3, 0)
                    billboard.AlwaysOnTop = true

                    local textLabel = Instance.new("TextLabel")
                    textLabel.Name = "TextLabel"
                    textLabel.Parent = billboard
                    textLabel.Size = UDim2.new(1, 0, 1, 0)
                    textLabel.BackgroundTransparency = 1
                    textLabel.TextStrokeTransparency = 0.5
                    textLabel.Font = Enum.Font.SourceSansBold
                    textLabel.TextSize = 14
                    textLabel.Text = player.Name .. " | " .. player.AccountAge .. " dias"
                    textLabel.TextColor3 = getESPColor()

                    _G.ESPData.billboardGuis[player] = billboard
                end
            end
        end

        -- Fun√ß√£o para remover o ESP
        local function removeESP(player)
            if _G.ESPData.billboardGuis[player] then
                _G.ESPData.billboardGuis[player]:Destroy()
                _G.ESPData.billboardGuis[player] = nil
            end
        end

        -- Fun√ß√£o para limpar todos os ESPs
        local function clearAllESP()
            for player, gui in pairs(_G.ESPData.billboardGuis) do
                if gui then
                    gui:Destroy()
                end
            end
            _G.ESPData.billboardGuis = {}
        end

        if _G.ESPData.espEnabled then
            -- Criar dropdown apenas uma vez
            if not _G.ESPData.dropdownCreated then
                TrollTab:AddDropdown({
                    Name = "Cor do ESP",
                    Default = "RGB",
                    Options = {
                        "RGB", "Branco", "Preto", "Vermelho",
                        "Verde", "Azul", "Amarelo", "Rosa", "Roxo"
                    },
                    Callback = function(colorValue)
                        _G.ESPData.selectedColor = colorValue
                    end
                })
                _G.ESPData.dropdownCreated = true
            end

            -- Ativa o ESP para todos os jogadores atuais
            for _, player in pairs(Players:GetPlayers()) do
                updateESP(player)
            end

            -- Limpar conex√µes antigas antes de criar novas
            for _, conn in pairs(_G.ESPData.connections) do
                if conn and conn.Connected then
                    conn:Disconnect()
                end
            end
            _G.ESPData.connections = {}

            -- Conex√£o para atualizar ESP continuamente
            local updateConnection = RunService.Heartbeat:Connect(function()
                if not _G.ESPData.espEnabled then return end
                
                for _, player in pairs(Players:GetPlayers()) do
                    updateESP(player)
                end
                
                -- Atualiza cor RGB em tempo real
                if _G.ESPData.selectedColor == "RGB" then
                    for _, player in pairs(Players:GetPlayers()) do
                        local gui = _G.ESPData.billboardGuis[player]
                        if gui and gui:FindFirstChild("TextLabel") then
                            gui.TextLabel.TextColor3 = getESPColor()
                        end
                    end
                end
            end)
            table.insert(_G.ESPData.connections, updateConnection)

            -- Conex√£o para novos jogadores
            local playerAdded = Players.PlayerAdded:Connect(function(player)
                if not _G.ESPData.espEnabled then return end
                updateESP(player)
                local charConn = player.CharacterAdded:Connect(function()
                    if not _G.ESPData.espEnabled then return end
                    wait(0.1)
                    updateESP(player)
                end)
                table.insert(_G.ESPData.connections, charConn)
            end)
            table.insert(_G.ESPData.connections, playerAdded)

            -- Conex√£o para jogadores que saem
            local playerRemoving = Players.PlayerRemoving:Connect(function(player)
                removeESP(player)
            end)
            table.insert(_G.ESPData.connections, playerRemoving)

        else
            -- Desativa o ESP REALMENTE
            clearAllESP()
            
            -- Desconecta todas as conex√µes
            for _, conn in pairs(_G.ESPData.connections) do
                if conn and conn.Connected then
                    conn:Disconnect()
                end
            end
            _G.ESPData.connections = {}
        end
    end
})


local Troll = Window:MakeTab({ Title = "Troll Players", Icon = "rbxassetid://131153193945220" })


local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualInputManager = game:GetService("VirtualInputManager")
local RunService = game:GetService("RunService")
local cam = workspace.CurrentCamera


local selectedPlayerName = nil
local methodKill = nil
getgenv().Target = nil
local Character = LocalPlayer.Character
local Humanoid = Character and Character:WaitForChild("Humanoid")
local RootPart = Character and Character:WaitForChild("HumanoidRootPart")

-- Fun√ß√£o para limpar o sof√° (couch)
local function cleanupCouch()
    local char = LocalPlayer.Character
    if char then
        local couch = char:FindFirstChild("Chaos.Couch") or LocalPlayer.Backpack:FindFirstChild("Chaos.Couch")
        if couch then
            couch:Destroy()
        end
    end
    -- Limpar ferramentas via remoto
    ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer("ClearAllTools")
end

-- Conectar evento CharacterAdded
LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    Humanoid = newCharacter:WaitForChild("Humanoid")
    RootPart = newCharacter:WaitForChild("HumanoidRootPart")
    cleanupCouch()
    
    -- Conectar evento Died para o novo Humanoid
    Humanoid.Died:Connect(function()
        cleanupCouch()
    end)
end)

-- Conectar evento Died para o Humanoid inicial, se existir
if Humanoid then
    Humanoid.Died:Connect(function()
        cleanupCouch()
    end)
end

-- Fun√ß√£o KillPlayerCouch
local function KillPlayerCouch()
    if not selectedPlayerName then
        warn("Erro: Nenhum jogador selecionado")
        return
    end
    local target = Players:FindFirstChild(selectedPlayerName)
    if not target or not target.Character then
        warn("Erro: Jogador alvo n√£o encontrado ou sem personagem")
        return
    end

    local char = LocalPlayer.Character
    if not char then
        warn("Erro: Personagem do jogador local n√£o encontrado")
        return
    end
    local hum = char:FindFirstChildOfClass("Humanoid")
    local root = char:FindFirstChild("HumanoidRootPart")
    local tRoot = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
    if not hum or not root or not tRoot then
        warn("Erro: Componentes necess√°rios n√£o encontrados")
        return
    end

    local originalPos = root.Position 
    local sitPos = Vector3.new(145.51, -350.09, 21.58)

    ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer("ClearAllTools")
    task.wait(0.2)

    ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
    task.wait(0.3)

    local tool = LocalPlayer.Backpack:FindFirstChild("Couch")
    if tool then tool.Parent = char end
    task.wait(0.1)

    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.F, false, game)
    task.wait(0.1)

    hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
    hum.PlatformStand = false
    cam.CameraSubject = target.Character:FindFirstChild("Head") or tRoot or hum

    local align = Instance.new("BodyPosition")
    align.Name = "BringPosition"
    align.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    align.D = 10
    align.P = 30000
    align.Position = root.Position
    align.Parent = tRoot

    task.spawn(function()
        local angle = 0
        local startTime = tick()
        while tick() - startTime < 5 and target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") do
            local tHum = target.Character:FindFirstChildOfClass("Humanoid")
            if not tHum or tHum.Sit then break end

            local hrp = target.Character.HumanoidRootPart
            local adjustedPos = hrp.Position + (hrp.Velocity / 1.5)

            angle += 50
            root.CFrame = CFrame.new(adjustedPos + Vector3.new(0, 2, 0)) * CFrame.Angles(math.rad(angle), 0, 0)
            align.Position = root.Position + Vector3.new(2, 0, 0)

            task.wait()
        end

        align:Destroy()
        hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
        hum.PlatformStand = false
        cam.CameraSubject = hum

        for _, p in pairs(char:GetDescendants()) do
            if p:IsA("BasePart") then
                p.Velocity = Vector3.zero
                p.RotVelocity = Vector3.zero
            end
        end

        task.wait(0.1)
        root.CFrame = CFrame.new(sitPos)
        task.wait(0.3)

        local tool = char:FindFirstChild("Couch")
        if tool then tool.Parent = LocalPlayer.Backpack end

        task.wait(0.01)
        ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
        task.wait(0.2)
        root.CFrame = CFrame.new(originalPos)
    end)
end

-- Fun√ß√£o BringPlayerLLL
local function BringPlayerLLL()
    if not selectedPlayerName then
        warn("Erro: Nenhum jogador selecionado")
        return
    end
    local target = Players:FindFirstChild(selectedPlayerName)
    if not target or not target.Character then
        warn("Erro: Jogador alvo n√£o encontrado ou sem personagem")
        return
    end

    local char = LocalPlayer.Character
    if not char then
        warn("Erro: Personagem do jogador local n√£o encontrado")
        return
    end
    local hum = char:FindFirstChildOfClass("Humanoid")
    local root = char:FindFirstChild("HumanoidRootPart")
    local tRoot = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
    if not hum or not root or not tRoot then
        warn("Erro: Componentes necess√°rios n√£o encontrados")
        return
    end

    local originalPos = root.Position 
    ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer("ClearAllTools")
    task.wait(0.2)

    ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
    task.wait(0.3)

    local tool = LocalPlayer.Backpack:FindFirstChild("Couch")
    if tool then
        tool.Parent = char
    end
    task.wait(0.1)

    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.F, false, game)
    task.wait(0.1)

    hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
    hum.PlatformStand = false
    cam.CameraSubject = target.Character:FindFirstChild("Head") or tRoot or hum

    local align = Instance.new("BodyPosition")
    align.Name = "BringPosition"
    align.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    align.D = 10
    align.P = 30000
    align.Position = root.Position
    align.Parent = tRoot

    task.spawn(function()
        local angle = 0
        local startTime = tick()
        while tick() - startTime < 5 and target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") do
            local tHum = target.Character:FindFirstChildOfClass("Humanoid")
            if not tHum or tHum.Sit then break end

            local hrp = target.Character.HumanoidRootPart
            local adjustedPos = hrp.Position + (hrp.Velocity / 1.5)

            angle += 50
            root.CFrame = CFrame.new(adjustedPos + Vector3.new(0, 2, 0)) * CFrame.Angles(math.rad(angle), 0, 0)
            align.Position = root.Position + Vector3.new(2, 0, 0)

            task.wait()
        end

        align:Destroy()
        hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
        hum.PlatformStand = false
        cam.CameraSubject = hum

        for _, p in pairs(char:GetDescendants()) do
            if p:IsA("BasePart") then
                p.Velocity = Vector3.zero
                p.RotVelocity = Vector3.zero
            end
        end

        task.wait(0.1)
        root.Anchored = true
        root.CFrame = CFrame.new(originalPos)
        task.wait(0.001)
        root.Anchored = false

        task.wait(0.7)
        local tool = char:FindFirstChild("Couch")
        if tool then
            tool.Parent = LocalPlayer.Backpack
        end

        task.wait(0.001)
        ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
    end)
end

-- Fun√ß√£o BringWithCouch
local function BringWithCouch()
    local targetPlayer = Players:FindFirstChild(getgenv().Target)
    if not targetPlayer then
        warn("Erro: Nenhum jogador alvo selecionado")
        return
    end
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        warn("Erro: Jogador alvo sem personagem ou HumanoidRootPart")
        return
    end

    local args = { [1] = "ClearAllTools" }
    ReplicatedStorage.RE["1Clea1rTool1s"]:FireServer(unpack(args))
    local args = { [1] = "PickingTools", [2] = "Couch" }
    ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))

    local couch = LocalPlayer.Backpack:WaitForChild("Couch", 2)
    if not couch then
        warn("Erro: Sof√° n√£o encontrado no Backpack")
        return
    end

    couch.Name = "Chaos.Couch"
    local seat1 = couch:FindFirstChild("Seat1")
    local seat2 = couch:FindFirstChild("Seat2")
    local handle = couch:FindFirstChild("Handle")
    if seat1 and seat2 and handle then
        seat1.Disabled = true
        seat2.Disabled = true
        handle.Name = "Handle "
    else
        warn("Erro: Componentes do sof√° n√£o encontrados")
        return
    end
    couch.Parent = LocalPlayer.Character

    local tet = Instance.new("BodyVelocity", seat1)
    tet.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    tet.P = 1250
    tet.Velocity = Vector3.new(0, 0, 0)
    tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"

    repeat
        for m = 1, 35 do
            local pos = { x = 0, y = 0, z = 0 }
            local tRoot = targetPlayer.Character and targetPlayer.Character.HumanoidRootPart
            if not tRoot then break end
            pos.x = tRoot.Position.X + (tRoot.Velocity.X / 2)
            pos.y = tRoot.Position.Y + (tRoot.Velocity.Y / 2)
            pos.z = tRoot.Position.Z + (tRoot.Velocity.Z / 2)
            seat1.CFrame = CFrame.new(Vector3.new(pos.x, pos.y, pos.z)) * CFrame.new(-2, 2, 0)
            task.wait()
        end
        tet:Destroy()
        couch.Parent = LocalPlayer.Backpack
        task.wait()
        couch:FindFirstChild("Handle ").Name = "Handle"
        task.wait(0.2)
        couch.Parent = LocalPlayer.Character
        task.wait()
        couch.Parent = LocalPlayer.Backpack
        couch.Handle.Name = "Handle "
        task.wait(0.2)
        couch.Parent = LocalPlayer.Character
        tet = Instance.new("BodyVelocity", seat1)
        tet.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        tet.P = 1250
        tet.Velocity = Vector3.new(0, 0, 0)
        tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"
    until targetPlayer.Character and targetPlayer.Character.Humanoid and targetPlayer.Character.Humanoid.Sit == true
    task.wait()
    tet:Destroy()
    couch.Parent = LocalPlayer.Backpack
    task.wait()
    couch:FindFirstChild("Handle ").Name = "Handle"
    task.wait(0.3)
    couch.Parent = LocalPlayer.Character
    task.wait(0.3)
    couch.Grip = CFrame.new(Vector3.new(0, 0, 0))
    task.wait(0.3)
    ReplicatedStorage.RE["1Clea1rTool1s"]:FireServer("ClearAllTools")
end

-- Fun√ß√£o KillWithCouch
local function KillWithCouch()
    local targetPlayer = Players:FindFirstChild(getgenv().Target)
    if not targetPlayer then
        warn("Erro: Nenhum jogador alvo selecionado")
        return
    end
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        warn("Erro: Jogador alvo sem personagem ou HumanoidRootPart")
        return
    end

    local args = { [1] = "ClearAllTools" }
    ReplicatedStorage.RE["1Clea1rTool1s"]:FireServer(unpack(args))
    local args = { [1] = "PickingTools", [2] = "Couch" }
    ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))

    local couch = LocalPlayer.Backpack:WaitForChild("Couch", 2)
    if not couch then
        warn("Erro: Sof√° n√£o encontrado no Backpack")
        return
    end

    couch.Name = "Chaos.Couch"
    local seat1 = couch:FindFirstChild("Seat1")
    local seat2 = couch:FindFirstChild("Seat2")
    local handle = couch:FindFirstChild("Handle")
    if seat1 and seat2 and handle then
        seat1.Disabled = true
        seat2.Disabled = true
        handle.Name = "Handle "
    else
        warn("Erro: Componentes do sof√° n√£o encontrados")
        return
    end
    couch.Parent = LocalPlayer.Character

    local tet = Instance.new("BodyVelocity", seat1)
    tet.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    tet.P = 1250
    tet.Velocity = Vector3.new(0, 0, 0)
    tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"

    repeat
        for m = 1, 35 do
            local pos = { x = 0, y = 0, z = 0 }
            local tRoot = targetPlayer.Character and targetPlayer.Character.HumanoidRootPart
            if not tRoot then break end
            pos.x = tRoot.Position.X + (tRoot.Velocity.X / 2)
            pos.y = tRoot.Position.Y + (tRoot.Velocity.Y / 2)
            pos.z = tRoot.Position.Z + (tRoot.Velocity.Z / 2)
            seat1.CFrame = CFrame.new(Vector3.new(pos.x, pos.y, pos.z)) * CFrame.new(-2, 2, 0)
            task.wait()
        end
        tet:Destroy()
        couch.Parent = LocalPlayer.Backpack
        task.wait()
        couch:FindFirstChild("Handle ").Name = "Handle"
        task.wait(0.2)
        couch.Parent = LocalPlayer.Character
        task.wait()
        couch.Parent = LocalPlayer.Backpack
        couch.Handle.Name = "Handle "
        task.wait(0.2)
        couch.Parent = LocalPlayer.Character
        tet = Instance.new("BodyVelocity", seat1)
        tet.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        tet.P = 1250
        tet.Velocity = Vector3.new(0, 0, 0)
        tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"
    until targetPlayer.Character and targetPlayer.Character.Humanoid and targetPlayer.Character.Humanoid.Sit == true
    task.wait()
    couch.Parent = LocalPlayer.Backpack
    seat1.CFrame = CFrame.new(Vector3.new(9999, -450, 9999))
    seat2.CFrame = CFrame.new(Vector3.new(9999, -450, 9999))
    couch.Parent = LocalPlayer.Character
    task.wait(0.1)
    couch.Parent = LocalPlayer.Backpack
    task.wait(2)
    local bv = seat1:FindFirstChild("#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W")
    if bv then bv:Destroy() end
    ReplicatedStorage.RE["1Clea1rTool1s"]:FireServer("ClearAllTools")
end
    local PlayerSection = Troll:AddSection({ Name = "Troll Player" })

    -- Fun√ß√£o para obter lista de jogadores
    local function getPlayerList()
        local players = Players:GetPlayers()
        local playerNames = {}
        for _, player in ipairs(players) do
            if player ~= LocalPlayer then
                table.insert(playerNames, player.Name)
            end
        end
        return playerNames
    end

-- Fun√ß√£o shutdown
local function playerCorrupt()
    local targetPlayer = Players:FindFirstChild(getgenv().Target)
    if not targetPlayer then
        warn("Erro: Nenhum jogador alvo selecionado")
        return
    end
    if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        warn("Erro: Jogador alvo sem personagem ou HumanoidRootPart")
        return
    end

    local args = { [1] = "ClearAllTools" }
    ReplicatedStorage.RE["1Clea1rTool1s"]:FireServer(unpack(args))
    local args = { [1] = "PickingTools", [2] = "Couch" }
    ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))

    local couch = LocalPlayer.Backpack:WaitForChild("Couch", 2)
    if not couch then
        warn("Erro: Sof√° n√£o encontrado no Backpack")
        return
    end

    couch.Name = "Chaos.Couch"
    local seat1 = couch:FindFirstChild("Seat1")
    local seat2 = couch:FindFirstChild("Seat2")
    local handle = couch:FindFirstChild("Handle")
    if seat1 and seat2 and handle then
        seat1.Disabled = true
        seat2.Disabled = true
        handle.Name = "Handle "
    else
        warn("Erro: Componentes do sof√° n√£o encontrados")
        return
    end
    couch.Parent = LocalPlayer.Character

    local tet = Instance.new("BodyVelocity", seat1)
    tet.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    tet.P = 1250
    tet.Velocity = Vector3.new(0, 0, 0)
    tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"

    repeat
        for m = 1, 35 do
            local pos = { x = 0, y = 0, z = 0 }
            local tRoot = targetPlayer.Character and targetPlayer.Character.HumanoidRootPart
            if not tRoot then break end
            pos.x = tRoot.Position.X + (tRoot.Velocity.X / 2)
            pos.y = tRoot.Position.Y + (tRoot.Velocity.Y / 2)
            pos.z = tRoot.Position.Z + (tRoot.Velocity.Z / 2)
            seat1.CFrame = CFrame.new(Vector3.new(pos.x, pos.y, pos.z)) * CFrame.new(-2, 2, 0)
            task.wait()
        end
        tet:Destroy()
        couch.Parent = LocalPlayer.Backpack
        task.wait()
        couch:FindFirstChild("Handle ").Name = "Handle"
        task.wait(0.2)
        couch.Parent = LocalPlayer.Character
        task.wait()
        couch.Parent = LocalPlayer.Backpack
        couch.Handle.Name = "Handle "
        task.wait(0.2)
        couch.Parent = LocalPlayer.Character
        tet = Instance.new("BodyVelocity", seat1)
        tet.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        tet.P = 1250
        tet.Velocity = Vector3.new(0, 0, 0)
        tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"
    until targetPlayer.Character and targetPlayer.Character.Humanoid and targetPlayer.Character.Humanoid.Sit == true
    task.wait()
    couch.Parent = LocalPlayer.Backpack
    seat1.CFrame = CFrame.new(Vector3.new(0/0, 0/0, 0/0))
    seat2.CFrame.new(Vector3.new(0/0, 0/0, 0/0))
    couch.Parent = LocalPlayer.Character
    task.wait(0.1)
    couch.Parent = LocalPlayer.Backpack
    task.wait(2)
    local bv = seat1:FindFirstChild("#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W")
    if bv then bv:Destroy() end
    ReplicatedStorage.RE["1Clea1rTool1s"]:FireServer("ClearAllTools")
end

    local killDropdown = Troll:AddDropdown({
        Name = "Selecionar Jogador",
        Options = getPlayerList(),
        Default = "",
        Callback = function(value)
            selectedPlayerName = value
            getgenv().Target = value
            print("Jogador selecionado: " .. tostring(value))
        end
    })

    Troll:AddButton({
        Name = "Atualizar Player List",
        Callback = function()
            local tablePlayers = Players:GetPlayers()
            local newPlayers = {}
            if killDropdown and #tablePlayers > 0 then
                for _, player in ipairs(tablePlayers) do
                    if player.Name ~= LocalPlayer.Name then
                        table.insert(newPlayers, player.Name)
                    end
                end
                killDropdown:Set(newPlayers)
                print("Lista de jogadores atualizada: ", table.concat(newPlayers, ", "))
                if selectedPlayerName and not Players:FindFirstChild(selectedPlayerName) then
                    selectedPlayerName = nil
                    getgenv().Target = nil
                    killDropdown:SetValue("")
                    print("Sele√ß√£o resetada, jogador n√£o est√° mais no servidor.")
                end
            else
                print("Erro: Dropdown n√£o encontrado ou nenhum jogador dispon√≠vel.")
            end
        end
    })

    Troll:AddButton({
        Name = "Teleportar at√© o Player",
        Callback = function()
            if not selectedPlayerName or not Players:FindFirstChild(selectedPlayerName) then
                print("Erro: Player n√£o selecionado ou n√£o existe")
                return
            end
            local character = LocalPlayer.Character
            local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
            if not humanoidRootPart then
                warn("Erro: HumanoidRootPart do jogador local n√£o encontrado")
                return
            end

            local targetPlayer = Players:FindFirstChild(selectedPlayerName)
            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                humanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
            else
                print("Erro: Player alvo n√£o encontrado ou sem HumanoidRootPart")
            end
        end
    })

    Troll:AddToggle({
        Name = "Spectar Player",
        Default = false,
        Callback = function(value)
            local Camera = workspace.CurrentCamera

            local function UpdateCamera()
                if value then
                    local targetPlayer = Players:FindFirstChild(selectedPlayerName)
                    if targetPlayer and targetPlayer.Character then
                        local humanoid = targetPlayer.Character:FindFirstChild("Humanoid")
                        if humanoid then
                            Camera.CameraSubject = humanoid
                        end
                    end
                else
                    if LocalPlayer.Character then
                        local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
                        if humanoid then
                            Camera.CameraSubject = humanoid
                        end
                    end
                end
            end

            if value then
                if not getgenv().CameraConnection then
                    getgenv().CameraConnection = RunService.Heartbeat:Connect(UpdateCamera)
                end
            else
                if getgenv().CameraConnection then
                    getgenv().CameraConnection:Disconnect()
                    getgenv().CameraConnection = nil
                end
                UpdateCamera()
            end
        end
    })
    

Troll:AddSection({ "Headsit Player" })


Troll:AddTextBox({
    Name = "Nome do Jogador",
    Description = "Digite Nome",
    PlaceholderText = "Ex: shad0ws",
    Callback = function(Value)
        local Players = game:GetService("Players")
        local StarterGui = game:GetService("StarterGui")
        local localPlayer = Players.LocalPlayer
        
        -- Fun√ß√£o para encontrar jogador por nome parcial
        local function findPlayerByPartialName(partial)
            partial = partial:lower()
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= localPlayer and player.Name:lower():sub(1, #partial) == partial then
                    return player
                end
            end
            return nil
        end
        
        -- Notifica√ß√£o com imagem do jogador
        local function notifyPlayerSelected(player)
            local thumbType = Enum.ThumbnailType.HeadShot
            local thumbSize = Enum.ThumbnailSize.Size100x100
            local content, _ = Players:GetUserThumbnailAsync(player.UserId, thumbType, thumbSize)

            StarterGui:SetCore("SendNotification", {
                Title = "Player Selecionado",
                Text = player.Name .. " foi selecionado!",
                Icon = content,
                Duration = 5
            })
        end
        
        local foundPlayer = findPlayerByPartialName(Value)
        if foundPlayer then
            _G.selectedPlayerName = foundPlayer.Name
            notifyPlayerSelected(foundPlayer)
        else
            warn("Nenhum jogador encontrado com esse nome.")
        end
    end
})


Troll:AddButton({
    Name = "Headsit Clique Para Ativar E Desativar",
    Description = "Ativa ou desativa o headsit no player selecionado",
    Callback = function()
        local Players = game:GetService("Players")
        local localPlayer = Players.LocalPlayer
        
        if not _G.selectedPlayerName then
            warn("Nenhum jogador selecionado.")
            return
        end
        
        -- Inicializa headsitActive se n√£o existir
        if _G.headsitActive == nil then
            _G.headsitActive = false
        end
        
        local function headsitOnPlayer(targetPlayer)
            local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildOfClass("Humanoid")

            if not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("Head") then
                warn("Jogador alvo sem cabe√ßa ou personagem.")
                return false
            end
            local targetHead = targetPlayer.Character.Head
            local localRoot = character:FindFirstChild("HumanoidRootPart")
            if not localRoot then
                warn("Seu personagem n√£o tem HumanoidRootPart.")
                return false
            end

            localRoot.CFrame = targetHead.CFrame * CFrame.new(0, 2.2, 0)

            for _, v in pairs(localRoot:GetChildren()) do
                if v:IsA("WeldConstraint") then
                    v:Destroy()
                end
            end

            local weld = Instance.new("WeldConstraint")
            weld.Part0 = localRoot
            weld.Part1 = targetHead
            weld.Parent = localRoot

            if humanoid then
                humanoid.Sit = true
            end

            print("Headsit ativado em " .. targetPlayer.Name)
            return true
        end

        local function removeHeadsit()
            local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            local localRoot = character:FindFirstChild("HumanoidRootPart")
            if localRoot then
                for _, v in pairs(localRoot:GetChildren()) do
                    if v:IsA("WeldConstraint") then
                        v:Destroy()
                    end
                end
            end
            if humanoid then
                humanoid.Sit = false
            end

            print("Headsit desativado.")
        end

        if not _G.headsitActive then
            local target = Players:FindFirstChild(_G.selectedPlayerName)
            if target and headsitOnPlayer(target) then
                _G.headsitActive = true
            end
        else
            removeHeadsit()
            _G.headsitActive = false
        end
    end
})


Troll:AddSection({"Annoy E Glitch Ative e desative quando alvo tiver no void"})

Troll:AddToggle({
    Name = "Annoy",
    Default = false,
    Callback = function(state)
        local Players = game:GetService("Players")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local RunService = game:GetService("RunService")
        local LocalPlayer = Players.LocalPlayer

        local Remote = ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Gu1n")

        getgenv().BugActive = state
        
        local function startBug()
            if getgenv().BugConnection then
                getgenv().BugConnection:Disconnect()
                getgenv().BugConnection = nil
            end

            getgenv().BugConnection = RunService.Stepped:Connect(function()
                if not getgenv().BugActive then return end
                local targetName = getgenv().Target or selectedPlayerName
                local target = targetName and Players:FindFirstChild(targetName)
                local hrp = target and target.Character and target.Character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    local crazyVector = Vector3.new(
                        math.random(-2e9, 2e9),
                        math.random(-2e9, 2e9),
                        math.random(-2e9, 2e9)
                    )
                    local args = {
                        hrp, hrp, crazyVector, hrp.Position,
                        LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("MuzzleEffect"),
                        LocalPlayer.Backpack:FindFirstChild("Assault") and LocalPlayer.Backpack.Assault.GunScript_Local:FindFirstChild("HitEffect"),
                        1000000000, 1000000000, {false},
                        {1000000000, Vector3.new(30000000,30000000,30000000), BrickColor.new(29), 0.05, Enum.Material.SmoothPlastic, 0.05},
                        true, false
                    }
                    Remote:FireServer(unpack(args))
                end
            end)
        end
        
        if state then
            local tgt = getgenv().Target or selectedPlayerName
            if not tgt or not Players:FindFirstChild(tgt) then
                warn(" Selecione um player v√°lido antes de ativar o Annoy!")
                getgenv().BugActive = false
                return
            end
            print("Annoy Ativado em: " .. tgt)
            startBug()
        else
            print("Annoy Desativado")
            if getgenv().BugConnection then
                getgenv().BugConnection:Disconnect()
                getgenv().BugConnection = nil
            end
        end
    end
})

    local MethodSection = Troll:AddSection({ Name = "M√©todos" })

    Troll:AddDropdown({
        Name = "Selecionar M√©todo para Matar",
        Options = {"Bus", "Couch", "Couch Sem ir at√© o alvo [BETA]"},
        Default = "",
        Callback = function(value)
            methodKill = value
            print("M√©todo selecionado: " .. tostring(value))
        end
    })

    Troll:AddButton({
        Name = "Matar Player",
        Callback = function()
            if not selectedPlayerName or not Players:FindFirstChild(selectedPlayerName) then
                print("Erro: Player n√£o selecionado ou n√£o existe")
                return
            end
            if methodKill == "Couch" then
                KillPlayerCouch()
            elseif methodKill == "Couch Sem ir at√© o alvo [BETA]" then
                KillWithCouch()
            else
                -- M√©todo de √¥nibus
                local character = LocalPlayer.Character
                local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
                if not humanoidRootPart then
                    warn("Erro: HumanoidRootPart do jogador local n√£o encontrado")
                    return
                end

                local originalPosition = humanoidRootPart.CFrame

                local function GetBus()
                    local vehicles = game.Workspace:FindFirstChild("Vehicles")
                    if vehicles then
                        return vehicles:FindFirstChild(LocalPlayer.Name .. "Car")
                    end
                    return nil
                end

                local bus = GetBus()

                if not bus then
                    humanoidRootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                    task.wait(0.5)
                    local remoteEvent = ReplicatedStorage:FindFirstChild("RE")
                    if remoteEvent and remoteEvent:FindFirstChild("1Ca1r") then
                        remoteEvent["1Ca1r"]:FireServer("PickingCar", "SchoolBus")
                    end
                    task.wait(1)
                    bus = GetBus()
                end

                if bus then
                    local seat = bus:FindFirstChild("Body") and bus.Body:FindFirstChild("VehicleSeat")
                    if seat and character:FindFirstChildOfClass("Humanoid") and not character.Humanoid.Sit then
                        repeat
                            humanoidRootPart.CFrame = seat.CFrame * CFrame.new(0, 2, 0)
                            task.wait()
                        until character.Humanoid.Sit or not bus.Parent
                        if character.Humanoid.Sit or not bus.Parent then
                            for k, v in pairs(bus.Body:GetChildren()) do
                                if v:IsA("Seat") then
                                    v.CanTouch = false
                                end
                            end
                        end
                    end
                end

                local function TrackPlayer()
                    while true do
                        if selectedPlayerName then
                            local targetPlayer = Players:FindFirstChild(selectedPlayerName)
                            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                                local targetHumanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
                                if targetHumanoid and targetHumanoid.Sit then
                                    if character.Humanoid then
                                        bus:SetPrimaryPartCFrame(CFrame.new(Vector3.new(9999, -450, 9999)))
                                        print("Jogador sentou, levando √¥nibus para o void!")
                                        task.wait(0.2)

                                        local function simulateJump()
                                            local humanoid = character and character:FindFirstChildWhichIsA("Humanoid")
                                            if humanoid then
                                                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                                            end
                                        end

                                        simulateJump()
                                        print("Simulando pulo!")
                                        task.wait(0.5)
                                        humanoidRootPart.CFrame = originalPosition
                                        print("Player voltou para a posi√ß√£o inicial.")
                                    end
                                    break
                                else
                                    local targetRoot = targetPlayer.Character.HumanoidRootPart
                                    local time = tick() * 35
                                    local lateralOffset = math.sin(time) * 4
                                    local frontBackOffset = math.cos(time) * 20
                                    bus:SetPrimaryPartCFrame(targetRoot.CFrame * CFrame.new(lateralOffset, 0, frontBackOffset))
                                end
                            end
                        end
                        RunService.RenderStepped:Wait()
                    end
                end

                spawn(TrackPlayer)
            end
        end
    })

Troll:AddButton({
        Name = "Shutdown Player",
        Callback = function()
         playerCorrupt()
   end
})
    Troll:AddButton({
        Name = "Puxar Player",
        Callback = function()
            if not selectedPlayerName or not Players:FindFirstChild(selectedPlayerName) then
                print("Erro: Player n√£o selecionado ou n√£o existe")
                return
            end
            if methodKill == "Couch" then
                BringPlayerLLL()
            elseif methodKill == "Couch Sem ir at√© o alvo [BETA]" then
                BringWithCouch()
            else
                -- M√©todo de √¥nibus
                local character = LocalPlayer.Character
                local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
                if not humanoidRootPart then
                    warn("Erro: HumanoidRootPart do jogador local n√£o encontrado")
                    return
                end

                local originalPosition = humanoidRootPart.CFrame

                local function GetBus()
                    local vehicles = game.Workspace:FindFirstChild("Vehicles")
                    if vehicles then
                        return vehicles:FindFirstChild(LocalPlayer.Name .. "Car")
                    end
                    return nil
                end

                local bus = GetBus()

                if not bus then
                    humanoidRootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                    task.wait(0.5)
                    local remoteEvent = ReplicatedStorage:FindFirstChild("RE")
                    if remoteEvent and remoteEvent:FindFirstChild("1Ca1r") then
                        remoteEvent["1Ca1r"]:FireServer("PickingCar", "SchoolBus")
                    end
                    task.wait(1)
                    bus = GetBus()
                end

                if bus then
                    local seat = bus:FindFirstChild("Body") and bus.Body:FindFirstChild("VehicleSeat")
                    if seat and character:FindFirstChildOfClass("Humanoid") and not character.Humanoid.Sit then
                        repeat
                            humanoidRootPart.CFrame = seat.CFrame * CFrame.new(0, 2, 0)
                            task.wait()
                        until character.Humanoid.Sit or not bus.Parent
                    end
                end

                local function TrackPlayer()
                    while true do
                        if selectedPlayerName then
                            local targetPlayer = Players:FindFirstChild(selectedPlayerName)
                            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                                local targetHumanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
                                if targetHumanoid and targetHumanoid.Sit then
                                    if character.Humanoid then
                                        bus:SetPrimaryPartCFrame(originalPosition)
                                        task.wait(0.7)
                                        local args = { [1] = "DeleteAllVehicles" }
                                        ReplicatedStorage.RE:FindFirstChild("1Ca1r"):FireServer(unpack(args))
                                    end
                                    break
                                else
                                    local targetRoot = targetPlayer.Character.HumanoidRootPart
                                    local time = tick() * 35
                                    local lateralOffset = math.sin(time) * 4
                                    local frontBackOffset = math.cos(time) * 20
                                    bus:SetPrimaryPartCFrame(targetRoot.CFrame * CFrame.new(lateralOffset, 0, frontBackOffset))
                                end
                            end
                        end
                        RunService.RenderStepped:Wait()
                    end
                end

                spawn(TrackPlayer)
            end
        end
    })


local function houseBanKill()
    if not selectedPlayerName then
        print("Nenhum jogador selecionado!")
        return
    end

    local Player = game.Players.LocalPlayer
    local Backpack = Player.Backpack
    local Character = Player.Character
    local Humanoid = Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Character:FindFirstChild("HumanoidRootPart")
    local Houses = game.Workspace:FindFirstChild("001_Lots")
    local OldPos = RootPart.CFrame
    local Angles = 0
    local Vehicles = Workspace.Vehicles
    local Pos

    function Check()
        if Player and Character and Humanoid and RootPart and Vehicles then
            return true
        else
            return false
        end
    end

    local selectedPlayer = game.Players:FindFirstChild(selectedPlayerName)
    if selectedPlayer and selectedPlayer.Character then
        if Check() then
            local House = Houses:FindFirstChild(Player.Name .. "House")
            if not House then
                local EHouse
                local availableHouses = {}
                
                -- Coletar todas as casas dispon√É¬≠veis ("For Sale")
                for _, Lot in pairs(Houses:GetChildren()) do
                    if Lot.Name == "For Sale" then
                        for _, num in pairs(Lot:GetDescendants()) do
                            if num:IsA("NumberValue") and num.Name == "Number" and num.Value < 25 and num.Value > 10 then
                                table.insert(availableHouses, {Lot = Lot, Number = num.Value})
                                break
                            end
                        end
                    end
                end

                -- Escolher uma casa aleat√É¬≥ria da lista
                if #availableHouses > 0 then
                    local randomHouse = availableHouses[math.random(1, #availableHouses)]
                    EHouse = randomHouse.Lot
                    local houseNumber = randomHouse.Number

                    -- Teleportar para o BuyDetector e clicar
                    local BuyDetector = EHouse:FindFirstChild("BuyHouse")
                    Pos = BuyDetector.Position
                    if BuyDetector and BuyDetector:IsA("BasePart") then
                        RootPart.CFrame = BuyDetector.CFrame + Vector3.new(0, -6, 0)
                        task.wait(0.5)
                        local ClickDetector = BuyDetector:FindFirstChild("ClickDetector")
                        if ClickDetector then
                            fireclickdetector(ClickDetector)
                        end
                    end

                    -- Disparar o novo remote event para construir a casa
                    task.wait(0.5)
                    local args = {
                        houseNumber, -- N√É¬∫mero da casa aleat√É¬≥ria
                        "056_House" -- Tipo da casa
                    }
                    game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("Lot:BuildProperty"):FireServer(unpack(args))
                else
                    print("Nenhuma casa dispon√É¬≠vel para compra!")
                    return
                end
            end

            task.wait(0.5)
            local PreHouse = Houses:FindFirstChild(Player.Name .. "House")
            if PreHouse then
                task.wait(0.5)
                local Number
                for i, x in pairs(PreHouse:GetDescendants()) do
                    if x.Name == "Number" and x:IsA("NumberValue") then
                        Number = x
                    end
                end
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gettin1gHous1e"):FireServer("PickingCustomHouse", "049_House", Number.Value)
            end

            task.wait(0.5)
            local PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
            if not PCar then
                if Check() then
                    RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                    task.wait(0.5)
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                    task.wait(0.5)
                    local PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
                    task.wait(0.5)
                    local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                    if Seat then
                        repeat
                            task.wait()
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                        until Humanoid.Sit
                    end
                end
            end

            task.wait(0.5)
            local PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
            if PCar then
                if not Humanoid.Sit then
                    local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                    if Seat then
                        repeat
                            task.wait()
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                        until Humanoid.Sit
                    end
                end

                local Target = selectedPlayer
                local TargetC = Target.Character
                local TargetH = TargetC:FindFirstChildOfClass("Humanoid")
                local TargetRP = TargetC:FindFirstChild("HumanoidRootPart")
                if TargetC and TargetH and TargetRP then
                    if not TargetH.Sit then
                        while not TargetH.Sit do
                            task.wait()
                            local Fling = function(alvo, pos, angulo)
                                PCar:SetPrimaryPartCFrame(CFrame.new(alvo.Position) * pos * angulo)
                            end
                            Angles = Angles + 100
                            Fling(TargetRP, CFrame.new(0, 1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP, CFrame.new(0, -1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP, CFrame.new(2.25, 1.5, -2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP, CFrame.new(-2.25, -1.5, 2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP, CFrame.new(0, 1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP, CFrame.new(0, -1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                        end
                        task.wait(0.2)
                        local House = Houses:FindFirstChild(Player.Name .. "House")
                        PCar:SetPrimaryPartCFrame(CFrame.new(House.HouseSpawnPosition.Position))
                        task.wait(0.2)
                        local pedro = Region3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(30, 30, 30), game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(30, 30, 30))
                        local a = workspace:FindPartsInRegion3(pedro, game.Players.LocalPlayer.Character.HumanoidRootPart, math.huge)
                        for i, v in pairs(a) do
                            if v.Name == "HumanoidRootPart" then
                                local b = game:GetService("Players"):FindFirstChild(v.Parent.Name)
                                local args = {
                                    [1] = "BanPlayerFromHouse",
                                    [2] = b,
                                    [3] = v.Parent
                                }
                                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
                                local args = {
                                    [1] = "DeleteAllVehicles"
                                }
                                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer(unpack(args))
                            end
                        end
                    end
                end
            end
        end
    end
end

Troll:AddButton({
    Name = "House Ban Kill",
    Callback = houseBanKill
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local cam = workspace.CurrentCamera
local currentPlayers, selectedPlayer = {}, nil
local viewing = false
local flingActive = false

Troll:AddToggle({
    Name = "Auto Fling ",
    Default = false,
    Callback = function(state)

        flingActive = state
        if state and selectedPlayerName then
            local target = Players:FindFirstChild(selectedPlayerName)
            if not target or not target.Character then return end
            local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            local tRoot = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
            if not root or not tRoot then return end
            local char = LocalPlayer.Character
            local hum = char:FindFirstChildOfClass("Humanoid")
            local original = root.CFrame

local args = {
	"ClearAllTools"
}
game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer(unpack(args))

task.wait(0.2)


            local args = {
                [1] = "PickingTools",
                [2] = "Couch"
            }
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))

            task.wait(0.3)
            local tool = LocalPlayer.Backpack:FindFirstChild("Couch")
            if tool then
                tool.Parent = char
            end
				task.wait(0.2)
				game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.F, false, game)
task.wait(0.25)

            workspace.FallenPartsDestroyHeight = 0/0
            local bv = Instance.new("BodyVelocity")
            bv.Name = "FlingForce"
            bv.Velocity = Vector3.new(9e8, 9e8, 9e8)
            bv.MaxForce = Vector3.new(1/0, 1/0, 1/0)
            bv.Parent = root
            hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
            hum.PlatformStand = false
            cam.CameraSubject = target.Character:FindFirstChild("Head") or tRoot or hum

            task.spawn(function()
                local angle = 0
                local parts = {root}
                while flingActive and target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") do
                    local tHum = target.Character:FindFirstChildOfClass("Humanoid")
                    if tHum.Sit then break end
                    angle += 50

                    for _, part in ipairs(parts) do
                        local pos_x = target.Character.HumanoidRootPart.Position.X
                        local pos_y = target.Character.HumanoidRootPart.Position.Y
                        local pos_z = target.Character.HumanoidRootPart.Position.Z
                        pos_x = pos_x + (target.Character.HumanoidRootPart.Velocity.X / 1.5)
                        pos_y = pos_y + (target.Character.HumanoidRootPart.Velocity.Y / 1.5)
                        pos_z = pos_z + (target.Character.HumanoidRootPart.Velocity.Z / 1.5)
                        root.CFrame = CFrame.new(pos_x, pos_y, pos_z) * CFrame.Angles(math.rad(angle), 0, 0)
                    end

                    root.Velocity = Vector3.new(9e8, 9e8, 9e8)
                    root.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
                    task.wait()
                end
                flingActive = false
                bv:Destroy()
                hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
                hum.PlatformStand = false
                root.CFrame = original
                cam.CameraSubject = hum
                for _, p in pairs(char:GetDescendants()) do
                    if p:IsA("BasePart") then
                        p.Velocity = Vector3.zero
                        p.RotVelocity = Vector3.zero
                    end
                end
                hum:UnequipTools()
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
            end)
        end
    end
})


local function FlingBall(target)

    local players = game:GetService("Players")
    local player = players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local hrp = character:WaitForChild("HumanoidRootPart")
    local backpack = player:WaitForChild("Backpack")
    local ServerBalls = workspace.WorkspaceCom:WaitForChild("001_SoccerBalls")

    local function GetBall()
        if not backpack:FindFirstChild("SoccerBall") then
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "SoccerBall")
        end
        repeat task.wait() until backpack:FindFirstChild("SoccerBall")
        backpack.SoccerBall.Parent = character
        repeat task.wait() until ServerBalls:FindFirstChild("Soccer" .. player.Name)
        character.SoccerBall.Parent = backpack
        return ServerBalls:FindFirstChild("Soccer" .. player.Name)
    end

    local Ball = ServerBalls:FindFirstChild("Soccer" .. player.Name) or GetBall()
    Ball.CanCollide = false
    Ball.Massless = true
    Ball.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0, 0)

    if target ~= player then
        local tchar = target.Character
        if tchar and tchar:FindFirstChild("HumanoidRootPart") and tchar:FindFirstChild("Humanoid") then
            local troot = tchar.HumanoidRootPart
            local thum = tchar.Humanoid

            if Ball:FindFirstChildWhichIsA("BodyVelocity") then
                Ball:FindFirstChildWhichIsA("BodyVelocity"):Destroy()
            end

            local bv = Instance.new("BodyVelocity")
            bv.Name = "FlingPower"
            bv.Velocity = Vector3.new(9e8, 9e8, 9e8)
            bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bv.P = 9e900
            bv.Parent = Ball

            workspace.CurrentCamera.CameraSubject = thum
            local StartTime = os.time()
            repeat
                if troot.Velocity.Magnitude > 0 then
                -- C√°lculo da posi√ß√£o ajustada com base na velocidade do alvo
                local pos_x = troot.Position.X + (troot.Velocity.X / 1.5)
                local pos_y = troot.Position.Y + (troot.Velocity.Y / 1.5)
                local pos_z = troot.Position.Z + (troot.Velocity.Z / 1.5)

                -- Posiciona a bola diretamente na posi√ß√£o ajustada
                local position = Vector3.new(pos_x, pos_y, pos_z)
                Ball.CFrame = CFrame.new(position)
                Ball.Orientation += Vector3.new(45, 60, 30)
else
for i, v in pairs(tchar:GetChildren()) do
if v:IsA("BasePart") and v.CanCollide and not v.Anchored then
Ball.CFrame = v.CFrame
task.wait(1/6000)
end
end
end
                task.wait(1/6000)
            until troot.Velocity.Magnitude > 1000 or thum.Health <= 0 or not tchar:IsDescendantOf(workspace) or target.Parent ~= players
            workspace.CurrentCamera.CameraSubject = humanoid
        end
    end
end

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

local RE = ReplicatedStorage:WaitForChild("RE")
local ClearEvent = RE:FindFirstChild("1Clea1rTool1s")
local ToolEvent = RE:FindFirstChild("1Too1l")
local FireEvent = RE:FindFirstChild("1Gu1n")

local FlingSystem = { power = 1e16, damage = 9999999999999999999999999999998, interval = 0.02 }

local function clearTools()
    if ClearEvent then
        ClearEvent:FireServer("ClearAllTools")
    end
end

local function requestAssault()
    if ToolEvent then
        ToolEvent:InvokeServer("PickingTools", "Assault")
    end
end

local function hasWeapon()
    return LocalPlayer.Backpack:FindFirstChild("Assault") or (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Assault"))
end

local function equipWeapon()
    local weapon = LocalPlayer.Backpack:FindFirstChild("Assault")
    if weapon and LocalPlayer.Character then
        local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid:EquipTool(weapon)
            return true
        end
    end
    return false
end

local function getGunScript()
    if LocalPlayer.Character then
        local weapon = LocalPlayer.Character:FindFirstChild("Assault") or LocalPlayer.Backpack:FindFirstChild("Assault")
        if weapon then
            return weapon:FindFirstChild("GunScript_Local")
        end
    end
    return nil
end

local function executeShot(targetPart)
    local gunScript = getGunScript()
    if not gunScript or not targetPart or not FireEvent then return end

    local muzzle = gunScript:FindFirstChild("MuzzleEffect")
    local hit = gunScript:FindFirstChild("HitEffect")
    if not muzzle or not hit then return end

    local args = {
        targetPart,
        targetPart,
        Vector3.new(FlingSystem.power, FlingSystem.power, FlingSystem.power),
        targetPart.Position,
        muzzle,
        hit,
        0,
        0,
        { false },
        {
            FlingSystem.damage,
            Vector3.new(5000, 5000, 5000),
            BrickColor.new(29),
            0.25,
            Enum.Material.SmoothPlastic,
            0.25
        },
        true,
        false
    }

    FireEvent:FireServer(unpack(args))
end

local function getSelectedTarget()
    if not selectedPlayerName then return nil end
    local player = Players:FindFirstChild(selectedPlayerName)
    if player and player.Character then
        local humanoid = player.Character:FindFirstChild("Humanoid")
        local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if humanoid and humanoid.Health > 0 and rootPart then
            return { player = player, part = rootPart }
        end
    end
    return nil
end

local function flingTarget()
    local target = getSelectedTarget()
    if not target then return end

    executeShot(target.part)

    local char = target.player.Character
    if not char then return end

    local head = char:FindFirstChild("Head")
    if head then executeShot(head) end

    local torso = char:FindFirstChild("Torso") or char:FindFirstChild("UpperTorso")
    if torso then executeShot(torso) end
end

local function maintainWeapon()
    if not hasWeapon() then
        clearTools()
        task.wait(0.1)
        requestAssault()
        task.wait(0.2)

        local attempts = 0
        while not hasWeapon() and attempts < 20 do
            task.wait(0.1)
            attempts = attempts + 1
        end

        if hasWeapon() then
            equipWeapon()
        end
    end
end

-- Fun√ß√£o Stephannythrow editada para permitir parar
function Stephannythrow()
    getgenv().StopStephanny = false  -- Reset ao iniciar
    maintainWeapon()
    task.spawn(function()
        while not getgenv().StopStephanny do
            maintainWeapon()
            if hasWeapon() and getGunScript() then
                pcall(flingTarget) -- evita erro se target desaparecer no meio do loop
            end
            task.wait(FlingSystem.interval)
        end
    end)
end

-- Bot√£o que inicia
Troll:AddButton({
  Name = "Bug Player",
  Description = "Atrapalha completamente o jogador alvo.",
  Callback = function()
      Stephannythrow()
  end
})

-- Bot√£o que para tudo
Troll:AddButton({
  Name = "Parar o Bug",
  Description = "Interrompe todos os loops de Stephannythrow",
  Callback = function()
      getgenv().StopStephanny = true
  end
})



Troll:AddButton({
    Name = "Fling Ball",
    Callback = function()
        FlingBall(game:GetService("Players")[selectedPlayerName])
    end
})

local Players = game:GetService('Players')
local lplayer = Players.LocalPlayer

local function isItemInInventory(itemName)
    for _, item in pairs(lplayer.Backpack:GetChildren()) do
        if item.Name == itemName then
            return true
        end
    end
    return false
end

local function equipItem(itemName)
    local item = lplayer.Backpack:FindFirstChild(itemName)
    if item then
        lplayer.Character.Humanoid:EquipTool(item)
    end
end

local function unequipItem(itemName)
    local item = lplayer.Character:FindFirstChild(itemName)
    if item then
        item.Parent = lplayer.Backpack
    end
end

local function ActiveAutoFling(targetPlayer)
    if not isItemInInventory("Couch") then
        local args = { [1] = "PickingTools", [2] = "Couch" }
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
    end

    equipItem("Couch")
    getgenv().flingloop = true

    while getgenv().flingloop do
        local function flingloopfix()
            local Players = game:GetService("Players")
            local Player = Players.LocalPlayer
            local AllBool = false

            local SkidFling = function(TargetPlayer)
                local Character = Player.Character
                local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
                local RootPart = Humanoid and Humanoid.RootPart
                local TCharacter = TargetPlayer.Character
                local THumanoid, TRootPart, THead, Accessory, Handle

                if TCharacter:FindFirstChildOfClass("Humanoid") then
                    THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
                end
                if THumanoid and THumanoid.RootPart then
                    TRootPart = THumanoid.RootPart
                end
                if TCharacter:FindFirstChild("Head") then
                    THead = TCharacter.Head
                end
                if TCharacter:FindFirstChildOfClass("Accessory") then
                    Accessory = TCharacter:FindFirstChildOfClass("Accessory")
                end
                if Accessory and Accessory:FindFirstChild("Handle") then
                    Handle = Accessory.Handle
                end

                if Character and Humanoid and RootPart then
                    if RootPart.Velocity.Magnitude < 50 then
                        getgenv().OldPos = RootPart.CFrame
                    end
                    if THumanoid and THumanoid.Sit and not AllBool then
                        unequipItem("Couch")
                        getgenv().flingloop = false
                        return
                    end
                    if THead then
                        workspace.CurrentCamera.CameraSubject = THead
                    elseif not THead and Handle then
                        workspace.CurrentCamera.CameraSubject = Handle
                    elseif THumanoid and TRootPart then
                        workspace.CurrentCamera.CameraSubject = THumanoid
                    end

                    if not TCharacter:FindFirstChildWhichIsA("BasePart") then
                        return
                    end

                    local FPos = function(BasePart, Pos, Ang)
                        RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
                        Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
                        RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
                        RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
                    end

                    local SFBasePart = function(BasePart)
                        local TimeToWait = 2
                        local Time = tick()
                        local Angle = 0
                        repeat
                            if RootPart and THumanoid then
                                if BasePart.Velocity.Magnitude < 50 then
                                    Angle = Angle + 100
                                    FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                else
                                    FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(-90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                                    task.wait()
                                end
                            else
                                break
                            end
                        until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait or getgenv().flingloop == false
                    end

                    workspace.FallenPartsDestroyHeight = 0/0
                    local BV = Instance.new("BodyVelocity")
                    BV.Name = "SpeedDoPai"
                    BV.Parent = RootPart
                    BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
                    BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
                    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)

                    if TRootPart and THead then
                        if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
                            SFBasePart(THead)
                        else
                            SFBasePart(TRootPart)
                        end
                    elseif TRootPart and not THead then
                        SFBasePart(TRootPart)
                    elseif not TRootPart and THead then
                        SFBasePart(THead)
                    elseif not TRootPart and not THead and Accessory and Handle then
                        SFBasePart(Handle)
                    end
                    BV:Destroy()
                    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
                    workspace.CurrentCamera.CameraSubject = Humanoid

                    repeat
                        RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
                        Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
                        Humanoid:ChangeState("GettingUp")
                        table.foreach(Character:GetChildren(), function(_, x)
                            if x:IsA("BasePart") then
                                x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
                            end
                        end)
                        task.wait()
                    until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25

                    workspace.FallenPartsDestroyHeight = getgenv().FPDH
                end
            end

            if AllBool then
                for _, x in next, Players:GetPlayers() do
                    SkidFling(x)
                end
            end

            if targetPlayer then
                SkidFling(targetPlayer)
            end

            task.wait()
        end

        wait()
        pcall(flingloopfix)
    end
end

local kill = Troll:AddSection({Name = "Fling Boat"})

Troll:AddButton({
    Name = "Fling - Boat",
    Callback = function()
        if not selectedPlayerName or not game.Players:FindFirstChild(selectedPlayerName) then
            warn("Nenhum jogador selecionado ou n√£o existe")
            return
        end

        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character and Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")

        if not Humanoid or not RootPart then
            warn("Humanoid ou RootPart inv√°lido")
            return
        end

        local function spawnBoat()
            RootPart.CFrame = CFrame.new(1754, -2, 58)
            task.wait(0.5)
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingBoat", "MilitaryBoatFree")
            task.wait(1)
            return Vehicles:FindFirstChild(Player.Name.."Car")
        end

        local PCar = Vehicles:FindFirstChild(Player.Name.."Car") or spawnBoat()
        if not PCar then
            warn("Falha ao spawnar o barco")
            return
        end

        local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
        if not Seat then
            warn("Assento n√£o encontrado")
            return
        end

        repeat 
            task.wait(0.1)
            RootPart.CFrame = Seat.CFrame * CFrame.new(0, 1, 0)
        until Humanoid.SeatPart == Seat

        print("Barco spawnado!")

        local TargetPlayer = game.Players:FindFirstChild(selectedPlayerName)
        if not TargetPlayer or not TargetPlayer.Character then
            warn("Jogador n√£o encontrado")
            return
        end

        local TargetC = TargetPlayer.Character
        local TargetH = TargetC:FindFirstChildOfClass("Humanoid")
        local TargetRP = TargetC:FindFirstChild("HumanoidRootPart")

        if not TargetRP or not TargetH then
            warn("Humanoid ou RootPart do alvo n√£o encontrado")
            return
        end

        local Spin = Instance.new("BodyAngularVelocity")
        Spin.Name = "Spinning"
        Spin.Parent = PCar.PrimaryPart
        Spin.MaxTorque = Vector3.new(0, math.huge, 0)
        Spin.AngularVelocity = Vector3.new(0, 369, 0) 

        print("Fling ativo!")

        local function moveCar(TargetRP, offset)
            if PCar and PCar.PrimaryPart then
                PCar:SetPrimaryPartCFrame(CFrame.new(TargetRP.Position + offset))
            end
        end

        task.spawn(function()
            while PCar and PCar.Parent and TargetRP and TargetRP.Parent do
                task.wait(0.01) 
                
                moveCar(TargetRP, Vector3.new(0, 1, 0))  
                moveCar(TargetRP, Vector3.new(0, -2.25, 5))  
                moveCar(TargetRP, Vector3.new(0, 2.25, 0.25))  
                moveCar(TargetRP, Vector3.new(-2.25, -1.5, 2.25))  
                moveCar(TargetRP, Vector3.new(0, 1.5, 0))  
                moveCar(TargetRP, Vector3.new(0, -1.5, 0))  

                if PCar and PCar.PrimaryPart then
                    local Rotation = CFrame.Angles(
                        math.rad(math.random(-369, 369)),  
                        math.rad(math.random(-369, 369)), 
                        math.rad(math.random(-369, 369))
                    )
                    PCar:SetPrimaryPartCFrame(CFrame.new(TargetRP.Position + Vector3.new(0, 1.5, 0)) * Rotation)
                end
            end

            if Spin and Spin.Parent then
                Spin:Destroy()
                print("Fling desativado")
            end
        end)
    end
})
print("Fling - Boat button created")

Troll:AddButton({
    Name = "Desligar Fling - Boat",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local RootPart = Character and Character:FindFirstChild("HumanoidRootPart")
        local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")

        if not RootPart or not Humanoid then
            warn("Nenhum RootPart ou Humanoid encontrado!")
            return
        end

        Humanoid.PlatformStand = true
        print("Jogador paralisado para reduzir efeitos do spin.")

        for _, obj in pairs(RootPart:GetChildren()) do
            if obj:IsA("BodyAngularVelocity") or obj:IsA("BodyVelocity") then
                obj:Destroy()
            end
        end
        print("Spin e for√ßas removidas do jogador.")

        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("DeleteAllVehicles")
        task.wait(0.5)

        local PCar = Vehicles and Vehicles:FindFirstChild(Player.Name.."Car")
        if PCar and PCar.PrimaryPart then
            for _, obj in pairs(PCar.PrimaryPart:GetChildren()) do
                if obj:IsA("BodyAngularVelocity") or obj:IsA("BodyVelocity") then
                    obj:Destroy()
                end
            end
            print("Spin removido do barco.")
        end

        task.wait(1)

        local safePos = Vector3.new(0, 1000, 0)
        local bp = Instance.new("BodyPosition", RootPart)
        bp.Position = safePos
        bp.MaxForce = Vector3.new(math.huge, math.huge, math.huge)

        local bg = Instance.new("BodyGyro", RootPart)
        bg.CFrame = RootPart.CFrame
        bg.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)

        print("Jogador est√° preso na coordenada segura.")

        task.wait(3)

        bp:Destroy()
        bg:Destroy()
        Humanoid.PlatformStand = false

        print("Jogador liberado, seguro na posi√ß√£o.")
    end
})

local kill = Troll:AddSection({Name = "Click and Auto Kill Methods"})


local function AutoKartFling()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local backpack = player:WaitForChild("Backpack")
    local root = character:WaitForChild("HumanoidRootPart")

    -- === Spin a 500 ===
    local bav = Instance.new("BodyAngularVelocity")
    bav.AngularVelocity = Vector3.new(0, 500, 0)
    bav.MaxTorque = Vector3.new(0, math.huge, 0)
    bav.P = 1000
    bav.Parent = root

    -- === Complemento PickingTools e ShoppingCart ===
    local args = {"PickingTools", "ShoppingCart"}
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))

    -- === Fun√ß√£o para equipar ferramentas com 'cart' no nome ===
    local function equipCartTools()
        for _, tool in pairs(backpack:GetChildren()) do
            if tool:IsA("Tool") and string.find(string.lower(tool.Name), "cart") then
                player.Character.Humanoid:EquipTool(tool)
            end
        end
    end

    -- Equipar inicialmente
    equipCartTools()

    -- Monitorar o backpack para novas ferramentas
    backpack.ChildAdded:Connect(function(child)
        if child:IsA("Tool") and string.find(string.lower(child.Name), "cart") then
            player.Character.Humanoid:EquipTool(child)
        end
    end)
end

Troll:AddButton({
  Name = "[üõíüî•] Auto Kart Fling",
Description = "Se vc bugar no ch√£o resete seu personagem;",
  Callback = function()
          AutoKartFling()
end
})
Troll:AddButton({
  Name = "Click Fling Portas [Beta]",
Description = "Para Usar, Recomendo chegar perto de outras portas, apos ela ir at√© voc√™, clique no jogador que deseja flingar",
  Callback = function()
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")

-- Alvo invis√≠vel (BlackHole)
local BlackHole = Instance.new("Part")
BlackHole.Size = Vector3.new(100000, 100000, 100000)
BlackHole.Transparency = 1
BlackHole.Anchored = true
BlackHole.CanCollide = false
BlackHole.Name = "BlackHoleTarget"
BlackHole.Parent = Workspace

-- Attachment base no BlackHole
local baseAttachment = Instance.new("Attachment")
baseAttachment.Name = "Luscaa_BlackHoleAttachment"
baseAttachment.Parent = BlackHole

-- Atualiza posi√ß√£o do BlackHole
RunService.Heartbeat:Connect(function()
	BlackHole.CFrame = HRP.CFrame
end)

-- Lista de portas controladas
local ControlledDoors = {}

-- Prepara uma porta para ser controlada
local function SetupPart(part)
	if not part:IsA("BasePart") or part.Anchored or not string.find(part.Name, "Door") then return end
	if part:FindFirstChild("Luscaa_Attached") then return end

	part.CanCollide = false

	for _, obj in ipairs(part:GetChildren()) do
		if obj:IsA("AlignPosition") or obj:IsA("Torque") or obj:IsA("Attachment") then
			obj:Destroy()
		end
	end

	local marker = Instance.new("BoolValue", part)
	marker.Name = "Luscaa_Attached"

	local a1 = Instance.new("Attachment", part)

	local align = Instance.new("AlignPosition", part)
	align.Attachment0 = a1
	align.Attachment1 = baseAttachment
	align.MaxForce = 1e20
	align.MaxVelocity = math.huge
	align.Responsiveness = 99999

	local torque = Instance.new("Torque", part)
	torque.Attachment0 = a1
	torque.RelativeTo = Enum.ActuatorRelativeTo.World
	torque.Torque = Vector3.new(
		math.random(-10e5, 10e5) * 10000,
		math.random(-10e5, 10e5) * 10000,
		math.random(-10e5, 10e5) * 10000
	)

	table.insert(ControlledDoors, {Part = part, Align = align})
end

-- Detecta e prepara portas existentes
for _, obj in ipairs(Workspace:GetDescendants()) do
	if obj:IsA("BasePart") and string.find(obj.Name, "Door") then
		SetupPart(obj)
	end
end

-- Novas portas no futuro
Workspace.DescendantAdded:Connect(function(obj)
	if obj:IsA("BasePart") and string.find(obj.Name, "Door") then
		SetupPart(obj)
	end
end)

-- Flinga jogador com timeout e retorno
local function FlingPlayer(player)
	local char = player.Character
	if not char then return end
	local targetHRP = char:FindFirstChild("HumanoidRootPart")
	if not targetHRP then return end

	local targetAttachment = targetHRP:FindFirstChild("SHNMAX_TargetAttachment")
	if not targetAttachment then
		targetAttachment = Instance.new("Attachment", targetHRP)
		targetAttachment.Name = "SHNMAX_TargetAttachment"
	end

	for _, data in ipairs(ControlledDoors) do
		if data.Align then
			data.Align.Attachment1 = targetAttachment
		end
	end

	local start = tick()
	local flingDetected = false

	while tick() - start < 5 do
		if targetHRP.Velocity.Magnitude >= 20 then
			flingDetected = true
			break
		end
		RunService.Heartbeat:Wait()
	end

	-- Sempre retorna as portas
	for _, data in ipairs(ControlledDoors) do
		if data.Align then
			data.Align.Attachment1 = baseAttachment
		end
	end
end

-- Clique (funciona no mobile)
UserInputService.TouchTap:Connect(function(touchPositions, processed)
	if processed then return end
	local pos = touchPositions[1]
	local camera = Workspace.CurrentCamera
	local unitRay = camera:ScreenPointToRay(pos.X, pos.Y)
	local raycast = Workspace:Raycast(unitRay.Origin, unitRay.Direction * 1000)

	if raycast and raycast.Instance then
		local hit = raycast.Instance
		local player = Players:GetPlayerFromCharacter(hit:FindFirstAncestorOfClass("Model"))
		if player and player ~= LocalPlayer then
			FlingPlayer(player)
		end
	end
end)
  end
})

Troll:AddButton({
  Name = "Click Fling Admin [Beta]",
  Callback = function()
    local Players = game:GetService("Players")
    local Workspace = game:GetService("Workspace")
    local RunService = game:GetService("RunService")
    local UserInputService = game:GetService("UserInputService")

    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local HRP = Character:WaitForChild("HumanoidRootPart")

    -- Alvo invis√≠vel (BlackHole)
    local BlackHole = Instance.new("Part")
    BlackHole.Size = Vector3.new(100000, 100000, 100000)
    BlackHole.Transparency = 1
    BlackHole.Anchored = true
    BlackHole.CanCollide = false
    BlackHole.Name = "BlackHoleTarget"
    BlackHole.Parent = Workspace

    -- Attachment base no BlackHole
    local baseAttachment = Instance.new("Attachment")
    baseAttachment.Name = "Luscaa_BlackHoleAttachment"
    baseAttachment.Parent = BlackHole

    -- Atualiza posi√ß√£o do BlackHole
    RunService.Heartbeat:Connect(function()
      BlackHole.CFrame = HRP.CFrame
    end)

    -- Lista de portas controladas
    local ControlledDoors = {}

    -- Prepara uma porta para ser controlada
    local function SetupPart(part)
      if not part:IsA("BasePart") or part.Anchored or not string.find(part.Name, "Door") then return end
      if part:FindFirstChild("Luscaa_Attached") then return end

      part.CanCollide = false
      part.Transparency = 1 -- ‚Üê Apenas isso foi adicionado

      for _, obj in ipairs(part:GetChildren()) do
        if obj:IsA("AlignPosition") or obj:IsA("Torque") or obj:IsA("Attachment") then
          obj:Destroy()
        end
      end

      local marker = Instance.new("BoolValue", part)
      marker.Name = "Luscaa_Attached"

      local a1 = Instance.new("Attachment", part)

      local align = Instance.new("AlignPosition", part)
      align.Attachment0 = a1
      align.Attachment1 = baseAttachment
      align.MaxForce = 1e20
      align.MaxVelocity = math.huge
      align.Responsiveness = 99999

      local torque = Instance.new("Torque", part)
      torque.Attachment0 = a1
      torque.RelativeTo = Enum.ActuatorRelativeTo.World
      torque.Torque = Vector3.new(
        math.random(-10e5, 10e5) * 10000,
        math.random(-10e5, 10e5) * 10000,
        math.random(-10e5, 10e5) * 10000
      )

      table.insert(ControlledDoors, {Part = part, Align = align})
    end

    -- Detecta e prepara portas existentes
    for _, obj in ipairs(Workspace:GetDescendants()) do
      if obj:IsA("BasePart") and string.find(obj.Name, "Door") then
        SetupPart(obj)
      end
    end

    -- Novas portas no futuro
    Workspace.DescendantAdded:Connect(function(obj)
      if obj:IsA("BasePart") and string.find(obj.Name, "Door") then
        SetupPart(obj)
      end
    end)

    -- Flinga jogador com timeout e retorno
    local function FlingPlayer(player)
      local char = player.Character
      if not char then return end
      local targetHRP = char:FindFirstChild("HumanoidRootPart")
      if not targetHRP then return end

      local targetAttachment = targetHRP:FindFirstChild("SHNMAX_TargetAttachment")
      if not targetAttachment then
        targetAttachment = Instance.new("Attachment", targetHRP)
        targetAttachment.Name = "SHNMAX_TargetAttachment"
      end

      for _, data in ipairs(ControlledDoors) do
        if data.Align then
          data.Align.Attachment1 = targetAttachment
        end
      end

      local start = tick()
      local flingDetected = false

      while tick() - start < 5 do
        if targetHRP.Velocity.Magnitude >= 20 then
          flingDetected = true
          break
        end
        RunService.Heartbeat:Wait()
      end

      -- Sempre retorna as portas
      for _, data in ipairs(ControlledDoors) do
        if data.Align then
          data.Align.Attachment1 = baseAttachment
        end
      end
    end

    -- Clique (funciona no mobile)
    UserInputService.TouchTap:Connect(function(touchPositions, processed)
      if processed then return end
      local pos = touchPositions[1]
      local camera = Workspace.CurrentCamera
      local unitRay = camera:ScreenPointToRay(pos.X, pos.Y)
      local raycast = Workspace:Raycast(unitRay.Origin, unitRay.Direction * 1000)

      if raycast and raycast.Instance then
        local hit = raycast.Instance
        local player = Players:GetPlayerFromCharacter(hit:FindFirstAncestorOfClass("Model"))
        if player and player ~= LocalPlayer then
          FlingPlayer(player)
        end
      end
    end)
  end
})

Troll:AddButton({
    Name = "Click Fling Couch (Tool)",
    Callback = function()

local jogadores = game:GetService("Players")
local rep = game:GetService("ReplicatedStorage")
local entrada = game:GetService("UserInputService")
local eu = jogadores.LocalPlayer
local cam = workspace.CurrentCamera

local podeClicar = true
local ferramentaEquipada = false
local NOME_FERRAMENTA = "Click Fling Couch"

local mochila = eu:WaitForChild("Backpack")

if not mochila:FindFirstChild(NOME_FERRAMENTA) and not (eu.Character and eu.Character:FindFirstChild(NOME_FERRAMENTA)) then
	local ferramenta = Instance.new("Tool")
	ferramenta.Name = NOME_FERRAMENTA
	ferramenta.RequiresHandle = false
	ferramenta.CanBeDropped = false

	ferramenta.Equipped:Connect(function()
		ferramentaEquipada = true
	end)

	ferramenta.Unequipped:Connect(function()
		ferramentaEquipada = false
	end)

	ferramenta.Parent = mochila
end

local function jogarComSofa(alvo)
	if not ferramentaEquipada then return end
	if not alvo or not alvo.Character or alvo == eu then return end

	local jogando = true
	local raiz = eu.Character and eu.Character:FindFirstChild("HumanoidRootPart")
	local alvoRaiz = alvo.Character and alvo.Character:FindFirstChild("HumanoidRootPart")
	if not raiz or not alvoRaiz then return end

	local boneco = eu.Character
	local humano = boneco:FindFirstChildOfClass("Humanoid")
	local posOriginal = raiz.CFrame

	rep:WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer("ClearAllTools")
	task.wait(0.2)

	rep.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
	task.wait(0.3)

	local sofa = eu.Backpack:FindFirstChild("Couch")
	if sofa then
		sofa.Parent = boneco
	end
	task.wait(0.1)

	game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.F, false, game)
	task.wait(0.25)

	workspace.FallenPartsDestroyHeight = 0/0

	local forca = Instance.new("BodyVelocity")
	forca.Name = "ForcaJogada"
	forca.Velocity = Vector3.new(9e8, 9e8, 9e8)
	forca.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
	forca.Parent = raiz

	humano:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
	humano.PlatformStand = false
	cam.CameraSubject = alvo.Character:FindFirstChild("Head") or alvoRaiz or humano

	task.spawn(function()
		local angulo = 0
		local partes = {raiz}
		while jogando and alvo and alvo.Character and alvo.Character:FindFirstChildOfClass("Humanoid") do
			local alvoHum = alvo.Character:FindFirstChildOfClass("Humanoid")
			if alvoHum.Sit then break end
			angulo += 50

			for _, parte in ipairs(partes) do
				local hrp = alvo.Character.HumanoidRootPart
				local pos = hrp.Position + hrp.Velocity / 1.5
				raiz.CFrame = CFrame.new(pos) * CFrame.Angles(math.rad(angulo), 0, 0)
			end

			raiz.Velocity = Vector3.new(9e8, 9e8, 9e8)
			raiz.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
			task.wait()
		end

		jogando = false
		forca:Destroy()
		humano:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
		humano.PlatformStand = false
		raiz.CFrame = posOriginal
		cam.CameraSubject = humano

		for _, p in pairs(boneco:GetDescendants()) do
			if p:IsA("BasePart") then
				p.Velocity = Vector3.zero
				p.RotVelocity = Vector3.zero
			end
		end

		humano:UnequipTools()
		rep.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
	end)

	while jogando do
		task.wait()
	end
end

entrada.TouchTap:Connect(function(toques, processado)
	if processado or not podeClicar or not ferramentaEquipada then return end

	local pos = toques[1]
	local raio = cam:ScreenPointToRay(pos.X, pos.Y)
	local acerto = workspace:Raycast(raio.Origin, raio.Direction * 1000)

	if acerto and acerto.Instance then
		local alvo = jogadores:GetPlayerFromCharacter(acerto.Instance:FindFirstAncestorOfClass("Model"))
		if alvo and alvo ~= eu then
			podeClicar = false
			jogarComSofa(alvo)
			task.delay(2, function()
				podeClicar = true
			end)
		end
	end
end)
end
})

Troll:AddButton({
    Name = "Click Fling Ball (Tool)",
    Callback = function()
local jogadores = game:GetService("Players")
local rep = game:GetService("ReplicatedStorage")
local mundo = game:GetService("Workspace")
local entrada = game:GetService("UserInputService")
local cam = mundo.CurrentCamera
local eu = jogadores.LocalPlayer

local NOME_FERRAMENTA = "Click Fling Ball"
local ferramentaEquipada = false

local mochila = eu:WaitForChild("Backpack")
if not mochila:FindFirstChild(NOME_FERRAMENTA) then
	local ferramenta = Instance.new("Tool")
	ferramenta.Name = NOME_FERRAMENTA
	ferramenta.RequiresHandle = false
	ferramenta.CanBeDropped = false

	ferramenta.Equipped:Connect(function()
		ferramentaEquipada = true
	end)

	ferramenta.Unequipped:Connect(function()
		ferramentaEquipada = false
	end)

	ferramenta.Parent = mochila
end

-- Fun√ß√£o FlingBall (bola)
local function FlingBall(target)
    

    local players = game:GetService("Players")
    local player = players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local hrp = character:WaitForChild("HumanoidRootPart")
    local backpack = player:WaitForChild("Backpack")
    local ServerBalls = workspace.WorkspaceCom:WaitForChild("001_SoccerBalls")

    local function GetBall()
        if not backpack:FindFirstChild("SoccerBall") and not character:FindFirstChild("SoccerBall") then
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "SoccerBall")
        end

        repeat task.wait() until backpack:FindFirstChild("SoccerBall") or character:FindFirstChild("SoccerBall")

        local ballTool = backpack:FindFirstChild("SoccerBall")
        if ballTool then
            ballTool.Parent = character
        end

        repeat task.wait() until ServerBalls:FindFirstChild("Soccer" .. player.Name)

        return ServerBalls:FindFirstChild("Soccer" .. player.Name)
    end

    local Ball = ServerBalls:FindFirstChild("Soccer" .. player.Name) or GetBall()
    Ball.CanCollide = false
    Ball.Massless = true
    Ball.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0, 0)

    if target ~= player then
        local tchar = target.Character
        if tchar and tchar:FindFirstChild("HumanoidRootPart") and tchar:FindFirstChild("Humanoid") then
            local troot = tchar.HumanoidRootPart
            local thum = tchar.Humanoid

            if Ball:FindFirstChildWhichIsA("BodyVelocity") then
                Ball:FindFirstChildWhichIsA("BodyVelocity"):Destroy()
            end

            local bv = Instance.new("BodyVelocity")
            bv.Name = "FlingPower"
            bv.Velocity = Vector3.new(9e8, 9e8, 9e8)
            bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bv.P = 9e900
            bv.Parent = Ball

            workspace.CurrentCamera.CameraSubject = thum

            repeat
                if troot.Velocity.Magnitude > 0 then
                    local pos = troot.Position + (troot.Velocity / 1.5)
                    Ball.CFrame = CFrame.new(pos)
                    Ball.Orientation += Vector3.new(45, 60, 30)
                else
                    for i, v in pairs(tchar:GetChildren()) do
                        if v:IsA("BasePart") and v.CanCollide and not v.Anchored then
                            Ball.CFrame = v.CFrame
                            task.wait(1/6000)
                        end
                    end
                end
                task.wait(1/6000)
            until troot.Velocity.Magnitude > 1000 or thum.Health <= 0 or not tchar:IsDescendantOf(workspace) or target.Parent ~= players

            workspace.CurrentCamera.CameraSubject = humanoid
        end
    end
end

-- Toque na tela para aplicar a bola
entrada.TouchTap:Connect(function(toques, processado)
	if not ferramentaEquipada or processado then return end
	local pos = toques[1]
	local raio = cam:ScreenPointToRay(pos.X, pos.Y)
	local hit = mundo:Raycast(raio.Origin, raio.Direction * 1000)
	if hit and hit.Instance then
		local modelo = hit.Instance:FindFirstAncestorOfClass("Model")
		local jogador = jogadores:GetPlayerFromCharacter(modelo)
		if jogador and jogador ~= eu then
			FlingBall(jogador)
		end
	end
end)

end
})

Troll:AddButton({
    Name = "Click Fling Admin v2 (Tool)",
    Callback = function()
        local jogadores = game:GetService("Players")
        local rep = game:GetService("ReplicatedStorage")
        local mundo = game:GetService("Workspace")
        local entrada = game:GetService("UserInputService")
        local cam = mundo.CurrentCamera
        local eu = jogadores.LocalPlayer

        local NOME_FERRAMENTA = "Admin Fling"
        local ferramentaEquipada = false

        local mochila = eu:WaitForChild("Backpack")

        for _, ferramentaExistente in pairs(mochila:GetChildren()) do
            if ferramentaExistente:IsA("Tool") and ferramentaExistente.Name:lower():find("fling") then
                ferramentaExistente.Name = "Admin Fling"
            end
        end

        if not mochila:FindFirstChild(NOME_FERRAMENTA) then
            local ferramenta = Instance.new("Tool")
            ferramenta.Name = NOME_FERRAMENTA
            ferramenta.RequiresHandle = true
            ferramenta.CanBeDropped = false

            local handle = Instance.new("Part")
            handle.Name = "Handle"
            handle.Size = Vector3.new(1, 1, 1)
            handle.Transparency = 1
            handle.Parent = ferramenta

            local decal = Instance.new("Decal")
            decal.Texture = "rbxassetid://775552544"
            decal.Face = Enum.NormalId.Front
            decal.Parent = handle

            ferramenta.Equipped:Connect(function()
                ferramentaEquipada = true
            end)

            ferramenta.Unequipped:Connect(function()
                ferramentaEquipada = false
            end)

            ferramenta.Parent = mochila
        end

        local function FlingBall(target)
            local player = jogadores.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoid = character:WaitForChild("Humanoid")
            local hrp = character:WaitForChild("HumanoidRootPart")
            local backpack = player:WaitForChild("Backpack")
            local ServerBalls = mundo:WaitForChild("WorkspaceCom"):WaitForChild("001_SoccerBalls")

            local function GetBall()
                if not backpack:FindFirstChild("SoccerBall") and not character:FindFirstChild("SoccerBall") then
                    rep.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "SoccerBall")
                end
                repeat task.wait() until backpack:FindFirstChild("SoccerBall") or character:FindFirstChild("SoccerBall")
                local ballTool = backpack:FindFirstChild("SoccerBall")
                if ballTool then ballTool.Parent = character end
                repeat task.wait() until ServerBalls:FindFirstChild("Soccer" .. player.Name)
                return ServerBalls:FindFirstChild("Soccer" .. player.Name)
            end

            local Ball = ServerBalls:FindFirstChild("Soccer" .. player.Name) or GetBall()
            Ball.CanCollide = false
            Ball.Massless = true
            Ball.Transparency = 1             -- BOLA INVIS√çVEL
            Ball.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0, 0)

            if target ~= player then
                local tchar = target.Character
                if tchar and tchar:FindFirstChild("HumanoidRootPart") and tchar:FindFirstChild("Humanoid") then
                    local troot = tchar.HumanoidRootPart
                    local thum = tchar.Humanoid
                    if Ball:FindFirstChildWhichIsA("BodyVelocity") then
                        Ball:FindFirstChildWhichIsA("BodyVelocity"):Destroy()
                    end
                    local bv = Instance.new("BodyVelocity")
                    bv.Name = "FlingPower"
                    bv.Velocity = Vector3.new(9e8, 9e8, 9e8)
                    bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                    bv.P = 9e900
                    bv.Parent = Ball
                    mundo.CurrentCamera.CameraSubject = thum

                    repeat
                        if troot.Velocity.Magnitude > 0 then
                            local pos = troot.Position + (troot.Velocity / 1.5)
                            Ball.CFrame = CFrame.new(pos)
                            Ball.Orientation += Vector3.new(45, 60, 30)
                        else
                            for _, v in pairs(tchar:GetChildren()) do
                                if v:IsA("BasePart") and v.CanCollide and not v.Anchored then
                                    Ball.CFrame = v.CFrame
                                    task.wait(1/6000)
                                end
                            end
                        end
                        task.wait(1/6000)
                    until troot.Velocity.Magnitude > 1000 or thum.Health <= 0 or not tchar:IsDescendantOf(mundo) or target.Parent ~= jogadores

                    mundo.CurrentCamera.CameraSubject = humanoid
                end
            end
        end

        entrada.TouchTap:Connect(function(toques, processado)
            if not ferramentaEquipada or processado then return end
            local pos = toques[1]
            local raio = cam:ScreenPointToRay(pos.X, pos.Y)
            local hit = mundo:Raycast(raio.Origin, raio.Direction * 1000)
            if hit and hit.Instance then
                local modelo = hit.Instance:FindFirstAncestorOfClass("Model")
                local jogador = jogadores:GetPlayerFromCharacter(modelo)
                if jogador and jogador ~= eu then
                    FlingBall(jogador)
                end
            end
        end)

    end
})

Troll:AddButton({
    Name = "Click Kill Couch (Tool)",
    Callback = function()

local jogadores = game:GetService("Players")
local rep = game:GetService("ReplicatedStorage")
local loop = game:GetService("RunService")
local mundo = game:GetService("Workspace")
local entrada = game:GetService("UserInputService")

local eu = jogadores.LocalPlayer
local cam = mundo.CurrentCamera

local NOME_FERRAMENTA = "Click Kill Couch"
local ferramentaEquipada = false
local nomeAlvo = nil
local loopTP = nil
local sofaEquipado = false
local base = nil
local posInicial = nil
local raiz = nil

local mochila = eu:WaitForChild("Backpack")
if not mochila:FindFirstChild(NOME_FERRAMENTA) then
	local ferramenta = Instance.new("Tool")
	ferramenta.Name = NOME_FERRAMENTA
	ferramenta.RequiresHandle = false
	ferramenta.CanBeDropped = false

	ferramenta.Equipped:Connect(function()
		ferramentaEquipada = true
	end)

	ferramenta.Unequipped:Connect(function()
		ferramentaEquipada = false
		nomeAlvo = nil
		limparSofa()
	end)

	ferramenta.Parent = mochila
end

function limparSofa()
	if loopTP then
		loopTP:Disconnect()
		loopTP = nil
	end

	if sofaEquipado then
		local boneco = eu.Character
		if boneco then
			local sofa = boneco:FindFirstChild("Couch")
			if sofa then
				sofa.Parent = eu.Backpack
				sofaEquipado = false
			end
		end
	end

	if base then
		base:Destroy()
		base = nil
	end

	if getgenv().AntiSit then
		getgenv().AntiSit:Set(false)
	end

	local humano = eu.Character and eu.Character:FindFirstChildOfClass("Humanoid")
	if humano then
		humano:SetStateEnabled(Enum.HumanoidStateType.Physics, true)
		humano:ChangeState(Enum.HumanoidStateType.GettingUp)
	end

	if posInicial and raiz then
		raiz.CFrame = posInicial
		posInicial = nil
	end
end

function pegarSofa()
	local boneco = eu.Character
	if not boneco then return end
	local mochila = eu.Backpack

	if not mochila:FindFirstChild("Couch") and not boneco:FindFirstChild("Couch") then
		local args = { "PickingTools", "Couch" }
		rep.RE["1Too1l"]:InvokeServer(unpack(args))
		task.wait(0.1)
	end

	local sofa = mochila:FindFirstChild("Couch") or boneco:FindFirstChild("Couch")
	if sofa then
		sofa.Parent = boneco
		sofaEquipado = true
	end
end

function posAleatoriaAbaixo(boneco)
	local rp = boneco:FindFirstChild("HumanoidRootPart")
	if not rp then return Vector3.new() end
	local offset = Vector3.new(math.random(-2, 2), -5.1, math.random(-2, 2))
	return rp.Position + offset
end

function tpAbaixo(alvo)
	if not alvo or not alvo.Character or not alvo.Character:FindFirstChild("HumanoidRootPart") then return end

	local meuBoneco = eu.Character
	local minhaRaiz = meuBoneco and meuBoneco:FindFirstChild("HumanoidRootPart")
	local humano = meuBoneco and meuBoneco:FindFirstChildOfClass("Humanoid")

	if not minhaRaiz or not humano then return end

	humano:SetStateEnabled(Enum.HumanoidStateType.Physics, false)

	if not base then
		base = Instance.new("Part")
		base.Size = Vector3.new(10, 1, 10)
		base.Anchored = true
		base.CanCollide = true
		base.Transparency = 0.5
		base.Parent = mundo
	end

	local destino = posAleatoriaAbaixo(alvo.Character)
	base.Position = destino
	minhaRaiz.CFrame = CFrame.new(destino)

	humano:SetStateEnabled(Enum.HumanoidStateType.Physics, true)
end

function arremessarComSofa(alvo)
	if not alvo then return end
	nomeAlvo = alvo.Name
	local boneco = eu.Character
	if not boneco then return end

	posInicial = boneco:FindFirstChild("HumanoidRootPart") and boneco.HumanoidRootPart.CFrame
	raiz = boneco:FindFirstChild("HumanoidRootPart")
	pegarSofa()

	loopTP = loop.Heartbeat:Connect(function()
		local alvoAtual = jogadores:FindFirstChild(nomeAlvo)
		if not alvoAtual or not alvoAtual.Character or not alvoAtual.Character:FindFirstChild("Humanoid") then
			limparSofa()
			return
		end
		if getgenv().AntiSit then
			getgenv().AntiSit:Set(true)
		end
		tpAbaixo(alvoAtual)
	end)

	task.spawn(function()
		local alvoAtual = jogadores:FindFirstChild(nomeAlvo)
		while alvoAtual and alvoAtual.Character and alvoAtual.Character:FindFirstChild("Humanoid") do
			task.wait(0.05)
			if alvoAtual.Character.Humanoid.SeatPart then
				local buraco = CFrame.new(265.46, -450.83, -59.93)
				alvoAtual.Character.HumanoidRootPart.CFrame = buraco
				eu.Character.HumanoidRootPart.CFrame = buraco
				task.wait(0.4)
				limparSofa()
				task.wait(0.2)
				if posInicial then
					eu.Character.HumanoidRootPart.CFrame = posInicial
				end
				break
			end
		end
	end)
end

entrada.TouchTap:Connect(function(toques, processado)
	if not ferramentaEquipada or processado then return end
	local pos = toques[1]
	local raio = cam:ScreenPointToRay(pos.X, pos.Y)
	local hit = mundo:Raycast(raio.Origin, raio.Direction * 1000)
	if hit and hit.Instance then
		local modelo = hit.Instance:FindFirstAncestorOfClass("Model")
		local jogador = jogadores:GetPlayerFromCharacter(modelo)
		if jogador and jogador ~= eu then
			arremessarComSofa(jogador)
		end
	end
end)
end
})

local kill = Troll:AddSection({Name = "All methods"})

Troll:AddButton({
    Name = "Kill All Bus",
    Callback = function()
        local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local destination = Vector3.new(145.51, -374.09, 21.58) 
local originalPosition = nil  

local function GetBus()  
    local vehicles = Workspace:FindFirstChild("Vehicles")  
    if vehicles then  
        return vehicles:FindFirstChild(Players.LocalPlayer.Name.."Car")  
    end  
    return nil  
end  

local function TrackPlayer(selectedPlayerName, callback)
    while true do  
        if selectedPlayerName then  
            local targetPlayer = Players:FindFirstChild(selectedPlayerName)  
            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then  
                local targetHumanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")  
                if targetHumanoid and targetHumanoid.Sit then  
                    local bus = GetBus()
                    if bus then
                        bus:SetPrimaryPartCFrame(CFrame.new(destination))   
                        print("Jogador sentou, levando √¥nibus para o void!")  

                        task.wait(0.2)  

                        local function simulateJump()  
                            local humanoid = Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")  
                            if humanoid then  
                                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)  
                            end  
                        end  

                        simulateJump()  
                        print("Simulando primeiro pulo!")  

                        task.wait(0.4)  
                        simulateJump()
                        print("Simulando segundo pulo!")  

                        task.wait(0.5)
                        if originalPosition then
                            Players.LocalPlayer.Character.HumanoidRootPart.CFrame = originalPosition  
                            print("Player voltou para a posi√ß√£o inicial Xique")  

                            task.wait(0.1)
                            local args = {
                                [1] = "DeleteAllVehicles"
                            }
                            ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
                            print("Todos os ve√≠culos foram deletados!")
                        end
                    end
                    break  
                else  
                    local targetRoot = targetPlayer.Character.HumanoidRootPart  
                    local time = tick() * 35
               
                    local lateralOffset = math.sin(time) * 10  -- Movimento lateral r√°pido  
                    local frontBackOffset = math.cos(time) * 20  -- Movimento frente/tr√°s
                      
                    local bus = GetBus()
                    if bus then
                        bus:SetPrimaryPartCFrame(targetRoot.CFrame * CFrame.new(0, 0, frontBackOffset))  
                    end
                end  
            end  
        end  
        RunService.RenderStepped:Wait()  
    end
    
    if callback then
        callback()
    end
end  

local function StartKillBusao(playerName, callback)
    local selectedPlayerName = playerName

    local player = Players.LocalPlayer  
    local character = player.Character or player.CharacterAdded:Wait()  
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")  

    originalPosition = humanoidRootPart.CFrame  

    local bus = GetBus()  

    if not bus then  
        humanoidRootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)  
        task.wait(0.5)  
        local remoteEvent = ReplicatedStorage:FindFirstChild("RE")  
        if remoteEvent and remoteEvent:FindFirstChild("1Ca1r") then  
            remoteEvent["1Ca1r"]:FireServer("PickingCar", "SchoolBus")  
        end  
        task.wait(1)  
        bus = GetBus()  
    end  

    if bus then  
        local seat = bus:FindFirstChild("Body") and bus.Body:FindFirstChild("VehicleSeat")  
        if seat and character:FindFirstChildOfClass("Humanoid") and not character.Humanoid.Sit then  
            repeat  
                humanoidRootPart.CFrame = seat.CFrame * CFrame.new(0, 2, 0)  
                task.wait()  
            until character.Humanoid.Sit or not bus.Parent  
        end  
    end  

    spawn(function()
        TrackPlayer(selectedPlayerName, callback)
    end)
end

local function PerformActionForAllPlayers(players)
    if #players == 0 then
        return
    end

    local player = table.remove(players, 1)
    StartKillBusao(player.Name, function()
        task.wait(0.5)
        PerformActionForAllPlayers(players)
    end)
end

PerformActionForAllPlayers(Players:GetPlayers())
    end
})
print("Kill All Bus button created")

Troll:AddButton({
    Name = "House Ban kill All",
    Callback = function()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")


local function executeScriptForPlayer(targetPlayer)
    local Player = game.Players.LocalPlayer
    local Backpack = Player.Backpack
    local Character = Player.Character
    local Humanoid = Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Character:FindFirstChild("HumanoidRootPart")
    local Houses = game.Workspace:FindFirstChild("001_Lots")
    local OldPos = RootPart.CFrame
    local Angles = 0
    local Vehicles = Workspace.Vehicles
    local Pos


    function Check()
        if Player and Character and Humanoid and RootPart and Vehicles then
            return true
        else
            return false
        end
    end


    if Check() then
        local House = Houses:FindFirstChild(Player.Name.."House")
        if not House then
            local EHouse
            for _, Lot in pairs(Houses:GetChildren()) do
                if Lot.Name == "For Sale" then
                    for _, num in pairs(Lot:GetDescendants()) do
                        if num:IsA("NumberValue") and num.Name == "Number" and num.Value < 25 and num.Value > 10 then
                            EHouse = Lot
                            break
                        end
                    end
                end
            end


            local BuyDetector = EHouse:FindFirstChild("BuyHouse")
            Pos = BuyDetector.Position
            if BuyDetector and BuyDetector:IsA("BasePart") then
                RootPart.CFrame = BuyDetector.CFrame + Vector3.new(0, -6, 0)
                task.wait(0.5)
                local ClickDetector = BuyDetector:FindFirstChild("ClickDetector")
                if ClickDetector then
                    fireclickdetector(ClickDetector)
                end
            end
        end


        task.wait(0.5)
        local PreHouse = Houses:FindFirstChild(Player.Name .. "House")
        if PreHouse then
            task.wait(0.5)
            local Number
            for i, x in pairs(PreHouse:GetDescendants()) do
                if x.Name == "Number" and x:IsA("NumberValue") then
                    Number = x
                end
            end
            task.wait(0.5)
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gettin1gHous1e"):FireServer("PickingCustomHouse", "049_House", Number.Value)
        end


        task.wait(0.5)
        local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if not PCar then
            if Check() then
                RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                task.wait(0.5)
                local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                task.wait(0.5)
                local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                if Seat then
                    repeat
                        task.wait()
                        RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                    until Humanoid.Sit
                end
            end
        end


        task.wait(0.5)
        local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if PCar then
            if not Humanoid.Sit then
                local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                if Seat then
                    repeat
                        task.wait()
                        RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                    until Humanoid.Sit
                end
            end


            local Target = targetPlayer
            local TargetC = Target.Character
            local TargetH = TargetC:FindFirstChildOfClass("Humanoid")
            local TargetRP = TargetC:FindFirstChild("HumanoidRootPart")
            if TargetC and TargetH and TargetRP then
                if not TargetH.Sit then
                    while not TargetH.Sit do
                        task.wait()
                        local Fling = function(alvo, pos, angulo)
                            PCar:SetPrimaryPartCFrame(CFrame.new(alvo.Position) * pos * angulo)
                        end
                        Angles = Angles + 100
                        Fling(TargetRP, CFrame.new(0, 1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                        Fling(TargetRP, CFrame.new(0, -1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                        Fling(TargetRP, CFrame.new(2.25, 1.5, -2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                        Fling(TargetRP, CFrame.new(-2.25, -1.5, 2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                        Fling(TargetRP, CFrame.new(0, 1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                        Fling(TargetRP, CFrame.new(0, -1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(Angles), 0, 0))
                    end
                    task.wait(0.2)
                    local House = Houses:FindFirstChild(Player.Name.."House")
                    PCar:SetPrimaryPartCFrame(CFrame.new(House.HouseSpawnPosition.Position))
                    task.wait(0.2)
                    local pedro = Region3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(30,30,30), game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(30,30,30))
                    local a = workspace:FindPartsInRegion3(pedro, game.Players.LocalPlayer.Character.HumanoidRootPart, math.huge)
                    for i, v in pairs(a) do
                        if v.Name == "HumanoidRootPart" then
                            local b = game:GetService("Players"):FindFirstChild(v.Parent.Name)
                            local args = {
                                [1] = "BanPlayerFromHouse",
                                [2] = b,
                                [3] = v.Parent
                            }
                            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
                        end
                    end
                end
            end
        end
    end


    -- Deletar o ve√≠culo
    local deleteArgs = {
        [1] = "DeleteAllVehicles"
    }
    ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(deleteArgs))
end


-- Iterar sobre todos os jogadores no mapa
for _, player in pairs(Players:GetPlayers()) do
    if player ~= Player then
        executeScriptForPlayer(player)
       task.wait(2)
    end
end
    end
})
print("House Ban kill All button created")

Troll:AddButton({
    Name = "Fling Boat all",
    Callback = function()
        local Player = game.Players.LocalPlayer
    local Character = Player.Character
    local Humanoid = Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Character:FindFirstChild("HumanoidRootPart")
    local Vehicles = game.Workspace:FindFirstChild("Vehicles")
    local OldPos = RootPart.CFrame
    local Angles = 0
    local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
    
    -- Se n√É¬£o tiver um carro, cria um  
            if not PCar then  
                if RootPart then  
                    RootPart.CFrame = CFrame.new(1754, -2, 58)  
                    task.wait(0.5)  
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingBoat", "MilitaryBoatFree")  
                    task.wait(0.5)  
                    PCar = Vehicles:FindFirstChild(Player.Name.."Car")  
                    task.wait(0.5)  
                    local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")  
                    if Seat then  
                        repeat  
                            task.wait()  
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)  
                        until Humanoid.Sit  
                    end  
                end  
            end  
      
            task.wait(0.5)  
            PCar = Vehicles:FindFirstChild(Player.Name.."Car")  
      
            -- Se o carro existir, teletransporta para o assento se necess√É¬°rio  
            if PCar then  
                if not Humanoid.Sit then  
                    local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")  
                    if Seat then  
                        repeat  
                            task.wait()  
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)  
                        until Humanoid.Sit  
                    end  
                end  
            end  
      
            -- Adiciona o BodyGyro ao carro para controle de movimento  
            local SpinGyro = Instance.new("BodyGyro")  
            SpinGyro.Parent = PCar.PrimaryPart  
            SpinGyro.MaxTorque = Vector3.new(1e7, 1e7, 1e7)  
            SpinGyro.P = 1e7  
            SpinGyro.CFrame = PCar.PrimaryPart.CFrame * CFrame.Angles(0, math.rad(90), 0)  
      
            -- Fun√É¬ß√É¬£o de Fling em cada jogador por 3 segundos  
            local function flingPlayer(TargetC, TargetRP, TargetH)
    Angles = 0  
                local endTime = tick() + 1  -- Define o tempo final em 2 segundos a partir de agora  
                while tick() < endTime do  
                    Angles = Angles + 100  
                    task.wait()  
      
                    -- Movimentos e √É¬¢ngulos para o Fling  
                    local kill = function(alvo, pos, angulo)  
                        PCar:SetPrimaryPartCFrame(CFrame.new(alvo.Position) * pos * angulo)  
                    end  
      
                    -- Fling para v√É¬°rias posi√É¬ß√É¬µes ao redor do TargetRP  
                    kill(TargetRP, CFrame.new(0, 3, 0), CFrame.Angles(math.rad(Angles), 0, 0))  
                    kill(TargetRP, CFrame.new(0, -1.5, 2), CFrame.Angles(math.rad(Angles), 0, 0))  
                    kill(TargetRP, CFrame.new(2, 1.5, 2.25), CFrame.Angles(math.rad(50), 0, 0))  
                    kill(TargetRP, CFrame.new(-2.25, -1.5, 2.25), CFrame.Angles(math.rad(30), 0, 0))  
                    kill(TargetRP, CFrame.new(0, 1.5, 0), CFrame.Angles(math.rad(Angles), 0, 0))  
                    kill(TargetRP, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(Angles), 0, 0))  
                end  
            end  
      
            -- Itera sobre todos os jogadores  
            for _, Target in pairs(game.Players:GetPlayers()) do  
                -- Pula o jogador local  
                if Target ~= Player then  
                    local TargetC = Target.Character  
                    local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")  
                    local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")  
      
                    -- Se encontrar o alvo e seus componentes, executa o fling  
                    if TargetC and TargetH and TargetRP then  
                        flingPlayer(TargetC, TargetRP, TargetH)  -- Fling no jogador atual  
                    end  
                end  
            end  
      
            -- Retorna o jogador para sua posi√É¬ß√É¬£o original  
            task.wait(0.5)  
            PCar:SetPrimaryPartCFrame(CFrame.new(0, 0, 0))  
            task.wait(0.5)  
            Humanoid.Sit = false  
            task.wait(0.5)  
            RootPart.CFrame = OldPos  
      
            -- Remove o BodyGyro ap√É¬≥s o efeito  
            SpinGyro:Destroy()  
    end
})
print("Fling Boat All button created")

Troll:AddButton({
    Name = "Auto Fling All",
    Callback = function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local LocalPlayer = Players.LocalPlayer
    local cam = workspace.CurrentCamera


    local function ProcessPlayer(target)
        if not target or not target.Character or target == LocalPlayer then return end
        
        local flingActive = true
        local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        local tRoot = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
        if not root or not tRoot then return end
        
        local char = LocalPlayer.Character
        local hum = char:FindFirstChildOfClass("Humanoid")
        local original = root.CFrame

    
        ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer("ClearAllTools")
        task.wait(0.2)

  
        ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
        task.wait(0.3)

        local tool = LocalPlayer.Backpack:FindFirstChild("Couch")
        if tool then
            tool.Parent = char
        end
task.wait(0.1)

game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.F, false, game)
task.wait(0.25)

        workspace.FallenPartsDestroyHeight = 0/0

        local bv = Instance.new("BodyVelocity")
        bv.Name = "FlingForce"
        bv.Velocity = Vector3.new(9e8, 9e8, 9e8)
        bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        bv.Parent = root

        hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
        hum.PlatformStand = false
        cam.CameraSubject = target.Character:FindFirstChild("Head") or tRoot or hum

 
        task.spawn(function()
            local angle = 0
            local parts = {root}
            while flingActive and target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") do
                local tHum = target.Character:FindFirstChildOfClass("Humanoid")
                if tHum.Sit then break end
                angle += 50

                for _, part in ipairs(parts) do
                    local hrp = target.Character.HumanoidRootPart
                    local pos = hrp.Position + hrp.Velocity / 1.5
                    root.CFrame = CFrame.new(pos) * CFrame.Angles(math.rad(angle), 0, 0)
                end

                root.Velocity = Vector3.new(9e8, 9e8, 9e8)
                root.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
                task.wait()
            end

         
            flingActive = false
            bv:Destroy()
            hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
            hum.PlatformStand = false
            root.CFrame = original
            cam.CameraSubject = hum

            for _, p in pairs(char:GetDescendants()) do
                if p:IsA("BasePart") then
                    p.Velocity = Vector3.zero
                    p.RotVelocity = Vector3.zero
                end
            end

            hum:UnequipTools()
            ReplicatedStorage.RE:FindFirstChild("1Too1l"):InvokeServer("PickingTools", "Couch")
        end)
       
        while flingActive do
            task.wait()
        end
    end


    for _, player in ipairs(Players:GetPlayers()) do
        ProcessPlayer(player)
			end
    end
})

Troll:AddButton({
    Name = "Bring All Couch [melhor]",
    Callback = function()
        local args = {
    [1] = "ClearAllTools"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer(unpack(args))

wait(0.2)

toolselcted = "Couch"
dupeamot = 25 --Put amouth to dupe
picktoolremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
cleartoolremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clea1rTool1s")
game:GetService("StarterGui"):SetCore("SendNotification",{Title="Dupando",Text="Nao Clique em nada quando tiver dupando . ", Button1 = " Eu entendi" ,Duration=5})
game:GetService("StarterGui"):SetCore("SendNotification",{Title="Dupe Script",Text="Because It will break the script and you will need to rejoin.", Button1 = "Eu entendi" ,Duration=5}) 
duping = true
oldcf = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
    task.wait()
    game.Players.LocalPlayer.Character.Humanoid.Sit = false
end
wait(0.1)
if game:GetService("Workspace"):FindFirstChild("Camera") then
    game:GetService("Workspace"):FindFirstChild("Camera"):Destroy() 
end
for m=1,2 do 
    task.wait()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999.414, -490, 999999999.414, 0.974360406, -0.175734088, 0.14049761, -0.133441404, 0.0514053069, 0.989722729, -0.181150302, -0.983094692, 0.0266370922)
end
task.wait(0.2)
game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
wait(0.5)
for aidj,afh in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
    if afh.Name == toolselcted == false then
        if afh:IsA("Tool") then
            afh.Parent = game.Players.LocalPlayer.Backpack
        end
    end
end
for aiefhiewhwf,dvjbvj in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
    if dvjbvj:IsA("Tool") then
        if dvjbvj.Name == toolselcted == false then
            dvjbvj:Destroy()
        end
    end
end
for ttjtjutjutjjtj,ddvdvdsvdfbrnytytmvdv in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
    if ddvdvdsvdfbrnytytmvdv:IsA("Tool") then
        if ddvdvdsvdfbrnytytmvdv.name == toolselcted == false then
            ddvdvdsvdfbrnytytmvdv:Destroy()
        end
    end
end
for findin,toollel in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
    if toollel:IsA("Tool") then
        if toollel.Name == toolselcted then
            toollllfoun2 = true
            for basc,aijfw in pairs(toollel:GetDescendants()) do
                if aijfw.Name == "Handle" then
                    aijfw.Name = "H√¢¬Å¬•a√¢¬Å¬•n√¢¬Å¬•d√¢¬Å¬•l√¢¬Å¬•e"
                    toollel.Parent = game.Players.LocalPlayer.Backpack
                    toollel.Parent = game.Players.LocalPlayer.Character
                    tollllahhhh = toollel
                    task.wait()
                end
            end
        else 
            toollllfoun2 = false
        end
    end
end
for fiifi,toollll in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
    if toollll:IsA("Tool") then
        if toollll.Name == toolselcted then
            toollllfoun = true
            for nana,jjsjsj in pairs(toollll:GetDescendants()) do
                if jjsjsj.Name == "Handle" then
                    toollll.Parent = game.Players.LocalPlayer.Character
                    wait()
                    jjsjsj.Name = "H√¢¬Å¬•a√¢¬Å¬•n√¢¬Å¬•d√¢¬Å¬•l√¢¬Å¬•e"
                    toollll.Parent = game.Players.LocalPlayer.Backpack
                    toollll.Parent = game.Players.LocalPlayer.Character
                    toolllffel = toollll
                end
            end
        else 
            toollllfoun = false
        end
    end
end
if toollllfoun == true then
    if game.Players.LocalPlayer.Character:FindFirstChild(toolllffel) == nil then  
        toollllfoun = false 
    end
    repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild(toolllffel) == nil
    toollllfoun = false
end
if toollllfoun2 == true then
    if game.Players.LocalPlayer.Character:FindFirstChild(tollllahhhh) == nil then 
        toollllfoun2 = false 
    end
    repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild(tollllahhhh) == nil
    toollllfoun2 = false
end
wait(0.1)
for m=1, dupeamot do
    if duping == false then 
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false 
        return 
    end
    if game:GetService("Workspace"):FindFirstChild("Camera") then
        game:GetService("Workspace"):FindFirstChild("Camera"):Destroy() 
    end
    if m <= dupeamot then
        game:GetService("StarterGui"):SetCore("SendNotification",{Title="Dupando vida",Text="Se tem".." "..m.." ".."Duped".." "..toolselcted.."!",Duration=0.5})
    elseif m == dupeamot or m >= dupeamot - 1 then
        game:GetService("StarterGui"):SetCore("SendNotification",{Title="Dupando",Text="Se tem".." "..m.." ".."Duped".." "..toolselcted.."!".." ".."Duping tools is done now, Please wait a little bit to respawn.",Duration=4})
    end
    local args = {
        [1] = "PickingTools",
        [2] = toolselcted
    }
    
    picktoolremote:InvokeServer(unpack(args))
    game:GetService("Players").LocalPlayer.Backpack:WaitForChild(toolselcted).Parent = game.Players.LocalPlayer.Character
    if duping == false then 
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false 
        return 
    end
    wait()
    game:GetService("Players").LocalPlayer.Character[toolselcted]:FindFirstChild("Handle").Name = "H√¢¬Å¬•a√¢¬Å¬•n√¢¬Å¬•d√¢¬Å¬•l√¢¬Å¬•e"
    game:GetService("Players").LocalPlayer.Character:FindFirstChild(toolselcted).Parent = game.Players.LocalPlayer.Backpack
    game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(toolselcted).Parent = game.Players.LocalPlayer.Character
    repeat  
        if game:GetService("Workspace"):FindFirstChild("Camera") then
            game:GetService("Workspace"):FindFirstChild("Camera"):Destroy() 
        end
        task.wait() 
    until game:GetService("Players").LocalPlayer.Character:FindFirstChild(toolselcted) == nil
end
game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") == nil
repeat wait() until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldcf
wait()
duping = false

for wwefef,weifwwe in pairs(game.Players:GetPlayers()) do
    if weifwwe.Name == game.Players.LocalPlayer.Name == false then
        ewoifjwoifjiwo = wwefef
    end
end
for m=1,ewoifjwoifjiwo do
    game.Players.LocalPlayer.Backpack.Couch.Name = "couch"..m
end
wait()
for weofefawd,iwiejguiwg in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
    if iwiejguiwg.Name == "couch"..weofefawd then
        iwiejguiwg.Handle.Name = "Handle "
    end
end
wait(0.2)
local function bring(skjdfuwiruwg,woiejewg)
    if woiejewg == nil == false then
        game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg]:FindFirstChild("Seat1").Disabled = true
        game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg]:FindFirstChild("Seat2").Disabled = true
        game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character
        tet = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg]:FindFirstChild("Handle "))
        tet.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
        tet.P = 1250
        tet.Velocity = Vector3.new(0,0,0)
        tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"
        repeat
            for m=1,35 do
                local pos = {x=0, y=0, z=0}
                pos.x = woiejewg.Character.HumanoidRootPart.Position.X
                pos.y = woiejewg.Character.HumanoidRootPart.Position.Y
                pos.z = woiejewg.Character.HumanoidRootPart.Position.Z
                pos.x = pos.x + woiejewg.Character.HumanoidRootPart.Velocity.X / 2
                pos.y = pos.y + woiejewg.Character.HumanoidRootPart.Velocity.Y / 2
                pos.z = pos.z + woiejewg.Character.HumanoidRootPart.Velocity.Z / 2
                game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg]:FindFirstChild("Seat1").CFrame = CFrame.new(Vector3.new(pos.x,pos.y,pos.z)) * CFrame.new(-2,2,0)
                task.wait()
            end
            game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack
            wait()
            game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg]:FindFirstChild("Handle ").Name = "Handle"
            wait(0.2)
            game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character
            wait()
            game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack
            game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg].Handle.Name = "Handle "
            wait(0.2)
            game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character
            tet = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg]:FindFirstChild("Seat1"))
            tet.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
            tet.P = 1250
            tet.Velocity = Vector3.new(0,0,0)
            tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"
        until woiejewg.Character.Humanoid.Sit == true
        wait()
        game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg]:FindFirstChild("Handle "):FindFirstChild("#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"):Destroy()
        game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack
        wait()
        game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg]:FindFirstChild("Handle ").Name = "Handle"
        wait(0.2)
        game.Players.LocalPlayer.Backpack["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character
        wait()
        game.Players.LocalPlayer.Character["couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack
    end
end
for mwef,weuerg in pairs(game.Players:GetPlayers()) do
    if weuerg.Name == game.Players.LocalPlayer.Name == false then
        spawn(function()
            bring(mwef,weuerg)
        end)
    end
end
    end
})
print("Bring All Couch button created")

Troll:AddButton({
    Name = "Kill All Couch [melhor]",
    Callback = function()
        local args = {
    [1] = "ClearAllTools"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer(unpack(args))

wait(0.2)

local initialPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

local part = Instance.new("Part")
part.Size = Vector3.new(5000, 10, 5000)
part.Position = Vector3.new(0, -500, 0)
part.Anchored = true
part.CanCollide = true
part.Parent = game.Workspace
task.wait()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0, -500, 0)
wait(2)
toolselcted = "Couch"
dupeamot = 25 -- dupe
picktoolremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
cleartoolremote = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clea1rTool1s")
game:GetService("StarterGui"):SetCore("SendNotification",{Title="Dupando",Text="Nao clique em nada", Button1 = "Eu entendi" ,Duration=5})
game:GetService("StarterGui"):SetCore("SendNotification",{Title="Dupando",Text="Espere", Button1 = "Tendeu" ,Duration=5})
duping = true
oldcf = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
    task.wait()
    game.Players.LocalPlayer.Character.Humanoid.Sit = false
end
wait(0.1)
if game:GetService("Workspace"):FindFirstChild("Camera") then
    game:GetService("Workspace"):FindFirstChild("Camera"):Destroy()
end
for m=1,2 do 
    task.wait()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999.414, -490, 999999999.414, 0.974360406, -0.175734088, 0.14049761, -0.133441404, 0.0514053069, 0.989722729, -0.181150302, -0.983094692, 0.0266370922)
end
task.wait(0.2)
game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
wait(0.5)
for aidj,afh in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
    if afh.Name == toolselcted == false then
        if afh:IsA("Tool") then
            afh.Parent = game.Players.LocalPlayer.Backpack
        end
    end
end
for aiefhiewhwf,dvjbvj in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
    if dvjbvj:IsA("Tool") then
        if dvjbvj.Name == toolselcted == false then
            dvjbvj:Destroy()
        end
    end
end
for ttjtjutjutjjtj,ddvdvdsvdfbrnytytmvdv in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
    if ddvdvdsvdfbrnytytmvdv:IsA("Tool") then
        if ddvdvdsvdfbrnytytmvdv.Name == toolselcted == false then
            ddvdvdsvdfbrnytytmvdv:Destroy()
        end
    end
end
for findin,toollel in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
    if toollel:IsA("Tool") then
        if toollel.Name == toolselcted then
            toollllfoun2 = true
            for basc,aijfw in pairs(toollel:GetDescendants()) do
                if aijfw.Name == "Handle" then
                    aijfw.Name = "H√É¬¢√Ç √Ç¬•a√É¬¢√Ç √Ç¬•n√É¬¢√Ç √Ç¬•d√É¬¢√Ç √Ç¬•l√É¬¢√Ç √Ç¬•e"
                    toollel.Parent = game.Players.LocalPlayer.Backpack
                    toollel.Parent = game.Players.LocalPlayer.Character
                    tollllahhhh = toollel
                    task.wait()
                end
            end
        else 
            toollllfoun2 = false
        end
    end
end
for fiifi,toollll in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
    if toollll:IsA("Tool") then
        if toollll.Name == toolselcted then
            toollllfoun = true
            for nana,jjsjsj in pairs(toollll:GetDescendants()) do
                if jjsjsj.Name == "Handle" then
                    toollll.Parent = game.Players.LocalPlayer.Character
                    wait()
                    jjsjsj.Name = "H√É¬¢√Ç √Ç¬•a√É¬¢√Ç √Ç¬•n√É¬¢√Ç √Ç¬•d√É¬¢√Ç √Ç¬•l√É¬¢√Ç √Ç¬•e"
                    toollll.Parent = game.Players.LocalPlayer.Backpack
                    toollll.Parent = game.Players.LocalPlayer.Character
                    toolllffel = toollll
                end
            end
        else 
            toollllfoun = false
        end
    end
end
if toollllfoun == true then
    if game.Players.LocalPlayer.Character:FindFirstChild(toolllffel) == nil then 
        toollllfoun = false 
    end
    repeat 
        wait() 
    until game.Players.LocalPlayer.Character:FindFirstChild(toolllffel) == nil
    toollllfoun = false
end
if toollllfoun2 == true then
    if game.Players.LocalPlayer.Character:FindFirstChild(tollllahhhh) == nil then 
        toollllfoun2 = false 
    end
    repeat 
        wait() 
    until game.Players.LocalPlayer.Character:FindFirstChild(tollllahhhh) == nil
    toollllfoun2 = false
end
wait(0.1)
for m=1, dupeamot do
    if duping == false then 
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false 
        return 
    end
    if game:GetService("Workspace"):FindFirstChild("Camera") then
        game:GetService("Workspace"):FindFirstChild("Camera"):Destroy() 
    end
    if m <= dupeamot then
        game:GetService("StarterGui"):SetCore("SendNotification",{Title="Dupe Script",Text="Agora c Tem".." "..m.." ".."Duped".." "..toolselcted.."!",Duration=0.5})
    elseif m == dupeamot or m >= dupeamot - 1 then
        game:GetService("StarterGui"):SetCore("SendNotification",{Title="Dupe Script",Text="Agora c tem".." "..m.." ".."Duped".." "..toolselcted.."!".." ".."As tools Tao sendo dupada Clica em nada nao fiote",Duration=4})
    end
    local args = {
        [1] = "PickingTools",
        [2] = toolselcted
    }

    picktoolremote:InvokeServer(unpack(args)) 
    game:GetService("Players").LocalPlayer.Backpack:WaitForChild(toolselcted).Parent = game.Players.LocalPlayer.Character 
    if duping == false then 
        game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false 
        return 
    end 
    wait() 
    game:GetService("Players").LocalPlayer.Character[toolselcted]:FindFirstChild("Handle").Name = "H√É¬¢√Ç √Ç¬•a√É¬¢√Ç √Ç¬•n√É¬¢√Ç √Ç¬•d√É¬¢√Ç √Ç¬•l√É¬¢√Ç √Ç¬•e" 
    game:GetService("Players").LocalPlayer.Character:FindFirstChild(toolselcted).Parent = game.Players.LocalPlayer.Backpack 
    game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(toolselcted).Parent = game.Players.LocalPlayer.Character 
    repeat 
        if game:GetService("Workspace"):FindFirstChild("Camera") then 
            game:GetService("Workspace"):FindFirstChild("Camera"):Destroy() 
        end 
        task.wait() 
    until game:GetService("Players").LocalPlayer.Character:FindFirstChild(toolselcted) == nil 
end 
game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false 
repeat 
    wait() 
until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") == nil 
repeat 
    wait() 
until game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") 
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldcf 
wait() 
duping = false 
for wwefef,weifwwe in pairs(game.Players:GetPlayers()) do 
    if weifwwe.Name == game.Players.LocalPlayer.Name == false then 
        ewoifjwoifjiwo = wwefef 
    end 
end 
for m=1,ewoifjwoifjiwo do 
    game.Players.LocalPlayer.Backpack.Couch.Name = "Chaos Couch"..m 
end 
wait() 
for weofefawd,iwiejguiwg in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do 
    if iwiejguiwg.Name == "Chaos Couch"..weofefawd then 
        iwiejguiwg.Handle.Name = "Handle " 
    end 
end 
wait(0.2) 
local function bring(skjdfuwiruwg,woiejewg) 
    if woiejewg == nil == false then 
        game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Seat1").Disabled = true 
        game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Seat2").Disabled = true 
        game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character 
        tet = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Handle ")) 
        tet.MaxForce = Vector3.new(math.huge,math.huge,math.huge) 
        tet.P = 1250 
        tet.Velocity = Vector3.new(0,0,0) 
        tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W" 
        repeat 
            for m=1,35 do 
                local pos = {x=0, y=0, z=0} 
                pos.x = woiejewg.Character.HumanoidRootPart.Position.X 
                pos.y = woiejewg.Character.HumanoidRootPart.Position.Y 
                pos.z = woiejewg.Character.HumanoidRootPart.Position.Z 
                pos.x = pos.x + woiejewg.Character.HumanoidRootPart.Velocity.X / 2 
                pos.y = pos.y + woiejewg.Character.HumanoidRootPart.Velocity.Y / 2 
                pos.z = pos.z + woiejewg.Character.HumanoidRootPart.Velocity.Z / 2 
                game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Seat1").CFrame = CFrame.new(Vector3.new(pos.x,pos.y,pos.z)) * CFrame.new(-2,2,0) 
                task.wait() 
            end 
            game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack 
            wait() 
            game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Handle ").Name = "Handle" 
            wait(0.2) 
            game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character 
            wait() 
            game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack 
            game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg].Handle.Name = "Handle " 
            wait(0.2) 
            game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character 
            tet = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Seat1")) 
            tet.MaxForce = Vector3.new(math.huge,math.huge,math.huge) 
            tet.P = 1250 
            tet.Velocity = Vector3.new(0,0,0) 
            tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W" 
        until woiejewg.Character.Humanoid.Sit == true 
        wait() 
        game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Handle "):FindFirstChild("#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"):Destroy() 
        game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack 
        wait() 
        game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg]:FindFirstChild("Handle ").Name = "Handle" 
        wait(0.2) 
        game.Players.LocalPlayer.Backpack["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Character 
        wait() 
        game.Players.LocalPlayer.Character["Chaos Couch"..skjdfuwiruwg].Parent = game.Players.LocalPlayer.Backpack 
    end 
end 
for mwef,weuerg in pairs(game.Players:GetPlayers()) do 
    if weuerg.Name == game.Players.LocalPlayer.Name == false then 
        spawn(function() bring(mwef,weuerg) end) 
    end 
end 

-- Fun√ß√£o para teletransportar o jogador de volta √† posi√ß√£o inicial ap√≥s 10 segundos
task.delay(14, function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(initialPosition)
end)

-- Fun√ß√£o para limpar todas as ferramentas 0.5 segundos ap√≥s teletransporte para a posi√ß√£o inicial
task.delay(14.1, function()
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Clea1rTool1s"):FireServer(unpack(args))
end)
    end
})
print("Kill All Couch button created")  

Troll:AddButton({
    Name = "Fling Ball all",
	    Callback = function()
local player=game:GetService("Players").LocalPlayer
local SoccerBalls=workspace.WorkspaceCom["001_SoccerBalls"]
local MyBall=SoccerBalls:FindFirstChild("Soccer"..player.Name)

if not MyBall then
if not player.Backpack:FindFirstChild("SoccerBall") then
local args={[1]="PickingTools",[2]="SoccerBall"}
game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))
task.wait()
player.Backpack.SoccerBall.Parent=player.Character
repeat MyBall=SoccerBalls:FindFirstChild("Soccer"..player.Name) task.wait() until MyBall
player.Character.SoccerBall.Parent=player.Backpack
task.wait()
else
player.Backpack.SoccerBall.Parent=player.Character
repeat MyBall=SoccerBalls:FindFirstChild("Soccer"..player.Name) task.wait() until MyBall
player.Character.SoccerBall.Parent=player.Backpack
end
end


for i,v in pairs(game.Players:GetPlayers()) do
if v~=game.Players.LocalPlayer then
local target=v
local TCharacter=target.Character or target.CharacterAdded:Wait()
local THumanoidRootPart=TCharacter:WaitForChild("HumanoidRootPart")
if not MyBall or not THumanoidRootPart then return end

for _,v in pairs(MyBall:GetChildren()) do
if v:IsA("BodyMover") then v:Destroy() end
end

local bodyVelocity=Instance.new("BodyVelocity")
bodyVelocity.Velocity=Vector3.new(9e8,9e8,9e8)
bodyVelocity.MaxForce=Vector3.new(1/0,1/0,1/0)
bodyVelocity.P=1e10
bodyVelocity.Parent=MyBall

local bv=Instance.new("BodyVelocity")
bv.Velocity=Vector3.new(9e8,9e8,9e8)
bv.MaxForce=Vector3.new(1/0,1/0,1/0)
bv.P=1e9
bv.Parent=THumanoidRootPart

local oldPos=THumanoidRootPart.Position
workspace.CurrentCamera.CameraSubject=THumanoidRootPart

repeat
local velocity=THumanoidRootPart.Velocity.Magnitude
local parts={}
for _,v in pairs(TCharacter:GetDescendants()) do
if v:IsA("BasePart") and v.CanCollide and not v.Anchored then table.insert(parts,v) end
end
for _,part in ipairs(parts) do
local pos_x=target.Character.HumanoidRootPart.Position.X
local pos_y=target.Character.HumanoidRootPart.Position.Y
local pos_z=target.Character.HumanoidRootPart.Position.Z
pos_x=pos_x+(target.Character.HumanoidRootPart.Velocity.X/1.5)
pos_y=pos_y+(target.Character.HumanoidRootPart.Velocity.Y/1.5)
pos_z=pos_z+(target.Character.HumanoidRootPart.Velocity.Z/1.5)
MyBall.CFrame=CFrame.new(pos_x,pos_y,pos_z)
task.wait(1/6000)
end
task.wait(1/6000)
until THumanoidRootPart.Velocity.Magnitude>5000 or TCharacter.Humanoid.Health==0 or target.Parent~=game.Players or THumanoidRootPart.Parent~=TCharacter or TCharacter~=target.Character

end
end

workspace.CurrentCamera.CameraSubject=game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
  end
})


local Tab = Window:MakeTab({"Avatar", "rbxassetid://10734952036"})

Tab:AddSection({ Name = "Copiar Skin" })

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Remotes = ReplicatedStorage:WaitForChild("Remotes")

local LocalPlayer = Players.LocalPlayer
local selectedPlayerName = nil

-- Fun√ß√£o para obter os nomes dos jogadores (excluindo o jogador local)
local function getPlayerList()
    local PlayerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Name ~= LocalPlayer.Name then
            table.insert(PlayerNames, player.Name)
        end
    end
    return PlayerNames
end

-- Dropdown de sele√ß√£o de jogador
local killDropdown = Tab:AddDropdown({
    Name = "Selecionar Jogador",
    Options = getPlayerList(),
    Default = "", -- Estado inicial vazio (mostra "..." ou equivalente)
    Callback = function(value)
        selectedPlayerName = value
        getgenv().Target = value
        print("Jogador selecionado: " .. tostring(value))
    end
})

-- Fun√ß√£o para atualizar o dropdown
local function UpdateDropdown()
    local tablePlayers = Players:GetPlayers()
    local newPlayers = {}
    if killDropdown then
        for _, player in ipairs(tablePlayers) do
            if player.Name ~= LocalPlayer.Name then
                table.insert(newPlayers, player.Name)
            end
        end
        killDropdown:Set(newPlayers)
        -- Sempre reseta a sele√ß√£o ao atualizar
        selectedPlayerName = nil
        getgenv().Target = nil
        killDropdown:SetValue("") -- Define o dropdown como vazio ("..." ou equivalente)
        print("Lista de jogadores atualizada: ", table.concat(newPlayers, ", "))
        if #newPlayers == 0 then
            print("Nenhum jogador dispon√≠vel (exceto voc√™).")
        end
    else
        print("Erro: Dropdown n√£o encontrado.")
    end
end

-- Atualiza o dropdown automaticamente quando jogadores entram ou saem
Players.PlayerAdded:Connect(UpdateDropdown)
Players.PlayerRemoving:Connect(UpdateDropdown)

-- Bot√£o para atualizar a lista de jogadores manualmente
Tab:AddButton({
    Name = "Atualizar Player List",
    Callback = function()
        local tablePlayers = Players:GetPlayers()
        local newPlayers = {}
        if killDropdown then
            for _, player in ipairs(tablePlayers) do
                if player.Name ~= LocalPlayer.Name then
                    table.insert(newPlayers, player.Name)
                end
            end
            killDropdown:Set(newPlayers)
            selectedPlayerName = nil
            getgenv().Target = nil
            killDropdown:SetValue("") -- Define o dropdown como vazio ("..." ou equivalente)
            print("Lista de jogadores atualizada manualmente: ", table.concat(newPlayers, ", "))
            print("Sele√ß√£o resetada ao atualizar a lista.")
            if #newPlayers == 0 then
                print("Nenhum jogador dispon√≠vel (exceto voc√™).")
            end
        else
            print("Erro: Dropdown n√£o encontrado.")
        end
    end
})

Tab:AddButton({
    Name = "Copiar Avatar",
    Callback = function()
        if not Target then return end

        local LP = Players.LocalPlayer
        local LChar = LP.Character
        local TPlayer = Players:FindFirstChild(Target)

        if TPlayer and TPlayer.Character then
            local LHumanoid = LChar and LChar:FindFirstChildOfClass("Humanoid")
            local THumanoid = TPlayer.Character:FindFirstChildOfClass("Humanoid")

            if LHumanoid and THumanoid then
                -- RESETAR LOCALPLAYER
                local LDesc = LHumanoid:GetAppliedDescription()

                -- Remover acess√É¬≥rios, roupas e face atuais
                for _, acc in ipairs(LDesc:GetAccessories(true)) do
                    if acc.AssetId and tonumber(acc.AssetId) then
                        Remotes.Wear:InvokeServer(tonumber(acc.AssetId))
                        task.wait(0.2)
                    end
                end

                if tonumber(LDesc.Shirt) then
                    Remotes.Wear:InvokeServer(tonumber(LDesc.Shirt))
                    task.wait(0.2)
                end

                if tonumber(LDesc.Pants) then
                    Remotes.Wear:InvokeServer(tonumber(LDesc.Pants))
                    task.wait(0.2)
                end

                if tonumber(LDesc.Face) then
                    Remotes.Wear:InvokeServer(tonumber(LDesc.Face))
                    task.wait(0.2)
                end

                -- COPIAR DO JOGADOR ALVO
                local PDesc = THumanoid:GetAppliedDescription()

                -- Enviar partes do corpo
                local argsBody = {
                    [1] = {
                        [1] = PDesc.Torso,
                        [2] = PDesc.RightArm,
                        [3] = PDesc.LeftArm,
                        [4] = PDesc.RightLeg,
                        [5] = PDesc.LeftLeg,
                        [6] = PDesc.Head
                    }
                }
                Remotes.ChangeCharacterBody:InvokeServer(unpack(argsBody))
                task.wait(0.5)

                if tonumber(PDesc.Shirt) then
                    Remotes.Wear:InvokeServer(tonumber(PDesc.Shirt))
                    task.wait(0.3)
                end

                if tonumber(PDesc.Pants) then
                    Remotes.Wear:InvokeServer(tonumber(PDesc.Pants))
                    task.wait(0.3)
                end

                if tonumber(PDesc.Face) then
                    Remotes.Wear:InvokeServer(tonumber(PDesc.Face))
                    task.wait(0.3)
                end

                for _, v in ipairs(PDesc:GetAccessories(true)) do
                    if v.AssetId and tonumber(v.AssetId) then
                        Remotes.Wear:InvokeServer(tonumber(v.AssetId))
                        task.wait(0.3)
                    end
                end

                local SkinColor = TPlayer.Character:FindFirstChild("Body Colors")
                if SkinColor then
                    Remotes.ChangeBodyColor:FireServer(tostring(SkinColor.HeadColor))
                    task.wait(0.3)
                end

                if tonumber(PDesc.IdleAnimation) then
                    Remotes.Wear:InvokeServer(tonumber(PDesc.IdleAnimation))
                    task.wait(0.3)
                end

                -- Nome, bio e cor
                local Bag = TPlayer:FindFirstChild("PlayersBag")
                if Bag then
                    if Bag:FindFirstChild("RPName") and Bag.RPName.Value ~= "" then
                        Remotes.RPNameText:FireServer("RolePlayName", Bag.RPName.Value)
                        task.wait(0.3)
                    end
                    if Bag:FindFirstChild("RPBio") and Bag.RPBio.Value ~= "" then
                        Remotes.RPNameText:FireServer("RolePlayBio", Bag.RPBio.Value)
                        task.wait(0.3)
                    end
                    if Bag:FindFirstChild("RPNameColor") then
                        Remotes.RPNameColor:FireServer("PickingRPNameColor", Bag.RPNameColor.Value)
                        task.wait(0.3)
                    end
                    if Bag:FindFirstChild("RPBioColor") then
                        Remotes.RPNameColor:FireServer("PickingRPBioColor", Bag.RPBioColor.Value)
                        task.wait(0.3)
                    end
                end
            end
        end
    end
})

Tab:AddSection({ "Partes do Corpo:" })

-- Vari√°veis globais para armazenar partes selecionadas
_G.selectedParts = {
    Torso = nil,
    BracoDireito = nil,
    BracoEsquerdo = nil,
    PernaDireita = nil,
    PernaEsquerda = nil,
    Cabeca = nil
}

-- TextBox para Torso
Tab:AddTextBox({
    Name = "Tronco",
    Description = "ID do Tronco",
    PlaceholderText = "Linux",
    TextSize = 16,
    FontSize = 16,
    Callback = function(Value)
        if Value == "" then
            _G.selectedParts.Torso = nil
            print("Tronco: vazio")
        else
            local id = tonumber(Value) or 0
            _G.selectedParts.Torso = id
            print("Tronco: " .. id)
        end
    end
})

-- TextBox para Right Arm  
Tab:AddTextBox({
    Name = "Bra√ßo Direito",
    Description = "ID do Bra√ßo Direito",
    PlaceholderText = "Linux",
    TextSize = 16,
    FontSize = 16,
    Callback = function(Value)
        if Value == "" then
            _G.selectedParts.BracoDireito = nil
            print("Bra√ßo Direito: vazio")
        else
            local id = tonumber(Value) or 0
            _G.selectedParts.BracoDireito = id
            print("Bra√ßo Direito: " .. id)
        end
    end
})

-- TextBox para Left Arm
Tab:AddTextBox({
    Name = "Bra√ßo Esquerdo",
    Description = "ID do Bra√ßo Esquerdo",
    PlaceholderText = "Linux",
    TextSize = 16,
    FontSize = 16,
    Callback = function(Value)
        if Value == "" then
            _G.selectedParts.BracoEsquerdo = nil
            print("Bra√ßo Esquerdo: vazio")
        else
            local id = tonumber(Value) or 0
            _G.selectedParts.BracoEsquerdo = id
            print("Bra√ßo Esquerdo: " .. id)
        end
    end
})

-- TextBox para Right Leg
Tab:AddTextBox({
    Name = "Perna Direita",
    Description = "ID da Perna Direita",
    PlaceholderText = "Linux",
    TextSize = 16,
    FontSize = 16,
    Callback = function(Value)
        if Value == "" then
            _G.selectedParts.PernaDireita = nil
            print("Perna Direita: vazio")
        else
            local id = tonumber(Value) or 0
            _G.selectedParts.PernaDireita = id
            print("Perna Direita: " .. id)
        end
    end
})

-- TextBox para Left Leg
Tab:AddTextBox({
    Name = "Perna Esquerda",
    Description = "ID da Perna Esquerda",
    PlaceholderText = "Linux",
    TextSize = 16,
    FontSize = 16,
    Callback = function(Value)
        if Value == "" then
            _G.selectedParts.PernaEsquerda = nil
            print("Perna Esquerda: vazio")
        else
            local id = tonumber(Value) or 0
            _G.selectedParts.PernaEsquerda = id
            print("Perna Esquerda: " .. id)
        end
    end
})

-- TextBox para Head
Tab:AddTextBox({
    Name = "Cabe√ßa",
    Description = "ID da Cabe√ßa",
    PlaceholderText = "Linux",
    TextSize = 16,
    FontSize = 16,
    Callback = function(Value)
        if Value == "" then
            _G.selectedParts.Cabeca = nil
            print("Cabe√ßa: vazio")
        else
            local id = tonumber(Value) or 0
            _G.selectedParts.Cabeca = id
            print("Cabe√ßa: " .. id)
        end
    end
})

Tab:AddSection({ "Carregar Partes:" })

-- Vari√°vel para armazenar a parte selecionada no dropdown
_G.parteSelecionada = "Tronco"

-- Dropdown para selecionar qual parte carregar
Tab:AddDropdown({
    Name = "Selecionar Parte",
    Description = "Escolha qual parte equipar",
    Default = "Tronco",
    Options = {"Tronco", "Bra√ßo Direito", "Bra√ßo Esquerdo", "Perna Direita", "Perna Esquerda", "Cabe√ßa"},
    Callback = function(Value)
        _G.parteSelecionada = Value
        print("Parte selecionada: " .. Value)
    end
})

-- Bot√£o para equipar a parte selecionada no dropdown
Tab:AddButton({
    Name = "Equipar Parte Selecionada",
    Description = "Equipa apenas a parte escolhida no dropdown",
    Callback = function()
        local args = {
            [1] = {
                [1] = 0, -- Torso
                [2] = 0, -- Right Arm
                [3] = 0, -- Left Arm
                [4] = 0, -- Right Leg
                [5] = 0, -- Left Leg
                [6] = 0  -- Head
            }
        }
        
        -- Define qual parte carregar baseado na sele√ß√£o do dropdown
        if _G.parteSelecionada == "Tronco" and _G.selectedParts.Torso then
            args[1][1] = _G.selectedParts.Torso
            print("Equipando Tronco: " .. _G.selectedParts.Torso)
        elseif _G.parteSelecionada == "Bra√ßo Direito" and _G.selectedParts.BracoDireito then
            args[1][2] = _G.selectedParts.BracoDireito
            print("Equipando Bra√ßo Direito: " .. _G.selectedParts.BracoDireito)
        elseif _G.parteSelecionada == "Bra√ßo Esquerdo" and _G.selectedParts.BracoEsquerdo then
            args[1][3] = _G.selectedParts.BracoEsquerdo
            print("Equipando Bra√ßo Esquerdo: " .. _G.selectedParts.BracoEsquerdo)
        elseif _G.parteSelecionada == "Perna Direita" and _G.selectedParts.PernaDireita then
            args[1][4] = _G.selectedParts.PernaDireita
            print("Equipando Perna Direita: " .. _G.selectedParts.PernaDireita)
        elseif _G.parteSelecionada == "Perna Esquerda" and _G.selectedParts.PernaEsquerda then
            args[1][5] = _G.selectedParts.PernaEsquerda
            print("Equipando Perna Esquerda: " .. _G.selectedParts.PernaEsquerda)
        elseif _G.parteSelecionada == "Cabe√ßa" and _G.selectedParts.Cabeca then
            args[1][6] = _G.selectedParts.Cabeca
            print("Equipando Cabe√ßa: " .. _G.selectedParts.Cabeca)
        else
            print("Erro: " .. _G.parteSelecionada .. " est√° vazia! Digite um ID primeiro.")
            return
        end
        
        -- Executa o remote
        pcall(function()
            game:GetService("ReplicatedStorage").Remotes.ChangeCharacterBody:InvokeServer(unpack(args))
        end)
    end
})

-- Bot√£o para carregar todas as partes de uma vez
Tab:AddButton({
    Name = "Carregar Todas as Partes",
    Description = "Equipa todas as partes digitadas de uma vez",
    Callback = function()
        -- Verifica se pelo menos uma parte tem ID
        local temAlgumaParteSelecionada = _G.selectedParts.Torso or _G.selectedParts.BracoDireito or 
                                         _G.selectedParts.BracoEsquerdo or _G.selectedParts.PernaDireita or 
                                         _G.selectedParts.PernaEsquerda or _G.selectedParts.Cabeca
        
        if not temAlgumaParteSelecionada then
            print("Erro: Nenhuma parte foi selecionada! Digite pelo menos um ID.")
            return
        end
        
        local args = {
            [1] = {
                [1] = _G.selectedParts.Torso or 0,
                [2] = _G.selectedParts.BracoDireito or 0,
                [3] = _G.selectedParts.BracoEsquerdo or 0,
                [4] = _G.selectedParts.PernaDireita or 0,
                [5] = _G.selectedParts.PernaEsquerda or 0,
                [6] = _G.selectedParts.Cabeca or 0
            }
        }
        
        print("Carregando partes selecionadas:")
        if _G.selectedParts.Torso then print("Tronco: " .. _G.selectedParts.Torso) end
        if _G.selectedParts.BracoDireito then print("Bra√ßo Direito: " .. _G.selectedParts.BracoDireito) end
        if _G.selectedParts.BracoEsquerdo then print("Bra√ßo Esquerdo: " .. _G.selectedParts.BracoEsquerdo) end
        if _G.selectedParts.PernaDireita then print("Perna Direita: " .. _G.selectedParts.PernaDireita) end
        if _G.selectedParts.PernaEsquerda then print("Perna Esquerda: " .. _G.selectedParts.PernaEsquerda) end
        if _G.selectedParts.Cabeca then print("Cabe√ßa: " .. _G.selectedParts.Cabeca) end
        
        pcall(function()
            game:GetService("ReplicatedStorage").Remotes.ChangeCharacterBody:InvokeServer(unpack(args))
        end)
    end
})

Tab:AddSection({ "Outros:" })

-- Bot√£o para Reset Character
Tab:AddButton({
    Name = "Resetar Personagem",
    Description = "Reset completo do personagem",
    Callback = function()
        pcall(function()
            game:GetService("ReplicatedStorage").Remotes.ResetCharacterAppearance:FireServer()
        end)
        print("Personagem resetado completamente!")
    end
})

Tab:AddSection({ "FE:" })

-- Dropdown para escolher a cor do fogo
Tab:AddDropdown({
    Name = "Fire Colors",
    Description = "Select the <font color='rgb(255, 100, 100)'>Fire Color</font>",
    Options = {"White", "Orange", "Green", "Blue", "Purple", "Black"},
    Default = "White",
    Flag = "fire_color_dropdown",
    Callback = function(Value)
        -- Tabela com as cores e seus respectivos IDs e c√≥digos
        local fireColors = {
            ["White"] = {
                id = "18637074370",
                code = "030FireWhite"
            },
            ["Orange"] = {
                id = "18637025451", 
                code = "031FireOrange"
            },
            ["Green"] = {
                id = "18637078598",
                code = "032FireGreen"
            },
            ["Blue"] = {
                id = "18637076370",
                code = "033FireBlue"
            },
            ["Purple"] = {
                id = "18637070174",
                code = "034FirePurple"
            },
            ["Black"] = {
                id = "18637072603",
                code = "035FireBlack"
            }
        }
        
        -- Armazena globalmente a cor selecionada
        _G.selectedColor = Value
        print("Cor selecionada: " .. Value)
    end
})

-- Bot√£o para equipar a cor escolhida
Tab:AddButton({
    Name = "Equip Fire Color",
    Callback = function()
        -- Tabela com as cores e seus respectivos IDs e c√≥digos
        local fireColors = {
            ["White"] = {
                id = "18637074370",
                code = "030FireWhite"
            },
            ["Orange"] = {
                id = "18637025451", 
                code = "031FireOrange"
            },
            ["Green"] = {
                id = "18637078598",
                code = "032FireGreen"
            },
            ["Blue"] = {
                id = "18637076370",
                code = "033FireBlue"
            },
            ["Purple"] = {
                id = "18637070174",
                code = "034FirePurple"
            },
            ["Black"] = {
                id = "18637072603",
                code = "035FireBlack"
            }
        }
        
        local selectedColor = _G.selectedColor or "White"
        
        if selectedColor and fireColors[selectedColor] then
            local colorData = fireColors[selectedColor]
            
            local args = {
                [1] = colorData.id,
                [2] = colorData.code
            }
            
            -- Aplica o emmiter com a cor selecionada
            game:GetService("ReplicatedStorage").Remotes.ApplyEmmiter:InvokeServer(unpack(args))
            
            print("Equipado: " .. selectedColor .. " Fire")
        else
            warn("Erro: Cor n√£o encontrada!")
        end
    end
})

-- Dropdown para escolher a cor do smoke
Tab:AddDropdown({
    Name = "Smoke Colors",
    Description = "Select the <font color='rgb(150, 150, 150)'>Smoke Color</font>",
    Options = {"White", "Yellow", "Orange", "Green", "Blue", "Purple", "Red", "Black"},
    Default = "White",
    Flag = "smoke_color_dropdown",
    Callback = function(Value)
        -- Tabela com as cores de smoke e seus respectivos IDs e c√≥digos
        local smokeColors = {
            ["White"] = {
                id = "18637791748",
                code = "080SmokeWhite"
            },
            ["Yellow"] = {
                id = "18637800482",
                code = "081SmokeYellow"
            },
            ["Orange"] = {
                id = "18637793920",
                code = "082SmokeOrange"
            },
            ["Green"] = {
                id = "18637789299",
                code = "083SmokeGreen"
            },
            ["Blue"] = {
                id = "18637803021",
                code = "084SmokeBlue"
            },
            ["Purple"] = {
                id = "18637813360",
                code = "085SmokePurple"
            },
            ["Red"] = {
                id = "18637796598",
                code = "086SmokeRed"
            },
            ["Black"] = {
                id = "18637798529",
                code = "087SmokeBlack"
            }
        }
        
        -- Armazena globalmente a cor de smoke selecionada
        _G.selectedSmokeColor = Value
        print("Cor de smoke selecionada: " .. Value)
    end
})

-- Bot√£o para equipar a cor de smoke escolhida
Tab:AddButton({
    Name = "Equip Smoke Color",
    Callback = function()
        -- Tabela com as cores de smoke e seus respectivos IDs e c√≥digos
        local smokeColors = {
            ["White"] = {
                id = "18637791748",
                code = "080SmokeWhite"
            },
            ["Yellow"] = {
                id = "18637800482",
                code = "081SmokeYellow"
            },
            ["Orange"] = {
                id = "18637793920",
                code = "082SmokeOrange"
            },
            ["Green"] = {
                id = "18637789299",
                code = "083SmokeGreen"
            },
            ["Blue"] = {
                id = "18637803021",
                code = "084SmokeBlue"
            },
            ["Purple"] = {
                id = "18637813360",
                code = "085SmokePurple"
            },
            ["Red"] = {
                id = "18637796598",
                code = "086SmokeRed"
            },
            ["Black"] = {
                id = "18637798529",
                code = "087SmokeBlack"
            }
        }
        
        local selectedSmokeColor = _G.selectedSmokeColor or "White"
        
        if selectedSmokeColor and smokeColors[selectedSmokeColor] then
            local colorData = smokeColors[selectedSmokeColor]
            
            local args = {
                [1] = colorData.id,
                [2] = colorData.code
            }
            
            -- Aplica o emmiter com a cor de smoke selecionada
            game:GetService("ReplicatedStorage").Remotes.ApplyEmmiter:InvokeServer(unpack(args))
            
            print("Equipado: " .. selectedSmokeColor .. " Smoke")
        else
            warn("Erro: Cor de smoke n√£o encontrada!")
        end
    end
})

-- Toggle para ativar/desativar o corpo personalizado
Tab:AddToggle({
    Name = "Small",
    Description = "",
    Default = false,
    Flag = "custom_body_toggle",
    Callback = function(Value)
        -- Corpo personalizado que ser√° aplicado
        local customBody = {
            [1] = 104157277410075,
            [2] = 86280536086607,
            [3] = 81974054542977,
            [4] = 74524984742501,
            [5] = 122626731952977,
            [6] = 134082579
        }

        -- Fun√ß√£o para aplicar o corpo personalizado
        local function applyCustomBody()
            local args = {
                [1] = customBody
            }
            game:GetService("ReplicatedStorage").Remotes.ChangeCharacterBody:InvokeServer(unpack(args))
        end

        -- Fun√ß√£o para resetar para a apar√™ncia original
        local function resetToOriginalBody()
            game:GetService("ReplicatedStorage").Remotes.ResetCharacterAppearance:FireServer()
        end
        
        if Value then
            -- Ativando corpo personalizado
            applyCustomBody()
            print("Corpo personalizado ativado!")
        else
            -- Desativando corpo personalizado - volta ao original
            resetToOriginalBody()
            print("Corpo resetado para o original!")
        end
    end
})

-- Toggle para ativar/desativar o segundo corpo personalizado
Tab:AddToggle({
    Name = "Giant Avatar",
    Description = "",
    Default = false,
    Flag = "custom_body_v2_toggle",
    Callback = function(Value)
        -- Segundo corpo personalizado que ser√° aplicado
        local customBodyV2 = {
            [1] = 17713016036,
            [2] = 17713016151,
            [3] = 17713015861,
            [4] = 17713021340,
            [5] = 17713016191,
            [6] = 6340213
        }

        -- Fun√ß√£o para aplicar o segundo corpo personalizado
        local function applyCustomBodyV2()
            local args = {
                [1] = customBodyV2
            }
            game:GetService("ReplicatedStorage").Remotes.ChangeCharacterBody:InvokeServer(unpack(args))
        end

        -- Fun√ß√£o para resetar para a apar√™ncia original
        local function resetToOriginalBody()
            game:GetService("ReplicatedStorage").Remotes.ResetCharacterAppearance:FireServer()
        end
        
        if Value then
            -- Ativando segundo corpo personalizado
            applyCustomBodyV2()
            print("Corpo personalizado V2 ativado!")
        else
            -- Desativando corpo personalizado - volta ao original
            resetToOriginalBody()
            print("Corpo resetado para o original!")
        end
    end
})

Tab:AddSection({ "Outros Efeitos (Fire & Smoke)" })

-- Toggle para Loop Smoke Avatar
Tab:AddToggle({
    Name = "Loop Smoke",
    Default = false,
    Callback = function(Value)
        -- Vari√°vel para controlar o loop de smoke
        local isSmokeLoopActive = Value

        if Value then
            -- Inicia o loop quando ativado
            spawn(function()
                while isSmokeLoopActive do
                    local mall = workspace:WaitForChild("WorkspaceCom"):WaitForChild("001_Mall"):WaitForChild("001_Pizza"):FindFirstChild("CatchFire")
                    
                    if mall then
                        local touchInterest = mall:FindFirstChild("TouchInterest")
                        if touchInterest then
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 0)
                            wait()
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 1)
                        end
                    end
                    wait(1)
                end
                print("Loop Smoke Avatar desativado!")
            end)
        else
            print("Parando Loop Smoke Avatar...")
        end
    end
})

-- Toggle para Loop Fire Avatar
Tab:AddToggle({
    Name = "Loop Fire",
    Description = "As Vezes Nao Pega So Pega Se Tiver Casa Com Churrasqueira",
    Default = false,
    Callback = function(Value)
        -- Vari√°vel para controlar o loop de fire
        local isFireLoopActive = Value

        if Value then
            -- Inicia o loop quando ativado
            spawn(function()
                while isFireLoopActive do
                    local playerName = game.Players.LocalPlayer.Name
                    local lotFolder = game:GetService("Workspace"):WaitForChild("001_Lots")
                    local house = lotFolder:FindFirstChild(playerName .. "House")

                    if house then
                        local mall = house:WaitForChild("HousePickedByPlayer"):WaitForChild("HouseModel"):WaitForChild("001_BBQ"):FindFirstChild("CatchFire")
                        if mall then
                            local touchInterest = mall:FindFirstChild("TouchInterest")
                            if touchInterest then
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 0)
                                wait()
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 1)
                            end
                        end
                    else
                        warn("House not found for player: " .. playerName)
                    end
                    wait(1)
                end
                print("Loop Fire Avatar desativado!")
            end)
        else
            print("Parando Loop Fire Avatar...")
        end
    end
})

Tab:AddSection({"Roupas 3D"})

Tab:AddDropdown({
    Name = "Acess√≥rios 3D",
    Description = "Selecione para equipar",
    Default = nil,
    Options = {
        "La Vaca Saturno",
        "brainrot",
        "Galo",
        "Capivara",
        "Tigre",
        "Capivara",
        "Peixe",
        "Pepino Doidao",
        "Gato",
        "Rato",
        "Sei la KKKKOKK",
        "Pato Banana",
        "Fantasma",
        "Gato Lasanha",
        "Arvore",
        "Gato Cupcake",
        "Formiga",
        "KKKKKKKK",
        "Sherek Feiosa",
        "Frango",
        "Pinguin",
        "rato",
        "Minions",
        "Dinossauro",
        "Ovni",
        "Passaro Gordo",
        "Balao Cachorro",
        "Urso Pelucia",
        "Minecraft",
        "Fofuxo",
        "Sapo",
        "Bruxo",
        "Rato Grande",
        "Burro",
        "Nemo",
        "Careca desenho KKKKK",
        "Pinguin Mini",
        "Mini Sherek",
        "Coruja",
        "Gato de Manga",
        "Tung Saur", 
        "Tralaleiro",
        "Monstro S.A",
        "Trenzinho",
        "Dino",
        "Pou idoso",
        "Coco/boxt@",
        "Coelho",
        "Hipop√≥tamo",
        "Ratatui",
        "Galinha",
        "Pepa pig",
        "Pinguin",
        "Sid",
        "Puga grande",
        "SHREK AMALDI√áOADO",
        "Mosquito grande",
        "Noob Invertido",
        "Pato(a)",
        "Cachorro Chihuahua",
        "Gato sla",
        "Gato fei",
        "Inpostor",
        "Simon amarelo",
        "Simon azul"
    },
    Callback = function(selected)
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local StarterGui = game:GetService("StarterGui")
        
        local avatars = {
            -- Novos avatares da lista fornecida
            ["La Vaca Saturno"] = 92598055945546,
            ["brainrot"] = 71509988068185,
            ["Galo"] = 134279966389194,
            ["Capivara"] = 123881270149502,
            ["Tigre"] = 119471161887334,
            ["Capivara"] = 70941023284215,
            ["Peixe"] = 100767254038825,
            ["Pepino Doidao"] = 140311949273388,
            ["Gato"] = 18863879460,
            ["Rato"] = 94426045122131,
            ["Sei la KKKKOKK"] = 130540554592449,
            ["Pato Banana"] = 101283140862013,
            ["Fantasma"] = 15294031319,
            ["Gato Lasanha"] = 80036937359835,
            ["Arvore"] = 91559013873343,
            ["Gato Cupcake"] = 134590778152934,
            ["Formiga"] = 117567910327875,
            ["KKKKKKKK"] = 126610774641341,
            ["Sherek Feiosa"] = 93929184789448,
            ["Frango"] = 12151793832,
            ["Pinguin"] = 94944293759578,
            ["rato"] = 115152504142706,
            ["Minions"] = 80206221835435,
            ["Dinossauro"] = 78418661102501,
            ["Ovni"] = 108699752030063,
            ["Passaro Gordo"] = 17850619237,
            ["Balao Cachorro"] = 87116547256834,
            ["Urso Pelucia"] = 130455255821318,
            ["Minecraft"] = 18161752527,
            ["Fofuxo"] = 13354344881,
            ["Sapo"] = 108623435649969,
            ["Bruxo"] = 18459833677,
            ["Rato Grande"] = 18843948073,
            ["Burro"] = 133145533787450,
            ["Nemo"] = 91530170242128,
            ["Careca desenho KKKKK"] = 114218821771642,
            ["Pinguin Mini"] = 140417314445581,
            ["Mini Sherek"] = 121680981245369,
            ["Coruja"] = 16259522726,
            -- Avatares originais
            ["Gato de Manga"] = 124948425515124,
            ["Tung Saur"] = 117098257036480,
            ["Tralaleiro"] = 99459753608381,
            ["Monstro S.A"] = 123609977175226,
            ["Trenzinho"] = 80468697076178,
            ["Dino"] = 11941741105,
            ["Pou idoso"] = 15742966010,
            ["Coco/boxt@"] = 77013984520332,
            ["Coelho"] = 71797333686800,
            ["Hipop√≥tamo"] = 73215892129281,
            ["Ratatui"] = 108557570415453,
            ["Galinha"] = 71251793812515,
            ["Pepa pig"] = 92979204778377,
            ["Sid"] = 87442757321244,
            ["Puga grande"] = 111436158728716,
            ["SHREK AMALDI√áOADO"] = 120960401202173,
            ["Mosquito grande"] = 108052868536435,
            ["Noob Invertido"] = 106596990206151,
            ["Pato(a)"] = 135132836238349,
            ["Cachorro Chihuahua"] = 18656467256,
            ["Gato sla"] = 18994959003,
            ["Gato fei"] = 77506186615650,
            ["Inpostor"] = 18234669337,
            ["Simon amarelo"] = 75183593514657,
            ["Simon azul"] = 76155710249925
        }
        
        if avatars[selected] then
            pcall(function()
                local args = {avatars[selected]}
                ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Wear"):InvokeServer(unpack(args))
                StarterGui:SetCore("SendNotification", {
                    Title = "Avatar",
                    Text = "Avatar " .. selected .. " equipado!",
                    Duration = 3
                })
            end)
        end
    end
})

Tab:AddSection({"Avatar Editor"})

Tab:AddParagraph({
    Title = "Aviso: Vai resetar seu avatar",
    Content = "Os avatares abaixo ir√£o substituir completamente seu personagem atual."
})

Tab:AddButton({
    Name = "Mini REPO",
    Description = "Avatar mini personalizado",
    Callback = function()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local StarterGui = game:GetService("StarterGui")
        
        pcall(function()
            local parts = {
                117101023704825,
                125767940563838,
                137301494386930,
                87357384184710,
                133391239416999,
                111818794467824
            }
            local args = {parts}
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ChangeCharacterBody"):InvokeServer(unpack(args))
            StarterGui:SetCore("SendNotification", {
                Title = "Avatar",
                Text = "Mini REPO equipado!",
                Duration = 3
            })
        end)
    end
})

Tab:AddButton({
    Name = "Mini Garanh√£o",
    Description = "Avatar mini garanh√£o",
    Callback = function()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local StarterGui = game:GetService("StarterGui")
        
        pcall(function()
            local parts = {
                124355047456535,
                120507500641962,
                82273782655463,
                113625313757230,
                109182039511426,
                0
            }
            local args = {parts}
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ChangeCharacterBody"):InvokeServer(unpack(args))
            StarterGui:SetCore("SendNotification", {
                Title = "Avatar",
                Text = "Mini Garanh√£o equipado!",
                Duration = 3
            })
        end)
    end
})

Tab:AddButton({
    Name = "Stick",
    Description = "Avatar estilo palito",
    Callback = function()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local StarterGui = game:GetService("StarterGui")
        
        pcall(function()
            local parts = {
                14731384498,
                14731377938,
                14731377894,
                14731377875,
                14731377941,
                14731382899
            }
            local args = {parts}
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ChangeCharacterBody"):InvokeServer(unpack(args))
            StarterGui:SetCore("SendNotification", {
                Title = "Avatar",
                Text = "Stick equipado!",
                Duration = 3
            })
        end)
    end
})

Tab:AddButton({
    Name = "Chunky-Bug",
    Description = "Avatar estilo bug",
    Callback = function()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local StarterGui = game:GetService("StarterGui")
        
        pcall(function()
            local parts = {
                15527827600,
                15527827578,
                15527831669,
                15527836067,
                15527827184,
                15527827599
            }
            local args = {parts}
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ChangeCharacterBody"):InvokeServer(unpack(args))
            StarterGui:SetCore("SendNotification", {
                Title = "Avatar",
                Text = "Chunky-Bug equipado!",
                Duration = 3
            })
        end)
    end
})

Tab:AddButton({
    Name = "Cursed-Spider",
    Description = "Avatar aranha amaldi√ßoada",
    Callback = function()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local StarterGui = game:GetService("StarterGui")
        
        pcall(function()
            local parts = {
                134555168634906,
                100269043793774,
                125607053187319,
                122504853343598,
                95907982259204,
                91289185840375
            }
            local args = {parts}
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ChangeCharacterBody"):InvokeServer(unpack(args))
            StarterGui:SetCore("SendNotification", {
                Title = "Avatar",
                Text = "Cursed-Spider equipado!",
                Duration = 3
            })
        end)
    end
})

Tab:AddButton({
    Name = "Possessed-Horror",
    Description = "Avatar horror possu√≠do",
    Callback = function()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local StarterGui = game:GetService("StarterGui")
        
        pcall(function()
            local parts = {
                122800511983371,
                132465361516275,
                125155800236527,
                83070163355072,
                102906187256945,
                78311422507297
            }
            local args = {parts}
            ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ChangeCharacterBody"):InvokeServer(unpack(args))
            StarterGui:SetCore("SendNotification", {
                Title = "Avatar",
                Text = "Possessed-Horror equipado!",
                Duration = 3
            })
        end)
    end
})

Tab:AddSection({"Utilit√°rios"})

Tab:AddButton({
    Name = "Resetar Avatar",
    Description = "Volta ao avatar padr√£o do Roblox",
    Callback = function()
        local Players = game:GetService("Players")
        local StarterGui = game:GetService("StarterGui")
        local player = Players.LocalPlayer
        
        pcall(function()
            if player and player.Character and player.Character:FindFirstChild("Humanoid") then
                player.Character.Humanoid.Health = 0
                StarterGui:SetCore("SendNotification", {
                    Title = "Avatar",
                    Text = "Avatar resetado!",
                    Duration = 3
                })
            end
        end)
    end
})

-- Definir cores para o efeito RGB
local colors = {
    Color3.new(1, 0, 0),       -- Vermelho
    Color3.new(0, 1, 0),       -- Verde
    Color3.new(0, 0, 1),       -- Azul
    Color3.new(1, 1, 0),       -- Amarelo
    Color3.new(0, 1, 1),       -- Ciano
    Color3.new(1, 0, 1)        -- Magenta
}

-- Vari√°vel para controlar o estado do toggle House RGB
local isHouseRGBActive = false

-- Fun√ß√£o para alterar a cor da casa
local function changeColor()
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local remoteEvent = replicatedStorage:FindFirstChild("RE") and replicatedStorage.RE:FindFirstChild("1Player1sHous1e")
    
    if not remoteEvent then
        warn("RemoteEvent '1Player1sHous1e' n√£o encontrado.")
        return
    end

    while isHouseRGBActive do
        for _, color in ipairs(colors) do
            if not isHouseRGBActive then return end
            local args = {
                [1] = "ColorPickHouse",
                [2] = color
            }
            pcall(function()
                remoteEvent:FireServer(unpack(args))
            end)
            task.wait(0.8)
        end
    end
end

local function toggleHouseRGB(state)
    isHouseRGBActive = state
    if isHouseRGBActive then
        print("House RGB Activated")
        spawn(changeColor)
    else
        print("House RGB Deactivated")
    end
end

-- Vari√°veis globais
local isUnbanActive = false
local HouseTab = Window:MakeTab({"Casas", "home"})
local SelectHouse = nil
local NoclipDoor = nil

-- Fun√ß√£o para obter lista de casas
local function getHouseList()
    local Tabela = {}
    local lots = workspace:FindFirstChild("001_Lots")
    if lots then
        for _, House in ipairs(lots:GetChildren()) do
            if House.Name ~= "For Sale" and House:IsA("Model") then
                table.insert(Tabela, House.Name)
            end
        end
    end
    return Tabela
end

-- Dropdown para selecionar casas
pcall(function()
    HouseTab:AddDropdown({
        Name = "Selecione a Casa",
        Options = getHouseList(),
        Default = "...",
        Callback = function(Value)
            SelectHouse = Value
            if NoclipDoor then
                NoclipDoor:Set(false)
            end
            print("Casa selecionada: " .. tostring(Value))
        end
    })
end)

-- Fun√ß√£o para atualizar a lista de casas
local function DropdownHouseUpdate()
    local Tabela = getHouseList()
    print("DropdownHouseUpdate called. Houses found:", #Tabela)
    pcall(function()
        HouseTab:ClearDropdown("Selecione a Casa") -- Tentar limpar dropdown, se suportado
        HouseTab:AddDropdown({
            Name = "Selecione a Casa",
            Options = Tabela,
            Default = "...",
            Callback = function(Value)
                SelectHouse = Value
                if NoclipDoor then
                    NoclipDoor:Set(false)
                end
            end
        })
    end)
end

-- Inicializar dropdown
pcall(DropdownHouseUpdate)

-- Bot√£o para atualizar lista de casas
pcall(function()
    HouseTab:AddButton({
        Name = "Atualizar Lista de Casas",
        Callback = function()
            print("Atualizar Lista de Casas button clicked.")
            pcall(DropdownHouseUpdate)
        end
    })
end)

-- Bot√£o para teleportar para casa
pcall(function()
    HouseTab:AddButton({
        Name = "Teleportar para Casa",
        Callback = function()
            local House = workspace["001_Lots"]:FindFirstChild(tostring(SelectHouse))
            if House and game.Players.LocalPlayer.Character then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(House.WorldPivot.Position)
            else
                print("Casa n√£o encontrada: " .. tostring(SelectHouse))
            end
        end
    })
end)

-- Bot√£o para teleportar para cofre
pcall(function()
    HouseTab:AddButton({
        Name = "Teleportar para Cofre",
        Callback = function()
            local House = workspace["001_Lots"]:FindFirstChild(tostring(SelectHouse))
            if House and House:FindFirstChild("HousePickedByPlayer") and game.Players.LocalPlayer.Character then
                local safe = House.HousePickedByPlayer.HouseModel:FindFirstChild("001_Safe")
                if safe then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(safe.WorldPivot.Position)
                else
                    print("Cofre n√£o encontrado na casa: " .. tostring(SelectHouse))
                end
            else
                print("Casa n√£o encontrada: " .. tostring(SelectHouse))
            end
        end
    })
end)

-- Toggle para atravessar porta
pcall(function()
    NoclipDoor = HouseTab:AddToggle({
        Name = "Atravessar Porta da Casa",
        Description = "",
        Default = false,
        Callback = function(Value)
            pcall(function()
                local House = workspace["001_Lots"]:FindFirstChild(tostring(SelectHouse))
                if House and House:FindFirstChild("HousePickedByPlayer") then
                    local housepickedbyplayer = House.HousePickedByPlayer
                    local doors = housepickedbyplayer.HouseModel:FindFirstChild("001_HouseDoors")
                    if doors and doors:FindFirstChild("HouseDoorFront") then
                        for _, Base in ipairs(doors.HouseDoorFront:GetChildren()) do
                            if Base:IsA("BasePart") then
                                Base.CanCollide = not Value
                            end
                        end
                    end
                end
            end)
        end
    })
end)

-- Toggle para tocar campainha
pcall(function()
    HouseTab:AddToggle({
        Name = "Tocar Campainha",
        Description = "",
        Default = false,
        Callback = function(Value)
            getgenv().ChaosHubAutoSpawnDoorbellValue = Value
            spawn(function()
                while getgenv().ChaosHubAutoSpawnDoorbellValue do
                    local House = workspace["001_Lots"]:FindFirstChild(tostring(SelectHouse))
                    if House and House:FindFirstChild("HousePickedByPlayer") then
                        local doorbell = House.HousePickedByPlayer.HouseModel:FindFirstChild("001_DoorBell")
                        if doorbell and doorbell:FindFirstChild("TouchBell") then
                            pcall(function()
                                fireclickdetector(doorbell.TouchBell.ClickDetector)
                            end)
                        end
                    end
                    task.wait(0.5)
                end
            end)
        end
    })
end)

-- Toggle para bater na porta
pcall(function()
    HouseTab:AddToggle({
        Name = "Bater na Porta",
        Description = "",
        Default = false,
        Callback = function(Value)
            getgenv().ChaosHubAutoSpawnDoorValue = Value
            spawn(function()
                while getgenv().ChaosHubAutoSpawnDoorValue do
                    local House = workspace["001_Lots"]:FindFirstChild(tostring(SelectHouse))
                    if House and House:FindFirstChild("HousePickedByPlayer") then
                        local doors = House.HousePickedByPlayer.HouseModel:FindFirstChild("001_HouseDoors")
                        if doors and doors:FindFirstChild("HouseDoorFront") and doors.HouseDoorFront:FindFirstChild("Knock") then
                            pcall(function()
                                fireclickdetector(doors.HouseDoorFront.Knock.TouchBell.ClickDetector)
                            end)
                        end
                    end
                    task.wait(0.5)
                end
            end)
        end
    })
end)
pcall(function()
    HouseTab:AddSection({ Name = "Teleporte Para Casas" })
end)

-- Lista de casas para teletransporte
local casas = {
    ["Casa 1"] = Vector3.new(260.29, 4.37, 209.32),
    ["Casa 2"] = Vector3.new(234.49, 4.37, 228.00),
    ["Casa 3"] = Vector3.new(262.79, 21.37, 210.84),
    ["Casa 4"] = Vector3.new(229.60, 21.37, 225.40),
    ["Casa 5"] = Vector3.new(173.44, 21.37, 228.11),
    ["Casa 6"] = Vector3.new(-43, 21, -137),
    ["Casa 7"] = Vector3.new(-40, 36, -137),
    ["Casa 11"] = Vector3.new(-21, 40, 436),
    ["Casa 12"] = Vector3.new(155, 37, 433),
    ["Casa 13"] = Vector3.new(255, 35, 431),
    ["Casa 14"] = Vector3.new(254, 38, 394),
    ["Casa 15"] = Vector3.new(148, 39, 387),
    ["Casa 16"] = Vector3.new(-17, 42, 395),
    ["Casa 17"] = Vector3.new(-189, 37, -247),
    ["Casa 18"] = Vector3.new(-354, 37, -244),
    ["Casa 19"] = Vector3.new(-456, 36, -245),
    ["Casa 20"] = Vector3.new(-453, 38, -295),
    ["Casa 21"] = Vector3.new(-356, 38, -294),
    ["Casa 22"] = Vector3.new(-187, 37, -295),
    ["Casa 23"] = Vector3.new(-410, 68, -447),
    ["Casa 24"] = Vector3.new(-348, 69, -496),
    ["Casa 28"] = Vector3.new(-103, 12, 1087),
    ["Casa 29"] = Vector3.new(-730, 6, 808),
    ["Casa 30"] = Vector3.new(-245, 7, 822),
    ["Casa 31"] = Vector3.new(639, 76, -361),
    ["Casa 32"] = Vector3.new(-908, 6, -361),
    ["Casa 33"] = Vector3.new(-111, 70, -417),
    ["Casa 34"] = Vector3.new(230, 38, 569),
    ["Casa 35"] = Vector3.new(-30, 13, 2209)
}

-- Criar lista de nomes de casas ordenada
local casasNomes = {}
for nome, _ in pairs(casas) do
    table.insert(casasNomes, nome)
end

table.sort(casasNomes, function(a, b)
    local numA = tonumber(a:match("%d+")) or 0
    local numB = tonumber(b:match("%d+")) or 0
    return numA < numB
end)

-- Dropdown para teletransporte
pcall(function()
    HouseTab:AddDropdown({
        Name = "Selecionar Casa",
        Options = casasNomes,
        Callback = function(casaSelecionada)
            local player = game.Players.LocalPlayer
            if player and player.Character then
                player.Character.HumanoidRootPart.CFrame = CFrame.new(casas[casaSelecionada])
            end
        end
    })
end)

-- Label ap√≥s dropdown
pcall(function()
    HouseTab:AddLabel("Teleporte para a Casa que Quiser")
end)

-- Se√ß√£o para Auto Unban
pcall(function()
    HouseTab:AddSection({ Name = "Auto Unban" })
end)

HouseTab:AddButton({
    Name = "Remover Ban De Todas Casas",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ShadowsHubseila/Unban-house/refs/heads/main/Unban"))()
    end
})

-- Label ap√≥s Auto Unban
pcall(function()
    HouseTab:AddLabel("Te desbane automaticamente das Casas")
end)

-- Se√ß√£o para Casa RGB
pcall(function()
    HouseTab:AddSection({ Name = "Casa RGB" })
end)

-- Toggle para Casa RGB
pcall(function()
    HouseTab:AddToggle({
        Name = "Casa RGB",
        Default = false,
        Callback = function(state)
            toggleHouseRGB(state)
        end
    })
end)

-- Label ap√≥s Casa RGB
pcall(function()
    HouseTab:AddLabel("Deixa a sua casa RGB")
end)

-- Fun√ß√£o para Auto Unban
function startAutoUnban()
    while isUnbanActive do
        pcall(function()
            for _, v in pairs(game:GetService("Workspace"):WaitForChild("001_Lots"):GetDescendants()) do
                if v.Name:match("^BannedBlock%d+$") then
                    v:Destroy()
                end
            end
        end)
        task.wait(1)
    end
end

local Tab = Window:MakeTab({"Audio All", "music"})

-- Create a section
Tab:AddSection({"Audio Todos os Players"})

local audios = {
    {Name = "Yamete Kudasai", ID = 108494476595033},
    {Name = "Gritinho", ID = 5710016194},
    {Name = "Jumpscare Horroroso", ID = 85435253347146},
    {Name = "√Åudio Alto", ID = 6855150757},
    {Name = "Ru√≠do", ID = 120034877160791},
    {Name = "Jumpscare 2", ID = 110637995610528},
    {Name = "Risada Da Bruxa Minecraft", ID = 116214940486087},
    {Name = "The Boiled One", ID = 137177653817621},
    {Name = "Deitei Um Ave Maria Doido", ID = 128669424001766},
    {Name = "Mandrake Detected", ID = 9068077052},
    {Name = "Aaaaaaaaa", ID = 80156405968805},
    {Name = "AAAHHHH", ID = 9084006093},
    {Name = "amongus", ID = 6651571134},
    {Name = "Sus", ID = 6701126635},
    {Name = "Gritao AAAAAAAAA", ID = 5853668794},
    {Name = "UHHHHH COFFCOFF", ID = 7056720271},
    {Name = "SUS", ID = 7153419575},
    {Name = "Sonic.exe", ID = 2496367477},
    {Name = "Tubers93 1", ID = 270145703},
    {Name = "Tubers93 2", ID = 18131809532},
    {Name = "John's Laugh", ID = 130759239},
    {Name = "Nao sei KKKK", ID = 6549021381},
    {Name = "Grito", ID = 80156405968805},
    {Name = "audio estranho", ID = 7705506391},
    {Name = "AAAH", ID = 7772283448},
    {Name = "Gay, gay", ID = 18786647417},
    {Name = "Bat Hit", ID = 7129073354},
    {Name = "Nuclear Siren", ID = 675587093},
    {Name = "Sem ideia de nome KK", ID = 7520729342},
    {Name = "Grito 2", ID = 91412024101709},
    {Name = "Estora t√≠mpano", ID = 268116333},
    {Name = "[ Content Deleted ]", ID = 106835463235574},
    {Name = "Toma Jack", ID = 132603645477541},
    {Name = "Pede ifood pede", ID = 133843750864059},
    {Name = "I Ghost The down", ID = 84663543883498},
    {Name = "Compre OnLine Na shoope", ID = 8747441609},
    {Name = "Uh Que Nojo", ID = 103440368630269},
    {Name = "Sai dai Lava Prato", ID = 101232400175829},
    {Name = "Seloko num compensa", ID = 78442476709262},
    {Name = "(NEW) Chimpanzini Bananini Funk", ID = 137148228908678},
    {Name = "(NEW) Candyland - Tobu", ID = 118939739460633},
    {Name = "(NEW) Meme do Dom pollo What the hell", ID = 100656590080703},
    {Name = "(NEW) n√£o to entendendo nd meme estourado", ID = 7962533987},
    {Name = "pankapakan", ID = 122547522269143},
    {Name = "Gemido ultra r√°pido", ID = 128863565301778},
    {Name = "vai g0z@?", ID = 116293771329297},
    {Name = "G0z33iiii", ID = 93462644278510},
    {Name = "Hommmm ", ID = 133135656929513},
    {Name = "gemido1", ID = 105263704862377},
    {Name = " gemido2", ID = 92186909873950},
    {Name = "sus sex", ID = 128137573022197},
    {Name = "gemido estranho", ID = 131219411501419},
    {Name = "gemido kawai", ID = 100409245129170},
    {Name = "Hentai wiaaaaan", ID = 88332347208779},
    {Name = "iamete cunasai", ID = 108494476595033},
    {Name = "dodichan onnn...", ID = 134640594695384},
    {Name = "Loly gemiD0", ID = 119277017538197},
    {Name = "ai poison", ID = 115870718113313},
    {Name = "chegachega SUS", ID = 77405864184828},
    {Name = "uwu", ID = 76820720070248},
    {Name = "ai meu cuzin", ID = 130714479795369},
    {Name = "girl audio 2", ID = 84207358477461},
    {Name = "Hoo ze da manga", ID = 106624090319571},
    {Name = "ai alexandre de moraes", ID = 107261471941570},
    {Name = "haaii meme", ID = 120006672159037},
    {Name = "GoGogo gogogo", ID = 103262503950995},
    {Name = "Toma jack", ID = 132603645477541},
    {Name = "Toma jackV2", ID = 100446887985203},
    {Name = "Toma jack no sol quente", ID = 97476487963273},
    {Name = "ifood", ID = 133843750864059},
    {Name = "pelo geito ela ta querendo ram", ID = 94395705857835},
    {Name = "lula vai todo mundo", ID = 136804576009416},
    {Name = "coringa", ID = 84663543883498},
    {Name = "shoope", ID = 8747441609},
    {Name = "quenojo", ID = 103440368630269},
    {Name = "sai dai lava prato", ID = 101232400175829},
    {Name = "se e loko numconpe√ßa", ID = 78442476709262},
    {Name = "mita sequer que eu too uma", ID = 94889439372168},
    {Name = "Hoje vou ser tua mulher e tu", ID = 90844637105538},
    {Name = "Deita aqui eu mandei vc deitar sirens", ID = 100291188941582},
    {Name = "miau", ID = 131804436682424},
    {Name = "skibidi", ID = 128771670035179},
    {Name = "BIRULEIBI", ID = 121569761604968},
    {Name = "biseabesjnjkasnakjsndjkafb", ID = 133106998846260},
    {Name = "vai corinthians!!....", ID = 127012936767471},
    {Name = "my sigman", ID = 103431815659907},
    {Name = "mama", ID = 106850066985594},
    {Name = "OH MY GOD", ID = 73349649774476},
    {Name = "aahhh plankton meme", ID = 95982351322190},
    {Name = "CHINABOY", ID = 84403553163931},
    {Name = "PASTOR MIRIM E A L√çNGUA DOS ANJOS", ID = 71153532555470},
    {Name = "Sai d3sgra√ß@", ID = 106973692977609},
    {Name = "opa salve tudo bem?", ID = 80870678096428},
    {Name = "OLHA O CARRO DO DANONE", ID = 110493863773948},
    {Name = "N√£oooo, N√£oooo, N√£ooo!!!!!", ID = 95825536480898},
    {Name = "UM P√â DE SIRIGUELA KK", ID = 112804043442210},
    {Name = "e o carro da pamonha", ID = 94951629392683},
    {Name = "BOM DIAAAAAAAAAA", ID = 136579844511260},
    {Name = "ai-meu-chiclete", ID = 92911732806153},
    {Name = "posso te ligar ou tua mulher...", ID = 103211341252816},
    {Name = "Boa chi joga muito cara", ID = 110707564387669},
    {Name = "Oqueee meme", ID = 120092799810101},
    {Name = "kkk muito fei", ID = 79241074803021},
    {Name = "lula cade o ze gotinha", ID = 86012585992725},
    {Name = "morreu", ID = 8872409975},
    {Name = "a-pia-ta-cheia-de-louca", ID = 98076927129047},
    {Name = "Mahito killSong", ID = 128669424001766},
    {Name = "Sucumba", ID = 7946300950},
    {Name = "nem clicou o thurzin", ID = 84428355313544},
    {Name = "fiui OLHA MENSAGEM", ID = 121668429878811},
    {Name = "tooomeee", ID = 128319664118768},
    {Name = "risada de ladrao", ID = 133065882609605},
    {Name = "E o PIX nada ainda", ID = 113831443375212},
    {Name = "Vo nada vo nada", ID = 89093085290586},
    {Name = "Eli gosta", ID = 105012436535315},
    {Name = "um cavalo de tres pernas?", ID = 8164241439},
    {Name = "voces sao um bado de fdp", ID = 8232773326},
    {Name = "HAHA TROLLEI AT√â VOC√ä", ID = 7021794555},
    {Name = "Calaboca Kenga", ID = 86494561679259},
    {Name = "alvincut", ID = 88788640194373},
    {Name = "e a risada faz como?", ID = 140713372459057},
    {Name = "voce deve se m@t4", ID = 100227426848009},
    {Name = "receba", ID = 94142662616215},
    {Name = "UUIIII", ID = 73210569653520},
    {Name = "sai", ID = 121169949217007},
    {Name = "risada boa dms", ID = 127589011971759},
    {Name = "vacilo perna de pau", ID = 106809680656199},
    {Name = "gomo gomo no!!!", ID = 137067472449625},
    {Name = "arroto", ID = 140203378050178},
    {Name = "iraaaa", ID = 136752451575091},
    {Name = "n√£o fica se achando muito n√£o", ID = 101588606280167},
    {Name = "WhatsApp notifica√ßaoV1", ID = 107004225739474},
    {Name = "WhatsApp notifica√ßaoV2", ID = 18850631582},
    {Name = "SamsungV1", ID = 123767635061073},
    {Name = "SamsungV2", ID = 96579234730244},
    {Name = "Shiiii", ID = 120566727202986},
    {Name = "ai_tomaa miku", ID = 139770074770361},
    {Name = "Miku Miku", ID = 72812231495047},
    {Name = "kuru_kuru", ID = 122465710753374},
    {Name = "PM ROCAM", ID = 96161547081609},
    {Name = "cavalo!!", ID = 78871573440184},
    {Name = "deixa os garoto brinca", ID = 80291355054807},
    {Name = "flamengo", ID = 137774355552052},
    {Name = "sai do mei satnas", ID = 127944706557246},
    {Name = "namoral agora e a hora", ID = 120677947987369},
    {Name = "n pode me chutar pq seu celebro e burro", ID = 82284055473737},
    {Name = "vc ta fudido vou te pegar", ID = 120214772725166},
    {Name = "deley", ID = 102906880476838},
    {Name = "Tu e um beta", ID = 130233956349541},
    {Name = "Porfavor n tira eu nao", ID = 85321374020324},
    {Name = "Ol√° beleza vc pode me d√° muitos", ID = 74235334504693},
    {Name = "Discord sus", ID = 122662798976905},
    {Name = "rojao apito", ID = 6549021381},
    {Name = "off", ID = 1778829098},
    {Name = "Kazuma kazuma", ID = 127954653962405},
    {Name = "sometourado", ID = 123592956882621},
    {Name = "Estouradoespad", ID = 136179020015211},
    {Name = "Alaku bommm", ID = 110796593805268},
    {Name = "busss", ID = 139841197791567},
    {Name = "Estourado wItb", ID = 137478052262430},
    {Name = "sla", ID = 116672405522828},
    {Name = "HA HA HA", ID = 138236682866721}
}

local selectedAudioID

-- Adicionar uma textbox para inserir o ID do √°udio
Tab:AddTextBox({
    Name = "Insira o ID do √Åudio ou Musica",
    Description = "Digite o ID do √°udio",
    PlaceholderText = "ID do √°udio",
    Callback = function(value)
        selectedAudioID = tonumber(value)
    end
})

-- Adicionar uma dropdown para selecionar o √°udio
local audioNames = {}
for _, audio in ipairs(audios) do
    table.insert(audioNames, audio.Name)
end

Tab:AddDropdown({
    Name = "Selecione o √Åudio",
    Description = "Escolha um √°udio da lista",
    Options = audioNames,
    Default = audioNames[1],
    Flag = "selected_audio",
    Callback = function(value)
        for _, audio in ipairs(audios) do
            if audio.Name == value then
                selectedAudioID = audio.ID
                break
            end
        end
    end
})

-- Controle do loop
local audioLoop = false

-- Nova se√ß√£o para loop de √°udio
Tab:AddSection({"Loop de Audio"})

-- Fun√ß√£o para tocar o √°udio repetidamente
local function playLoopedAudio()
    while audioLoop do
        if selectedAudioID then
            local args = {
                [1] = game:GetService("Workspace"),
                [2] = selectedAudioID,
                [3] = 1,
            }
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))

            -- Criar e tocar o √°udio
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://" .. selectedAudioID
            sound.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
            sound:Play()
        else
            warn("Nenhum √°udio selecionado!")
        end

        task.wait(0.5) -- Pequeno delay para evitar sobrecarga
    end
end

-- Toggle para loop de √°udio
Tab:AddToggle({
    Name = "Loop Tocar √Åudio",
    Description = "Ativa o loop do √°udio",
    Default = false,
    Flag = "audio_loop",
    Callback = function(value)
        audioLoop = value
        if audioLoop then
            task.spawn(playLoopedAudio) -- Inicia o loop em uma nova thread
        end
    end
})

-- Adicionar um par√°grafo como label
Tab:AddParagraph({"Info", "Loop de tocar √Åudio (Todos players do Server ouvem)"})

-- Fun√ß√£o para tocar o √°udio normal
local function playAudio()
    if selectedAudioID then
        local args = {
            [1] = game:GetService("Workspace"),
            [2] = selectedAudioID,
            [3] = 1,
        }
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gu1nSound1s"):FireServer(unpack(args))

        -- Criar e tocar o √°udio
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://" .. selectedAudioID
        sound.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
        sound:Play()
    else
        warn("Nenhum √°udio selecionado!")
    end
end

-- Nova se√ß√£o para tocar √°udio
Tab:AddSection({"Tocar √Åudio"})

-- Bot√£o para tocar o √°udio
Tab:AddButton({"Tocar √Åudio", function()
    playAudio()
end})

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local audioID = 6314880174 -- ID fixo do √°udio

local function Audio_All_ClientSide(ID)
    local function CheckFolderAudioAll()
        local FolderAudio = workspace:FindFirstChild("Audio all client")
        if not FolderAudio then
            FolderAudio = Instance.new("Folder")
            FolderAudio.Name = "Audio all client"
            FolderAudio.Parent = workspace
        end
        return FolderAudio
    end

    local function CreateSound(ID)
        if type(ID) ~= "number" then
            print("Insira um n√∫mero v√°lido!")
            return nil
        end

        local Folder_Audio = CheckFolderAudioAll()
        if Folder_Audio then
            local Sound = Instance.new("Sound")
            Sound.SoundId = "rbxassetid://" .. ID
            Sound.Volume = 1
            Sound.Looped = false
            Sound.Parent = Folder_Audio
            Sound:Play()
            task.wait(1) -- Tempo de espera antes de remover o som
            Sound:Destroy()
        end
    end

    CreateSound(ID)
end

local function Audio_All_ServerSide(ID)
    if type(ID) ~= "number" then
        print("Insira um n√∫mero v√°lido!")
        return nil
    end

    local GunSoundEvent = ReplicatedStorage:FindFirstChild("1Gu1nSound1s", true)
    if GunSoundEvent then
        GunSoundEvent:FireServer(workspace, ID, 1)
    end
end

-- Toggle para "Estorar ouvido de geral"
Tab:AddToggle({
    Name = "Estorar ouvido de geral KK",
    Description = "Toca √°udio repetidamente para todos",
    Default = false,
    Flag = "audio_spam",
    Callback = function(value)
        getgenv().Audio_All_loop_fast = value

        while getgenv().Audio_All_loop_fast do
            Audio_All_ServerSide(audioID)
            task.spawn(function()
                Audio_All_ClientSide(audioID)
            end)
            task.wait(0.03) -- Delay extremamente r√°pido (0.03 segundos)
        end
    end
})

Tab:AddParagraph({"Info", "Todos do server ouvem o √°udio"})


local Tab = Window:MakeTab({"Lag Server", "bomb"})


-- Shutdown Custom Section
local Section = Tab:AddSection({
    Name = "Lag Player"
})

Tab:AddButton({
    Name = "Lag Player Laptop",
    Description = "Multiplica laptops ultra r√°pido e teleporta no alvo sem lag",
    Callback = function()
        local Players = game:GetService("Players")
        local StarterGui = game:GetService("StarterGui")
        local localPlayer = Players.LocalPlayer
        local RunService = game:GetService("RunService")

        -- Vari√°veis globais
        _G.quantidadeLaptops = _G.quantidadeLaptops or 100
        _G.targetPlayer = _G.targetPlayer or nil
        _G.sistemaAtivo = _G.sistemaAtivo or false
        _G.loopConnection = _G.loopConnection or nil

        -- Fun√ß√£o para contar laptops (otimizada)
        local function contarLaptops()
            local total = 0
            -- Verificar backpack
            local backpackTools = localPlayer.Backpack:GetChildren()
            for i = 1, #backpackTools do
                if backpackTools[i]:IsA("Tool") and backpackTools[i].Name == "Laptop" then
                    total += 1
                end
            end
            -- Verificar character
            if localPlayer.Character then
                local charTools = localPlayer.Character:GetChildren()
                for i = 1, #charTools do
                    if charTools[i]:IsA("Tool") and charTools[i].Name == "Laptop" then
                        total += 1
                    end
                end
            end
            return total
        end

        -- TextBox Quantidade de Laptops
        Tab:AddTextBox({
            Name = "Quantidade de Laptops",
            Description = "Digite quantos laptops multiplicar",
            PlaceholderText = "Ex: 100",
            Callback = function(Value)
                local num = tonumber(Value)
                if num and num > 0 then
                    _G.quantidadeLaptops = num
                    StarterGui:SetCore("SendNotification", {
                        Title = "Quantidade",
                        Text = "Definido: "..num.." laptops",
                        Duration = 3
                    })
                end
            end
        })

        -- TextBox Nome do Jogador
        Tab:AddTextBox({
            Name = "Nome do Jogador",
            Description = "Digite nome do jogador para Lag",
            PlaceholderText = "NomeJogador",
            Callback = function(Value)
                if Value ~= "" then
                    local playersList = Players:GetPlayers()
                    for i = 1, #playersList do
                        local player = playersList[i]
                        if string.find(player.Name:lower(), Value:lower()) or 
                           string.find(player.DisplayName:lower(), Value:lower()) then
                            _G.targetPlayer = player
                            StarterGui:SetCore("SendNotification", {
                                Title = "Alvo",
                                Text = "Definido: "..player.Name,
                                Duration = 3
                            })
                            return
                        end
                    end
                    StarterGui:SetCore("SendNotification", {
                        Title = " Erro",
                        Text = "Jogador n√£o encontrado!",
                        Duration = 3
                    })
                end
            end
        })

        -- Bot√£o para Limpar Invent√°rio
        Tab:AddButton({
            Name = "Limpar Todos os Laptops",
            Description = "Remove todos os laptops do invent√°rio",
            Callback = function()
                local laptopsRemovidos = 0
                
                -- Limpar backpack
                local backpackTools = localPlayer.Backpack:GetChildren()
                for i = 1, #backpackTools do
                    if backpackTools[i]:IsA("Tool") and backpackTools[i].Name == "Laptop" then
                        backpackTools[i]:Destroy()
                        laptopsRemovidos += 1
                    end
                end
                
                -- Limpar character
                if localPlayer.Character then
                    local charTools = localPlayer.Character:GetChildren()
                    for i = 1, #charTools do
                        if charTools[i]:IsA("Tool") and charTools[i].Name == "Laptop" then
                            charTools[i]:Destroy()
                            laptopsRemovidos += 1
                        end
                    end
                end
                
                StarterGui:SetCore("SendNotification", {
                    Title = "Limpeza",
                    Text = laptopsRemovidos.." laptops removidos!",
                    Duration = 3
                })
            end
        })

        -- Toggle Principal
        Tab:AddToggle({
            Name = "Ativar Sistema",
            Default = false,
            Callback = function(Value)
                _G.sistemaAtivo = Value
                
                -- Parar loop anterior se existir
                if _G.loopConnection then
                    _G.loopConnection:Disconnect()
                    _G.loopConnection = nil
                end

                if Value then
                    if not _G.targetPlayer then
                        StarterGui:SetCore("SendNotification", {
                            Title = " Erro",
                            Text = "Defina um jogador primeiro!",
                            Duration = 3
                        })
                        _G.sistemaAtivo = false
                        return
                    end

                    StarterGui:SetCore("SendNotification", {
                        Title = "iniciado",
                        Text = "Multiplicando laptops...",
                        Duration = 3
                    })

                    local laptop = workspace.WorkspaceCom["001_GiveTools"].Laptop
                    local clickDetector = laptop:FindFirstChildWhichIsA("ClickDetector")
                    local faseMultiplicacao = true

                    -- Usar RunService para melhor performance
                    _G.loopConnection = RunService.Heartbeat:Connect(function()
                        if not _G.sistemaAtivo then return end
                        
                        if faseMultiplicacao then
                            -- FASE 1: MULTIPLICAR LAPTOPS
                            local totalLaptops = contarLaptops()
                            
                            if totalLaptops >= _G.quantidadeLaptops then
                                faseMultiplicacao = false
                                StarterGui:SetCore("SendNotification", {
                                    Title = "Completo",
                                    Text = "Multiplica√ß√£o completa! Iniciando Lag. ..",
                                    Duration = 3
                                })
                                return
                            end

                            -- Teleportar e clicar
                            if localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
                                localPlayer.Character.HumanoidRootPart.CFrame = laptop.CFrame + Vector3.new(0, 2, 0)
                                
                                -- Clicar 2000 vezes mais r√°pido (usando m√∫ltiplos spawns)
                                for i = 1, 2000 do
                                    task.spawn(function()
                                        if clickDetector then
                                            fireclickdetector(clickDetector)
                                        end
                                    end)
                                end
                            end
                        else
                            -- FASE 2: LOOP TP NO JOGADOR
                            if _G.targetPlayer and _G.targetPlayer.Character and 
                               _G.targetPlayer.Character:FindFirstChild("HumanoidRootPart") and
                               localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
                                
                                local targetPos = _G.targetPlayer.Character.HumanoidRootPart.Position
                                localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(
                                    targetPos.X,
                                    targetPos.Y + 3,
                                    targetPos.Z
                                )
                                localPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
                            end
                        end
                    end)

                else
                    StarterGui:SetCore("SendNotification", {
                        Title = "Parado",
                        Text = "Sistema desativado",
                        Duration = 3
                    })
                end
            end
        })
    end
})


local runLag = false
local lagCoroutine

Tab:AddToggle({
    Name = "Lag com √înibus",
    Default = false,
    Callback = function(Value)
        runLag = Value

        if runLag then
            local Players = game:GetService("Players")  
            local ReplicatedStorage = game:GetService("ReplicatedStorage")  
            local LocalPlayer = Players.LocalPlayer  

            if not LocalPlayer then  
                warn("LocalPlayer n√£o encontrado.")  
                return  
            end  

            local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()  
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart", 5)  
            if not humanoidRootPart then  
                warn("HumanoidRootPart n√£o encontrado.")  
                return  
            end  

            local function GetBus()  
                local vehicles = workspace:FindFirstChild("Vehicles")  
                if vehicles then  
                    return vehicles:FindFirstChild(LocalPlayer.Name .. "Car")  
                end  
                return nil  
            end  

            local remoteEvent = ReplicatedStorage:FindFirstChild("RE")  
            if not remoteEvent then  
                warn("RemoteEvent 'RE' n√£o encontrado em ReplicatedStorage.")  
                return  
            end  

            if not remoteEvent:FindFirstChild("1Ca1r") then  
                warn("Evento filho '1Ca1r' n√£o encontrado dentro de 'RE'.")  
                return  
            end  

            lagCoroutine = coroutine.wrap(function()  
                while runLag do  
                    local success, err = pcall(function()  
                        humanoidRootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)  
                        local bus = GetBus()  
                        remoteEvent["1Ca1r"]:FireServer("PickingCar", "SchoolBus")  
                    end)  

                    if not success then  
                        warn("Erro ao executar lag loop: " .. tostring(err))  
                        runLag = false  
                        break  
                    end  

                    task.wait(0)
                end  
            end)  
            lagCoroutine()
        end
    end
})

-- Lag Laptop Section
local Section = Tab:AddSection({
    Name = "Lag com Laptop"
})

-- Toggle State for Lag Laptop
local toggles = { LagLaptop = false }

-- Function to Simulate Normal Click
local function clickNormally(object)
    local clickDetector = object:FindFirstChildWhichIsA("ClickDetector")
    if clickDetector then
        fireclickdetector(clickDetector)
    end
end

-- Function to Lag Game with Laptop
local function lagarJogoLaptop(laptopPath, maxTeleports)
    if laptopPath then
        local teleportCount = 0
        while teleportCount < maxTeleports and toggles.LagLaptop do
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = laptopPath.CFrame
            clickNormally(laptopPath)
            teleportCount = teleportCount + 1
            wait(0.0001)
        end
    else
        warn("Laptop n√£o encontrado.")
    end
end

-- Lag Laptop Toggle
Tab:AddToggle({
    Name = "Lag com Laptop (trava muito)",
    Default = false,
    Callback = function(state)
        toggles.LagLaptop = state
        if state then
            local laptopPath = workspace:FindFirstChild("WorkspaceCom"):FindFirstChild("001_GiveTools"):FindFirstChild("Laptop")
            if laptopPath then
                spawn(function()
                    lagarJogoLaptop(laptopPath, 999999999)
                end)
            else
                warn("Laptop n√£o encontrado.")
            end
        else
            print("Lag com Laptop desativado.")
        end
    end
})

-- Lag Laptop Paragraph
Tab:AddParagraph({
    "Informa√ß√£o de Lag",
    "O efeito de lag come√ßa ap√≥s 20 segundos"
})

-- Lag Phone Section
local Section = Tab:AddSection({
    Name = "Lag com Telefone"
})

-- Toggle State for Lag Phone
toggles.LagPhone = false

-- Function to Lag Game with Phone
local function lagarJogoPhone(phonePath, maxTeleports)
    if phonePath then
        local teleportCount = 0
        while teleportCount < maxTeleports and toggles.LagPhone do
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = phonePath.CFrame
            clickNormally(phonePath)
            teleportCount = teleportCount + 1
            wait(0.01)
        end
    else
        warn("Telefone n√£o encontrado.")
    end
end

-- Lag Phone Toggle
Tab:AddToggle({
    Name = "Lag exclu√≠do",
    Default = false,
    Callback = function(state)
        toggles.LagPhone = state
        if state then
            local phonePath = workspace:FindFirstChild("WorkspaceCom"):FindFirstChild("001_CommercialStores"):FindFirstChild("CommercialStorage1"):FindFirstChild("Store"):FindFirstChild("Tools"):FindFirstChild("Iphone")
            if phonePath then
                spawn(function()
                    lagarJogoPhone(phonePath, 999999)
                end)
            else
                warn("Telefone n√£o encontrado.")
            end
        else
            print("Lag com Telefone desativado.")
        end
    end
})

-- Lag Phone Paragraph
Tab:AddParagraph({
    "O lag foi exclu√≠do"
})

local Section = Tab:AddSection({
    Name = "Lag com Bomba"
})


local BombActive = false

Tab:AddToggle({
    Name = "Lag com Bomba",
    Default = false,
    Callback = function(Value)
        if Value then
            BombActive = true

            local Player = game.Players.LocalPlayer
            local Character = Player.Character or Player.CharacterAdded:Wait()
            local RootPart = Character:WaitForChild("HumanoidRootPart")
            local WorkspaceService = game:GetService("Workspace")
            local ReplicatedStorage = game:GetService("ReplicatedStorage")
            local Bomb = WorkspaceService:WaitForChild("WorkspaceCom"):WaitForChild("001_CriminalWeapons"):WaitForChild("GiveTools"):WaitForChild("Bomb")

            task.spawn(function()
                while BombActive do
                    if Bomb and RootPart then
                        RootPart.CFrame = Bomb.CFrame
                        fireclickdetector(Bomb.ClickDetector) -- Aciona o ClickDetector da bomba
                        task.wait(0.00001) -- Delay m√≠nimo para evitar travamentos
                    else
                        task.wait(0.0001) 
                    end
                end
            end)

            task.spawn(function()
                while BombActive do
                    if Bomb and RootPart then
                        local VirtualInputManager = game:GetService("VirtualInputManager")
                        VirtualInputManager:SendMouseButtonEvent(500, 500, 0, true, game, 0) 
                        task.wait(1.5)
                        VirtualInputManager:SendMouseButtonEvent(500, 500, 0, false, game, 0) 

                        -- Executa o FireServer com o nome do jogador
                        local args = {
                            [1] = "Bomb" .. Player.Name -- Usa o nome do jogador atual
                        }
                        ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Blo1wBomb1sServe1r"):FireServer(unpack(args))
                    end
                    task.wait(1.5) -- Intervalo de 1 segundo para clique e FireServer
                end
            end)
        else
            -- Desativando a funcionalidade
            BombActive = false
        end
    end
})

Tab:AddParagraph({
    "Informa√ß√£o de Lag",
    "O script come√ßa a causar lag ap√≥s 35 segundos"
})

local Tab = Window:MakeTab({"Nomes", "Paper"})

local isNameActive = false
local isBioActive = false

local SectionRGBName = Tab:AddSection({
    Name = "Nome RGB"
})

Tab:AddToggle({
    Name = "Nome RGB",
    Description = "Ativar Nome RGB",
    Default = false,
    Callback = function(value)
        isNameActive = value
        print(value and "RGB Name ativado" or "RGB Name desativado")
    end
})


local SectionRGBBio = Tab:AddSection({
    Name = "RGB BIO"
})

Tab:AddToggle({
    Name = "RGB BIO",
    Description = "Ativar RGB BIO",
    Default = false,
    Callback = function(value)
        isBioActive = value
        print(value and "RGB BIO ativado" or "RGB BIO desativado")
    end
})


local vibrantColors = {
    Color3.fromRGB(255, 0, 0),   -- Vermelho
    Color3.fromRGB(0, 255, 0),   -- Verde
    Color3.fromRGB(0, 0, 255),   -- Azul
    Color3.fromRGB(255, 255, 0), -- Amarelo
    Color3.fromRGB(255, 0, 255), -- Magenta
    Color3.fromRGB(0, 255, 255), -- Ciano
    Color3.fromRGB(255, 165, 0), -- Laranja
    Color3.fromRGB(128, 0, 128), -- Roxo
    Color3.fromRGB(255, 20, 147) -- Rosa choque
}

spawn(function()
    while true do
        if isNameActive then
            local randomColor = vibrantColors[math.random(#vibrantColors)]
            local args = {
                [1] = "PickingRPNameColor",
                [2] = randomColor
            }
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eColo1r"):FireServer(unpack(args))
        end
        wait(0.7)
    end
end)

spawn(function()
    while true do
        if isBioActive then
            local randomColor = vibrantColors[math.random(#vibrantColors)]
            local args = {
                [1] = "PickingRPBioColor",
                [2] = randomColor
            }
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1RPNam1eColo1r"):FireServer(unpack(args))
        end
        wait(0.7)
    end
end)

local SectionNames = Tab:AddSection({
    Name = "Adicionar Nomes no Jogador"
})

local names = {
    {"Anonymus", " anonymouns "},
    {"PRO", " PRO "},
    {"ERR0R_666", " ERR0R_666 "},
    {"DARKNE1SSS", " DARKNE1SSS "},
    {"GHOST", " GHOST "},
    {"JOKER", " JOKER "},
    {"ADMIN", " ADMIN "},
    {"TUBERS93", " TUBERS 93 "},
    {"CO0LKID", " CO0 LKID "},
    {"GAME ATTACKED BY MAFIA", " GAME ATTACKED BY SHADOWS HUB "},
    {"INC0MUN", " INC0MUN"},
    {"BAD BOY", " BAD BOY "}
}

for _, name in ipairs(names) do
    Tab:AddButton({
        Name = "Name: " .. name[1],
        Callback = function()
            game:GetService("ReplicatedStorage").RE["1RPNam1eTex1t"]:FireServer("RolePlayName", name[2])
        end
    })
end


local CarTab = Window:MakeTab({"Carro", "car"})

CarTab:AddSection({ "Spawnar Carros Premium & Vip" })
CarTab:AddDropdown({
    Name = "Selecionar Carro",
    Description = "Escolha qual carro spawnar",
    Default = "4DoorJeep",
    Options = {"4DoorJeep", "Continental", "Buggy", "Benz", "BatMobile", "Bugatti", "CyberTruck", "Escalade", "Formula1", "Ferrari", "RollsRoyce", "Roadster", "RaptorMonster", "NascarPremium", "Limo", "Lamboego", "HummerLimo", "HalloweenPurpleCar", "Hummer", "HalloweenGreenTruck", "HalloweenBatMobile", "GoKartVPass", "Skyline", "SWAT", "RollsSUV", "CopLamborgini", "SuperCar", "TankPremium"},
    Callback = function(Value)
        _G.carroSelecionado = Value
        print("Carro selecionado: " .. Value)
    end
})

-- Bot√£o para spawnar o carro selecionado
CarTab:AddButton({
    Name = "Spawnar Carro Selecionado",
    Description = "Executa todas as intera√ß√µes para spawnar o carro escolhido",
    Callback = function()
        -- Script Compacto - Executa todas as intera√ß√µes
        -- Cr√©ditos ao SimpleSpy (exx#9394)

        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local carroEscolhido = _G.carroSelecionado or "4DoorJeep"

        -- 1 - Abrir HUD do ve√≠culo
        ReplicatedStorage.Remotes.TelemetryClientInteraction:FireServer(
            "uiInteraction",
            {["buttonName"] = "VehicleHudButton"}
        )

        -- 2 - Clicar no filtro (selecionar carro)
        ReplicatedStorage.Remotes.TelemetryClientInteraction:FireServer(
            "filterClick",
            {["name"] = carroEscolhido, ["itemType"] = "Vehicles"}
        )

        -- 3 - Contexto de Upsell (premium car)
        ReplicatedStorage.Remotes.TelemetryClientInteraction:FireServer(
            "contextualUpsell",
            {
                ["adType"] = "Portal",
                ["itemId"] = carroEscolhido,
                ["gamepass"] = 0,
                ["portalAdFill"] = "Portal",
                ["reason"] = "premium car"
            }
        )

        -- 4 - PickingCar (spawnar carro)
        ReplicatedStorage.RE:FindFirstChild("1Ca1r"):FireServer(
            "PickingCar",
            carroEscolhido
        )

        -- 5 - Aplicar estado ao ve√≠culo (apenas para carros espec√≠ficos)
        if carroEscolhido == "4DoorJeep" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "4DoorJeep-4da8d83b-112f-43e6-bdb0-46ce9f638a65",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "http://www.roblox.com/asset/?id=6409728408",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 2
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        elseif carroEscolhido == "TankPremium" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "TankPremium-18f6122a-5c9b-431c-a9c2-410a20d36b28",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 2.1
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        elseif carroEscolhido == "CopLamborgini" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "CopLamborgini-0abfd150-90fd-4f35-956c-d11873f48da0",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "rbxassetid://6409032379",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 2.4
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        elseif carroEscolhido == "RollsSUV" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "RollsSUV-a96a08fc-9d1f-4abe-9473-d69a6a99b652",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "http://www.roblox.com/asset/?id=6409032379",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 2.7
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        elseif carroEscolhido == "HummerLimo" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "HummerLimo-8d49d908-b687-4ab2-8c3d-b17c96383458",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "http://www.roblox.com/asset/?id=6409032379",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 2.7
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        elseif carroEscolhido == "HalloweenPurpleCar" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "HalloweenPurpleCar-c6b5482a-f03c-4ff7-a384-0b5a4032be14",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "http://www.roblox.com/asset/?id=6409032379",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 2
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        elseif carroEscolhido == "Hummer" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "Hummer-d02f343a-1d6e-4274-9b34-1cad00c5cb34",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "http://www.roblox.com/asset/?id=6471657544",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 2
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        elseif carroEscolhido == "HalloweenGreenTruck" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "HalloweenGreenTruck-2fec9cb0-efeb-4617-8d9c-d93793412fa3",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "http://www.roblox.com/asset/?id=4625492000",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 2
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        elseif carroEscolhido == "GoKartVPass" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "GoKartVPass-0d18cef1-499f-4b76-aed3-7aef2d839c03",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "rbxassetid://16550212844",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 1.6
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        elseif carroEscolhido == "RollsRoyce" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "RollsRoyce-37857b4f-96ab-4d06-8b94-ba2d6a0896e6",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "rbxassetid://12424328898",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 2.1
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        elseif carroEscolhido == "Formula1" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "Formula1-c586171c-e6fa-4a0f-8357-df9b9052cf9f",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "http://www.roblox.com/asset/?id=4504219366",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 2
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        elseif carroEscolhido == "Escalade" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "Escalade-b74be8db-2635-4495-9066-823402be7d3d",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "http://www.roblox.com/asset/?id=6409032379",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 2
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        elseif carroEscolhido == "CyberTruck" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "CyberTruck-045d6c3a-8261-4bb5-a8e3-5d52b85c1b0c",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "http://www.roblox.com/asset/?id=6409745580",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 2
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        elseif carroEscolhido == "Bugatti" then
            ReplicatedStorage.Remotes.ApplyStateToVehicle:InvokeServer(
                "Bugatti-b95d1391-2e66-4cfd-9802-d8089e3d192f",
                {
                    ["Lights"] = {
                        ["lightsOn"] = false,
                        ["hazardsActive"] = false
                    },
                    ["IsLocked"] = false,
                    ["Appearance"] = {
                        ["IsSmoking"] = false,
                        ["WheelDecal"] = "http://www.roblox.com/asset/?id=6409032379",
                        ["BabyCarSeatInstalledNumber"] = 0,
                        ["Color"] = nil,
                        ["IsOnFire"] = false,
                        ["SuspensionHeight"] = 2.1
                    },
                    ["Performance"] = {
                        ["DriftStrength"] = 1,
                        ["MaxSpeed"] = 25,
                        ["Turbo"] = 0
                    },
                    ["Owner"] = player
                }
            )
        end
        
        print("Carro " .. carroEscolhido .. " spawnado com sucesso!")
    end
})

-- Colors for RGB
local colors = {
    Color3.new(1, 0, 0),     -- Red
    Color3.new(0, 1, 0),     -- Green
    Color3.new(0, 0, 1),     -- Blue
    Color3.new(1, 1, 0),     -- Yellow
    Color3.new(1, 0, 1),     -- Magenta
    Color3.new(0, 1, 1),     -- Cyan
    Color3.new(0.5, 0, 0.5), -- Purple
    Color3.new(1, 0.5, 0)    -- Orange
}

-- Replicated Storage Service
local replicatedStorage = game:GetService("ReplicatedStorage")
local remoteEvent = replicatedStorage:WaitForChild("RE"):WaitForChild("1Player1sCa1r")

-- RGB Color Change Logic
local isColorChanging = false
local colorChangeCoroutine = nil

local function changeCarColor()
    while isColorChanging do
        for _, color in ipairs(colors) do
            if not isColorChanging then return end
            local args = {
                [1] = "PickingCarColor",
                [2] = color
            }
            remoteEvent:FireServer(unpack(args))
            wait(1)
        end
    end
end

CarTab:AddButton({
    Name = "Remove All Cars",
    Callback = function()
        local ofnawufn = false

if ofnawufn == true then
    return
end
ofnawufn = true

local cawwfer = "MilitaryBoatFree" -- Alterado para MilitaryBoatFree
local oldcfffff = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1754, -2, 58) -- Coordenadas atualizadas
wait(0.3)

local args = {
    [1] = "PickingBoat", -- Alterado para PickingBoat
    [2] = cawwfer
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer(unpack(args))
wait(1)

local wrinfjn
for _, errb in pairs(game.workspace.Vehicles[game.Players.LocalPlayer.Name.."Car"]:GetDescendants()) do
    if errb:IsA("VehicleSeat") then
        wrinfjn = errb
    end
end

repeat
    if game.Players.LocalPlayer.Character.Humanoid.Health == 0 then return end
    if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
        if not game.Players.LocalPlayer.Character.Humanoid.SeatPart == wrinfjn then
            game.Players.LocalPlayer.Character.Humanoid.Sit = false
        end
    end
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = wrinfjn.CFrame
    task.wait()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = wrinfjn.CFrame + Vector3.new(0,1,0)
    task.wait()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = wrinfjn.CFrame + Vector3.new(0,-1,0)
    task.wait()
until game.Players.LocalPlayer.Character.Humanoid.SeatPart == wrinfjn

for _, wifn in pairs(game.workspace.Vehicles[game.Players.LocalPlayer.Name.."Car"]:GetDescendants()) do
    if wifn.Name == "PhysicalWheel" then
        wifn:Destroy()
    end
end

local FLINGED = Instance.new("BodyThrust", game.workspace.Vehicles[game.Players.LocalPlayer.Name.."Car"].Chassis.Mass) 
FLINGED.Force = Vector3.new(50000, 0, 50000) 
FLINGED.Name = "SUNTERIUM HUB FLING"
FLINGED.Location = game.workspace.Vehicles[game.Players.LocalPlayer.Name.."Car"].Chassis.Mass.Position

for _, wvwvwasc in pairs(game.workspace.Vehicles:GetChildren()) do
    for _, ascegr in pairs(wvwvwasc:GetDescendants()) do
        if ascegr.Name == "VehicleSeat" then
            local targetcar = ascegr
            local tet = Instance.new("BodyVelocity", game.workspace.Vehicles[game.Players.LocalPlayer.Name.."Car"].Chassis.Mass)
            tet.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
            tet.P = 1250
            tet.Velocity = Vector3.new(0,0,0)
            tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"
            for m=1,25 do
                local pos = {x=0, y=0, z=0}
                pos.x = targetcar.Position.X
                pos.y = targetcar.Position.Y
                pos.z = targetcar.Position.Z
                pos.x = pos.x + targetcar.Velocity.X / 2
                pos.y = pos.y + targetcar.Velocity.Y / 2
                pos.z = pos.z + targetcar.Velocity.Z / 2
                if pos.y <= -200 then
                    game.workspace.Vehicles[game.Players.LocalPlayer.Name.."Car"].Chassis.Mass.CFrame = CFrame.new(0,1000,0)
                else
                    game.workspace.Vehicles[game.Players.LocalPlayer.Name.."Car"].Chassis.Mass.CFrame = CFrame.new(Vector3.new(pos.x,pos.y,pos.z))
                    task.wait()
                    game.workspace.Vehicles[game.Players.LocalPlayer.Name.."Car"].Chassis.Mass.CFrame = CFrame.new(Vector3.new(pos.x,pos.y,pos.z)) + Vector3.new(0,-2,0)
                    task.wait()
                    game.workspace.Vehicles[game.Players.LocalPlayer.Name.."Car"].Chassis.Mass.CFrame = CFrame.new(Vector3.new(pos.x,pos.y,pos.z)) * CFrame.new(0,0,2)
                    task.wait()
                    game.workspace.Vehicles[
game.Players.LocalPlayer.Name.."Car"].Chassis.Mass.CFrame = CFrame.new(Vector3.new(pos.x,pos.y,pos.z)) * CFrame.new(2,0,0)
                    task.wait()
                end
                task.wait()
            end
        end
    end
end

task.wait()
local args = {
    [1] = "DeleteAllVehicles"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer(unpack(args))
game.Players.LocalPlayer.Character.Humanoid.Sit = false
wait()
local tet = Instance.new("BodyVelocity", game.Players.LocalPlayer.Character.HumanoidRootPart)
tet.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
tet.P = 1250
tet.Velocity = Vector3.new(0,0,0)
tet.Name = "#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"
wait(0.1)
for m=1,2 do 
    task.wait()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldcfffff
end
wait(1)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldcfffff
wait()
game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild("#mOVOOEPF$#@F$#GERE..>V<<<<EW<V<<W"):Destroy()
wait(0.2)
ofnawufn = false
    end
})

CarTab:AddParagraph({"Informa√ß√£o:", "Recomendo usar 2 vezes para garantir que todos os ve√≠culos sejam removidos"})

CarTab:AddButton({
    Name = "Bring All Cars",
    Callback = function()
        for _, v in next, workspace.Vehicles:GetChildren() do
            v:SetPrimaryPartCFrame(game.Players.LocalPlayer.Character:GetPrimaryPartCFrame())
        end
    end
})

CarTab:AddParagraph({"Informa√ß√£o:", "Puxa todos os carros do servidor at√© voc√™"})

-- Speed V1 Section
local SpeedSection = CarTab:AddSection({"Speed V1"})

local Speed = 50
local Turbo = 50

local function ChangeCarSpeedAndTurbo(speedValue, turboValue)
    local player = game.Players.LocalPlayer
    local car = workspace.Vehicles:FindFirstChild(player.Name .. "Car")

    if car then
        local body = car:FindFirstChild("Body").VehicleSeat
        if body then
            body.TopSpeed.Value = speedValue
            body.Turbo.Value = turboValue
            wait(0.1)
            redzlib:MakeNotification({
                Name = "Original by Mafia Hub",
                Content = "Done, You can Move Now!",
                Time = 5
            })
        else
            redzlib:MakeNotification({
                Name = "Error",
                Content = "Sit in car first!",
                Time = 5
            })
        end
    else
        redzlib:MakeNotification({
            Name = "Error",
            Content = "Put a Car First!",
            Time = 5
        })
    end
end

CarTab:AddTextBox({
    Name = "Speed",
    PlaceholderText = "50",
    Callback = function(value)
        local newSpeed = tonumber(value)
        if newSpeed then
            Speed = newSpeed
        end
    end
})

CarTab:AddTextBox({
    Name = "Turbo",
    PlaceholderText = "50",
    Callback = function(value)
        local newTurbo = tonumber(value)
        if newTurbo then
            Turbo = newTurbo
        end
    end
})

CarTab:AddTextBox({
    Name = "Drift",
    PlaceholderText = "50",
    Callback = function(value)
        local args = {
            [1] = "DriftingNumber",
            [2] = value
        }
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sCa1r"):FireServer(unpack(args))
    end
})

CarTab:AddButton({
    Name = "Aplicar Velocidade, Turbo e drift",
    Callback = function()
        ChangeCarSpeedAndTurbo(Speed, Turbo)
    end
})

-- Turbo V2 Section
local TurboSection = CarTab:AddSection({"Turbo V2"})

CarTab:AddButton({
    Name = "Turbo V2 [Melhor]",
    Callback = function()
     local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")

local voando = false
local velocidade = 30

local telaGui = Instance.new("ScreenGui", player.PlayerGui)

local function criarBotaoImagem(nome, posicao, idImagem, rotacao, acao)
    local botao = Instance.new("ImageButton", telaGui)
    botao.Size = UDim2.new(0, 60, 0, 60)
    botao.Position = posicao
    botao.BackgroundTransparency = 1
    botao.Image = "rbxassetid://" .. idImagem
    botao.Rotation = rotacao
    botao.MouseButton1Down:Connect(acao)
    return botao
end

local botaoFrente = criarBotaoImagem("BotaoFrente", UDim2.new(0, 10, 0.35, 0), "18478249606", 0, function()
    voando = true
    while voando do
        if humanoidRootPart then
            humanoidRootPart.Velocity = humanoidRootPart.CFrame.LookVector * velocidade
        end
        task.wait()
    end
end)

local botaoTras = criarBotaoImagem("BotaoTras", UDim2.new(0, 10, 0.5, 0), "18478249606", 180, function()
    voando = true
    while voando do
        if humanoidRootPart then
            humanoidRootPart.Velocity = -humanoidRootPart.CFrame.LookVector * velocidade
        end
        task.wait()
    end
end)

local botaoEsquerda = criarBotaoImagem("BotaoEsquerda", UDim2.new(1, -210, 0.3, 0), "18478249606", -90, function()
    voando = true
    while voando do
        if humanoidRootPart then
            humanoidRootPart.Velocity = -humanoidRootPart.CFrame.RightVector * velocidade
        end
        task.wait()
    end
end)

local botaoDireita = criarBotaoImagem("BotaoDireita", UDim2.new(1, -140, 0.3, 0), "18478249606", 90, function()
    voando = true
    while voando do
        if humanoidRootPart then
            humanoidRootPart.Velocity = humanoidRootPart.CFrame.RightVector * velocidade
        end
        task.wait()
    end
end)

local function pararVoo()
    voando = false
    if humanoidRootPart then
        humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
    end
end

botaoFrente.MouseButton1Up:Connect(pararVoo)
botaoTras.MouseButton1Up:Connect(pararVoo)
botaoEsquerda.MouseButton1Up:Connect(pararVoo)
botaoDireita.MouseButton1Up:Connect(pararVoo)

local botaoTurbo = Instance.new("ImageButton", telaGui)
botaoTurbo.Size = UDim2.new(0, 60, 0, 60)
botaoTurbo.Position = UDim2.new(1, -130, 0, 10)
botaoTurbo.BackgroundTransparency = 1
botaoTurbo.Image = "rbxassetid://97607579386418"
botaoTurbo.MouseButton1Down:Connect(function()
    velocidade = 300
end)

-- Bot√£o de minimizar (com "+" ou "-" dependendo do estado)
local botaoMinimizar = Instance.new("TextButton", telaGui)
botaoMinimizar.Size = UDim2.new(0, 60, 0, 60)
botaoMinimizar.Position = UDim2.new(0, 10, 0, 10)  -- Alterado para o canto superior esquerdo
botaoMinimizar.BackgroundTransparency = 1
botaoMinimizar.Text = "-"  -- Inicia com o s√≠mbolo de "-"
botaoMinimizar.TextSize = 40
botaoMinimizar.TextColor3 = Color3.fromRGB(255, 255, 255)

local botoes = {botaoFrente, botaoTras, botaoEsquerda, botaoDireita, botaoTurbo}

local minimizado = false

local function alternarBotoes()
    minimizado = not minimizado
    for _, botao in ipairs(botoes) do
        botao.Visible = not minimizado
    end
    -- Alterar o texto do bot√£o de minimizar
    if minimizado then
        botaoMinimizar.Text = "+"
    else
        botaoMinimizar.Text = "-"
    end
end

botaoMinimizar.MouseButton1Down:Connect(alternarBotoes)    
    end
})

CarTab:AddParagraph({"Informa√ß√£o:", "Ambos os turbos n√£o precisam de Gamepass"})

-- Music Section
local MusicSection = CarTab:AddSection({"Music for Cars, Houses"})

local musicIds = {
    "71373562243752", "138129019858244", "138480372357526", "122199933878670",
    "74187181906707", "82793916573031", "107421761958790", "91394092603440",
    "113198957973421", "81452315991527", "93786060174790", "74752089069476",
    "131592235762789", "132081774507495", "124394293950763", "83381647646350",
    "16190782181", "1841682637", "3148329638", "124928367733395",
    "106317184644394", "100247055114504", "107035638005233", "109351649716900",
    "84751398517083", "125259969174449", "89269071829332", "88094479399489",
    "72440232513341", "92893359226454", "111281710445018", "98677515506006",
    "105882833374061", "104541292443133", "105832154444494", "84733736048142",
    "94718473830640", "130324826943718", "123039027577735", "113312785512702",
    "139161205970637", "113768944849093", "135667903253566", "81335392002580",
    "77428091165211", "14145624031", "8080255618", "8654835474",
    "13530439502", "18841894272", "90323407842935", "136932193331774",
    "113504863495384", "1836175030", "79998949362539", "109188610023287",
    "134939857094956", "132245626038510", "124567809277408", "72591334498716",
    "76578817848504", "17422156627", "81902909302285", "130449561461006",
    "110519234838026", "106434295960535", "86271123924168", "85481949732828",
    "106476166672589", "87968531262747", "73966367524216", "137962454483542",
    "98371771055411", "111668097052966", "140095882383991", "122873874738223",
    "105461615542794"
}

local function playCarMusic(musicId)
    if musicId and musicId ~= "" then
        local carArgs = {
            [1] = "PickingCarMusicText",
            [2] = musicId
        }
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sCa1r"):FireServer(unpack(carArgs))
    end
end

local function playScooterMusic(musicId)
    if musicId and musicId ~= "" then
        local scooterArgs = {
            [1] = "PickingScooterMusicText",
            [2] = musicId
        }
        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1NoMoto1rVehicle1s"):FireServer(unpack(scooterArgs))
    end
end

local function playHouseMusic(musicId)
    if musicId and musicId ~= "" then
        local houseArgs = {
            [1] = "PickHouseMusicText",
            [2] = musicId
        }
        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sHous1e"):FireServer(unpack(houseArgs))
    end
end

CarTab:AddTextBox({
    Name = "Music ID (Gamepass Required)",
    PlaceholderText = "Enter Music ID",
    Callback = function(value)
        playCarMusic(value)
        playScooterMusic(value)
        playHouseMusic(value)
    end
})

CarTab:AddDropdown({
    Name = "Select Music (Gamepass Required)",
    Options = musicIds,
    Callback = function(value)
        playCarMusic(value)
        playScooterMusic(value)
        playHouseMusic(value)
    end
})

CarTab:AddParagraph({"Note", "O script de m√∫sica funciona em todos os carros e casas"})

-- Car RGB Section
local RGBSection = CarTab:AddSection({"Car RGB"})

CarTab:AddToggle({
    Name = "Car RGB",
    Default = false,
    Callback = function(state)
        isColorChanging = state
        if isColorChanging then
            colorChangeCoroutine = coroutine.create(changeCarColor)
            coroutine.resume(colorChangeCoroutine)
        end
    end
})

CarTab:AddParagraph({"Note", "Ativando isso deixar√° seu carro RGB"})

-- Spam Horn Section
local HornSection = CarTab:AddSection({"Spam Horn"})

local spamming = false
local args = {"Horn"}

local function spamHorn()
    while spamming do
        remoteEvent:FireServer(unpack(args))
        wait(0.1)
    end
end

CarTab:AddToggle({
    Name = "Spam Horn",
    Default = false,
    Callback = function(value)
        spamming = value
        if spamming then
            spawn(spamHorn)
        end
    end
})

-- Fly Car Section
local FlySection = CarTab:AddSection({"Fly Car"})

CarTab:AddButton({
    Name = "Fly Car",
    Callback = function()
        --by Luscaa
-- Version: 4.1

-- Instances:
local Flymguiv2 = Instance.new("ScreenGui")
local Drag = Instance.new("Frame")
local FlyFrame = Instance.new("Frame")
local ddnsfbfwewefe = Instance.new("TextButton")
local Speed = Instance.new("TextBox")
local Fly = Instance.new("TextButton")
local Speeed = Instance.new("TextLabel")
local Stat = Instance.new("TextLabel")
local Stat2 = Instance.new("TextLabel")
local Unfly = Instance.new("TextButton")
local Vfly = Instance.new("TextLabel")
local Close = Instance.new("TextButton")
local Minimize = Instance.new("TextButton")
local Flyon = Instance.new("Frame")
local W = Instance.new("TextButton")
local S = Instance.new("TextButton")

--Properties:

Flymguiv2.Name = "Car Fly gui v2"
Flymguiv2.Parent = game.CoreGui
Flymguiv2.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Drag.Name = "Drag"
Drag.Parent = Flymguiv2
Drag.Active = true
Drag.BackgroundColor3 = Color3.fromRGB(0, 150, 191)
Drag.BorderSizePixel = 0
Drag.Draggable = true
Drag.Position = UDim2.new(0.482438415, 0, 0.454874992, 0)
Drag.Size = UDim2.new(0, 237, 0, 27)

FlyFrame.Name = "FlyFrame"
FlyFrame.Parent = Drag
FlyFrame.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
FlyFrame.BorderSizePixel = 0
FlyFrame.Draggable = true
FlyFrame.Position = UDim2.new(-0.00200000009, 0, 0.989000022, 0)
FlyFrame.Size = UDim2.new(0, 237, 0, 139)

ddnsfbfwewefe.Name = "ddnsfbfwewefe"
ddnsfbfwewefe.Parent = FlyFrame
ddnsfbfwewefe.BackgroundColor3 = Color3.fromRGB(0, 150, 191)
ddnsfbfwewefe.BorderSizePixel = 0
ddnsfbfwewefe.Position = UDim2.new(-0.000210968778, 0, -0.00395679474, 0)
ddnsfbfwewefe.Size = UDim2.new(0, 237, 0, 27)
ddnsfbfwewefe.Font = Enum.Font.SourceSans
ddnsfbfwewefe.Text = "by Lusquinha_067"
ddnsfbfwewefe.TextColor3 = Color3.fromRGB(255, 255, 255)
ddnsfbfwewefe.TextScaled = true
ddnsfbfwewefe.TextSize = 14.000
ddnsfbfwewefe.TextWrapped = true

Speed.Name = "Speed"
Speed.Parent = FlyFrame
Speed.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
Speed.BorderColor3 = Color3.fromRGB(0, 0, 191)
Speed.BorderSizePixel = 0
Speed.Position = UDim2.new(0.445025861, 0, 0.402877688, 0)
Speed.Size = UDim2.new(0, 111, 0, 33)
Speed.Font = Enum.Font.SourceSans
Speed.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
Speed.Text = "50"
Speed.TextColor3 = Color3.fromRGB(255, 255, 255)
Speed.TextScaled = true
Speed.TextSize = 14.000
Speed.TextWrapped = true

Fly.Name = "Fly"
Fly.Parent = FlyFrame
Fly.BackgroundColor3 = Color3.fromRGB(0, 150, 191)
Fly.BorderSizePixel = 0
Fly.Position = UDim2.new(0.0759493634, 0, 0.705797076, 0)
Fly.Size = UDim2.new(0, 199, 0, 32)
Fly.Font = Enum.Font.SourceSans
Fly.Text = "Enable"
Fly.TextColor3 = Color3.fromRGB(255, 255, 255)
Fly.TextScaled = true
Fly.TextSize = 14.000
Fly.TextWrapped = true
Fly.MouseButton1Click:Connect(function()
	local HumanoidRP = game.Players.LocalPlayer.Character.HumanoidRootPart
	Fly.Visible = false
	Stat2.Text = "On"
	Stat2.TextColor3 = Color3.fromRGB(0, 255, 0)
	Unfly.Visible = true
	Flyon.Visible = true
	local BV = Instance.new("BodyVelocity",HumanoidRP)
	local BG = Instance.new("BodyGyro",HumanoidRP)
	BV.MaxForce = Vector3.new(math.huge,math.huge,math.huge)
	game:GetService('RunService').RenderStepped:connect(function()
	BG.MaxTorque = Vector3.new(math.huge,math.huge,math.huge)
	BG.D = 5000
	BG.P = 100000
	BG.CFrame = game.Workspace.CurrentCamera.CFrame
	end)
end)

Speeed.Name = "Speeed"
Speeed.Parent = FlyFrame
Speeed.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
Speeed.BorderSizePixel = 0
Speeed.Position = UDim2.new(0.0759493634, 0, 0.402877688, 0)
Speeed.Size = UDim2.new(0, 87, 0, 32)
Speeed.ZIndex = 0
Speeed.Font = Enum.Font.SourceSans
Speeed.Text = "Speed:"
Speeed.TextColor3 = Color3.fromRGB(255, 255, 255)
Speeed.TextScaled = true
Speeed.TextSize = 14.000
Speeed.TextWrapped = true

Stat.Name = "Stat"
Stat.Parent = FlyFrame
Stat.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
Stat.BorderSizePixel = 0
Stat.Position = UDim2.new(0.299983799, 0, 0.239817441, 0)
Stat.Size = UDim2.new(0, 85, 0, 15)
Stat.Font = Enum.Font.SourceSans
Stat.Text = "Status:"
Stat.TextColor3 = Color3.fromRGB(255, 255, 255)
Stat.TextScaled = true
Stat.TextSize = 14.000
Stat.TextWrapped = true

Stat2.Name = "Stat2"
Stat2.Parent = FlyFrame
Stat2.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
Stat2.BorderSizePixel = 0
Stat2.Position = UDim2.new(0.546535194, 0, 0.239817441, 0)
Stat2.Size = UDim2.new(0, 27, 0, 15)
Stat2.Font = Enum.Font.SourceSans
Stat2.Text = "Off"
Stat2.TextColor3 = Color3.fromRGB(255, 0, 0)
Stat2.TextScaled = true
Stat2.TextSize = 14.000
Stat2.TextWrapped = true

Unfly.Name = "Unfly"
Unfly.Parent = FlyFrame
Unfly.BackgroundColor3 = Color3.fromRGB(0, 150, 191)
Unfly.BorderSizePixel = 0
Unfly.Position = UDim2.new(0.0759493634, 0, 0.705797076, 0)
Unfly.Size = UDim2.new(0, 199, 0, 32)
Unfly.Visible = false
Unfly.Font = Enum.Font.SourceSans
Unfly.Text = "Disable"
Unfly.TextColor3 = Color3.fromRGB(255, 255, 255)
Unfly.TextScaled = true
Unfly.TextSize = 14.000
Unfly.TextWrapped = true
Unfly.MouseButton1Click:Connect(function()
	local HumanoidRP = game.Players.LocalPlayer.Character.HumanoidRootPart
	Fly.Visible = true
	Stat2.Text = "Off"
	Stat2.TextColor3 = Color3.fromRGB(255, 0, 0)
	wait()
	Unfly.Visible = false
	Flyon.Visible = false
	HumanoidRP:FindFirstChildOfClass("BodyVelocity"):Destroy()
	HumanoidRP:FindFirstChildOfClass("BodyGyro"):Destroy()
end)

Vfly.Name = "Vfly"
Vfly.Parent = Drag
Vfly.BackgroundColor3 = Color3.fromRGB(0, 150, 191)
Vfly.BorderSizePixel = 0
Vfly.Size = UDim2.new(0, 57, 0, 27)
Vfly.Font = Enum.Font.SourceSans
Vfly.Text = "Car fly"
Vfly.TextColor3 = Color3.fromRGB(255, 255, 255)
Vfly.TextScaled = true
Vfly.TextSize = 14.000
Vfly.TextWrapped = true

Close.Name = "Close"
Close.Parent = Drag
Close.BackgroundColor3 = Color3.fromRGB(0, 150, 191)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0.875, 0, 0, 0)
Close.Size = UDim2.new(0, 27, 0, 27)
Close.Font = Enum.Font.SourceSans
Close.Text = "X"
Close.TextColor3 = Color3.fromRGB(255, 255, 255)
Close.TextScaled = true
Close.TextSize = 14.000
Close.TextWrapped = true
Close.MouseButton1Click:Connect(function()
	Flymguiv2:Destroy()
end)

Minimize.Name = "Minimize"
Minimize.Parent = Drag
Minimize.BackgroundColor3 = Color3.fromRGB(0, 150, 191)
Minimize.BorderSizePixel = 0
Minimize.Position = UDim2.new(0.75, 0, 0, 0)
Minimize.Size = UDim2.new(0, 27, 0, 27)
Minimize.Font = Enum.Font.SourceSans
Minimize.Text = "-"
Minimize.TextColor3 = Color3.fromRGB(255, 255, 255)
Minimize.TextScaled = true
Minimize.TextSize = 14.000
Minimize.TextWrapped = true
function Mini()
	if Minimize.Text == "-" then
		Minimize.Text = "+"
		FlyFrame.Visible = false
	elseif Minimize.Text == "+" then
		Minimize.Text = "-"
		FlyFrame.Visible = true
	end
end
Minimize.MouseButton1Click:Connect(Mini)

Flyon.Name = "Fly on"
Flyon.Parent = Flymguiv2
Flyon.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Flyon.BorderSizePixel = 0
Flyon.Position = UDim2.new(0.117647067, 0, 0.550284624, 0)
Flyon.Size = UDim2.new(0.148000002, 0, 0.314999998, 0)
Flyon.Visible = false
Flyon.Active = true
Flyon.Draggable = true

W.Name = "W"
W.Parent = Flyon
W.BackgroundColor3 = Color3.fromRGB(0, 150, 191)
W.BorderSizePixel = 0
W.Position = UDim2.new(0.134719521, 0, 0.0152013302, 0)
W.Size = UDim2.new(0.708999991, 0, 0.499000013, 0)
W.Font = Enum.Font.SourceSans
W.Text = "^"
W.TextColor3 = Color3.fromRGB(255, 255, 255)
W.TextScaled = true
W.TextSize = 14.000
W.TextWrapped = true
W.TouchLongPress:Connect(function()
	local HumanoidRP = game.Players.LocalPlayer.Character.HumanoidRootPart
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * 0
end)

W.MouseButton1Click:Connect(function()
	local HumanoidRP = game.Players.LocalPlayer.Character.HumanoidRootPart
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * 0
end)

S.Name = "S"
S.Parent = Flyon
S.BackgroundColor3 = Color3.fromRGB(0, 150, 191)
S.BorderSizePixel = 0
S.Position = UDim2.new(0.134000003, 0, 0.479999989, 0)
S.Rotation = 180.000
S.Size = UDim2.new(0.708999991, 0, 0.499000013, 0)
S.Font = Enum.Font.SourceSans
S.Text = "^"
S.TextColor3 = Color3.fromRGB(255, 255, 255)
S.TextScaled = true
S.TextSize = 14.000
S.TextWrapped = true
S.TouchLongPress:Connect(function()
	local HumanoidRP = game.Players.LocalPlayer.Character.HumanoidRootPart
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * 0
end)

S.MouseButton1Click:Connect(function()
	local HumanoidRP = game.Players.LocalPlayer.Character.HumanoidRootPart
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * -Speed.Text
	wait(.1)
	HumanoidRP.BodyVelocity.Velocity = game.Workspace.CurrentCamera.CFrame.LookVector * 0
end)
    end
})

CarTab:AddParagraph({"Note", "Ativando isso voc√™ pode voar com o seu carro"})

-- Spam Cars Section
local SpamCarSection = CarTab:AddSection({"Spam Car"})

local carList = {
    "SchoolBus", "SmartCar", "FarmTruck", "Cadillac", "Excavator",
    "Jeep", "NascarTruck", "TowTruck", "Snowplow", "MilitaryTruck",
    "Tank", "Limo", "FireTruck"
}

local spamCarsActive = false

local function spawnCar(carName)
    local args = {
        [1] = "PickingCar",
        [2] = carName
    }
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
end

CarTab:AddToggle({
    Name = "Spam Cars",
    Default = false,
    Callback = function(state)
        spamCarsActive = state
        if spamCarsActive then
            task.spawn(function()
                while spamCarsActive do
                    for _, carName in ipairs(carList) do
                        if not spamCarsActive then break end
                        spawnCar(carName)
                        wait(0.4)
                    end
                end
            end)
        end
    end
})

CarTab:AddParagraph({"Informa√ß√£o:", "Spamar v√°rios carros"})



-- Vari√°veis globais
local pl = game.Players.LocalPlayer
local players = {}

-- Fun√ß√£o para atualizar a lista de players
local function updatePlayerList()
    players = {}
    for _, player in pairs(game.Players:GetPlayers()) do
        table.insert(players, player.Name)
    end
    return players
end

-- Inicializa a lista de players
updatePlayerList()

-- Aba Child
local ChildTab = Window:MakeTab({"Crian√ßa", "baby"})

local Section = ChildTab:AddSection({
    Name = "Child"
})

ChildTab:AddParagraph({"Informa√ß√£o:", "Os scripts daqui n√£o s√£o nossos, s√£o os que o Venom adicionou aqui pra gente."}) 
local chasingplayer = nil
local playerChild = ChildTab:AddDropdown({
    Name = "Selecione um player para perseguir",
    Options = players,
    Default = "",
    Callback = function(selected)
        if game.Players:FindFirstChild(selected) then
            chasingplayer = selected
        else
            chasingplayer = nil
        end
    end
})

ChildTab:AddButton({
    Name = "Atualizar Player List",
    Callback = function()
        local updatedPlayers = updatePlayerList()
        if playerChild and updatedPlayers then
            pcall(function()
                playerChild:Refresh(updatedPlayers)
            end)
            if chasingplayer and not game.Players:FindFirstChild(chasingplayer) then
                chasingplayer = nil
                pcall(function()
                    playerChild:Set("")
                end)
            end
        end
    end
})

-- Eventos de entrada/sa√≠da de players
game.Players.PlayerAdded:Connect(function()
    task.wait(0.1)
    local updatedPlayers = updatePlayerList()
    if playerChild and updatedPlayers then
        pcall(function()
            playerChild:Refresh(updatedPlayers)
        end)
    end
end)

game.Players.PlayerRemoving:Connect(function(player)
    task.wait(0.1)
    local updatedPlayers = updatePlayerList()
    if playerChild and updatedPlayers then
        pcall(function()
            playerChild:Refresh(updatedPlayers)
        end)
        if chasingplayer == player.Name then
            chasingplayer = nil
            pcall(function()
                playerChild:Set("")
            end)
        end
    end
end)

ChildTab:AddButton({
    Name = "Enviar crian√ßa",
    Callback = function()
        if not chasingplayer then
            warn("Nenhum jogador selecionado!")
            return
        end
        if not workspace:FindFirstChild(pl.Name) or not workspace[pl.Name]:FindFirstChild("FollowCharacter") then
            local args = {
                [1] = "CharacterFollowSpawnPlayer",
                [2] = "BabyBoy"
            }
            local success, err = pcall(function()
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Bab1yFollo1w"):FireServer(unpack(args))
            end)
            if not success then
                warn("Erro ao enviar crian√ßa: " .. err)
            end
        end
        
        task.wait(0.2)
        
        if workspace:FindFirstChild(pl.Name) then
            for _, v in pairs(workspace[pl.Name]:GetChildren()) do
                if v:IsA("BasePart") then
                    v.CanCollide = true
                end
            end
        end

        local target = chasingplayer
        if workspace:FindFirstChild(target) and workspace:FindFirstChild(pl.Name) and workspace[pl.Name]:FindFirstChild("FollowCharacter") then
            workspace[pl.Name].FollowCharacter.Parent = workspace[target]

            if rawget(getgenv(), "RunService") then
                return
            end

            getgenv().RunService = game:GetService("RunService").Heartbeat:Connect(function()
                local followCharacter = workspace[target]:FindFirstChild("FollowCharacter")
                if followCharacter and followCharacter:FindFirstChild("Torso") and followCharacter.Torso:FindFirstChild("BodyPosition") then
                    local humanoidRootPart = workspace[target]:FindFirstChild("HumanoidRootPart")
                    if humanoidRootPart then
                        followCharacter.Torso.BodyPosition.Position = humanoidRootPart.Position - (humanoidRootPart.CFrame.LookVector * 3)
                        followCharacter.Torso.BodyGyro.CFrame = humanoidRootPart.CFrame
                    end
                end
            end)
        end
    end
})

ChildTab:AddButton({
    Name = "Retornar crian√ßa",
    Callback = function()
        if rawget(getgenv(), "RunService") then
            getgenv().RunService:Disconnect()
            getgenv().RunService = nil
        end

        local args = { [1] = "DeleteFollowCharacter" }
        local success, err = pcall(function()
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Bab1yFollo1w"):FireServer(unpack(args))
        end)
        if not success then
            warn("Erro ao retornar crian√ßa: " .. err)
        end

        local args1 = { [1] = "CharacterFollowSpawnPlayer", [2] = "BabyBoy" }
        success, err = pcall(function()
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Bab1yFollo1w"):FireServer(unpack(args1))
        end)
        if not success then
            warn("Erro ao spawnar crian√ßa: " .. err)
        end
    end
})

ChildTab:AddToggle({
    Name = "Spectar Player",
    Default = false,
    Callback = function(Value)
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        local LocalPlayer = Players.LocalPlayer
        local Camera = workspace.CurrentCamera

        if Value then
            if not chasingplayer then
                warn("Nenhum jogador selecionado para spectar!")
                return false
            end

            if not rawget(getgenv(), "CameraConnection") then
                getgenv().CameraConnection = RunService.Heartbeat:Connect(function()
                    local targetPlayer = Players:FindFirstChild(chasingplayer)
                    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
                        Camera.CameraSubject = targetPlayer.Character.Humanoid
                    else
                        if rawget(getgenv(), "CameraConnection") then
                            getgenv().CameraConnection:Disconnect()
                            getgenv().CameraConnection = nil
                        end
                        Camera.CameraSubject = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") or nil
                    end
                end)
            end
        else
            if rawget(getgenv(), "CameraConnection") then
                getgenv().CameraConnection:Disconnect()
                getgenv().CameraConnection = nil
            end
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                Camera.CameraSubject = LocalPlayer.Character.Humanoid
            end
        end
    end
})

ChildTab:AddParagraph({
    Title = "FE",
    Content = "Funcionalidades FE"
})

local Tab = Window:MakeTab({"Teleportes", "tp"}) -- Nome do √≠cone: 'portal' em min√∫sculo para teleporte

-- Bot√µes de Teleporte
local teleportButtons = {
    {"Aos Bastidores", CFrame.new(192, 4, 272)},
    {"Ao Centro Urbano", CFrame.new(136, 4, 117)},
    {"√Ä √Årea do Crime", CFrame.new(-119, -28, 235)},
    {"√Ä Casa Deserta", CFrame.new(986, 4, 63)},
    {"Ao Portal da Ag√™ncia", CFrame.new(672, 4, -296)},
    {"Ao Esconderijo", CFrame.new(505, -75, 143)},
    {"√Ä Escola", CFrame.new(-312, 4, 211)},
    {"Ao Caf√© Brook", CFrame.new(161, 8, 52)},
    {"Ao Ponto Inicial", CFrame.new(-26, 4, -23)},
    {"Ao Arco Principal", CFrame.new(-589, 141, -59)},
    {"Ao Hospital", CFrame.new(-309, 4, 71)},
    {"√Ä Base da Ag√™ncia", CFrame.new(179, 4, -464)},
    {"√Ä Sala Oculta da Oficina", CFrame.new(0, 4, -495)},
    {"√Ä Sala Secreta 2", CFrame.new(-343, 4, -613)},
    {"√Ä Ilha Isolada", CFrame.new(-1925, 23, 127)},
    {"√Ä Pra√ßa dos Hot√©is", CFrame.new(182, 4, 150)},
    {"Escalar Montanha 1", CFrame.new(-670, 251, 765)},
    {"Ao Banco Principal", CFrame.new(2.28, 4.65, 254.58)},
    {"√Ä Loja de Roupas", CFrame.new(-46.15, 4.65, 253.20)},
    {"Ao Ref√∫gio", CFrame.new(-88.48, 22.05, 262.34)},
    {"√Ä Cl√≠nica Dent√°ria", CFrame.new(-53.58, 22.15, 265.61)},
    {"√Ä Cafeteria", CFrame.new(-97.12, 4.65, 254.99)}
}

for _, btn in ipairs(teleportButtons) do
    Tab:AddButton({
        btn[1],
        function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = btn[2]
        end
    })
end


local UniversalTab = Window:MakeTab({"Scripts", "plane"})

-- Se√ß√£o para Scripts Universais
Section = UniversalTab:AddSection({
    Name = "Scripts Universais"
})

-- Bot√£o para Linux Hub
UniversalTab:AddButton({
    Name = "Linux Hub",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Shadow6698/Linux-hub/refs/heads/main/Main.txt"))()
    end
})

-- Bot√£o para Cartola Hub 
UniversalTab:AddButton({
    Name = "Cartola Hub",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Davi999z/Cartola-Hub/refs/heads/main/Brookhaven",true))()
    end
})

-- Bot√£o para Furia Hub
UniversalTab:AddButton({
    Name = "F√∫ria Hub",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Dboas123432sx/bsx_hub/refs/heads/main/FURIAHUB-v1"))()
    end
})

-- Bot√£o para Infinite Yield
UniversalTab:AddButton({
    Name = "InfiniteYield - Cmd",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end
})

-- Bot√£o para Nameless Admin
UniversalTab:AddButton({
    Name = "Nameless Admin",
    Callback = function()
          loadstring(game:HttpGet("https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source"))()
    end
})

-- Bot√£o para Ghost Hub
UniversalTab:AddButton({
    Name = "Ghost Hub",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/GhostHub'))()
    end
})

UniversalTab:AddButton({
    Name = "Drip Client",
    Callback = function()
        loadstring(game:HttpGet(('https://raw.githubusercontent.com/realgengar/Main/refs/heads/main/base.lua'),true))()
    end
})

UniversalTab:AddButton({
    Name = "SHNMAX",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/joelmadasilvademorais-glitch/Fffgy/refs/heads/main/SHNMAX%20Texto.txt"))()
    end
})
